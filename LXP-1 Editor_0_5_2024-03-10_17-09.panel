<?xml version="1.0" encoding="UTF-8"?>

<panel name="LXP-1 Editor" panelShowDialogs="1" panelMessageTime="10000"
       panelAuthorName="tonfisch" panelAuthorEmail="" panelAuthorUrl=""
       panelAuthorDesc="" panelVersionMajor="0" panelVersionMinor="5"
       panelVersionName="" panelVendor="Lexicon" panelDevice="LXP-1"
       panelMidiSnapshotAfterLoad="0" panelMidiSnapshotAfterProgramChange="0"
       panelMidiSnapshotDelay="10" panelMidiSnapshotShowProgress="0"
       panelMidiInputChannelDevice="1" panelMidiInputDevice="2- MIDISPORT 2x2 In A"
       panelMidiControllerChannelDevice="1" panelMidiControllerDevice="-- None"
       panelMidiOutputChannelDevice="1" panelMidiOutputDevice="2- MIDISPORT 2x2 Out A"
       panelMidiInputFromHost="0" panelMidiInputChannelHost="1" panelMidiOutputToHost="0"
       panelMidiOutputChannelHost="1" panelMidiThruH2H="0" panelMidiThruH2HChannelize="0"
       panelMidiThruH2D="0" panelMidiThruH2DChannelize="0" panelMidiThruD2D="0"
       panelMidiThruD2DChannelize="0" panelMidiThruD2H="0" panelMidiThruD2HChannelize="0"
       panelMidiRealtimeIgnore="1" panelMidiInputThreadPriority="7"
       panelMidiProgram="0" panelMidiBankLsb="0" panelMidiBankMsb="0"
       panelMidiSendProgramChangeOnLoad="0" panelMidiProgramCalloutOnprogramChange="0"
       panelMidiMatchCacheSize="32" panelMidiGlobalDelay="0" panelMidiPauseOut="0"
       panelMidiPauseIn="0" panelOSCEnabled="0" panelOSCPort="-1" panelOSCProtocol="0"
       luaPanelMidiChannelChanged="onMidChChange" luaPanelMidiReceived="receivedMidi"
       luaPanelMidiMultiReceived="-- None" luaPanelLoaded="on_panel_load"
       luaPanelBeforeLoad="before_panel_load" luaPanelSaved="-- None"
       luaPanelResourcesLoaded="-- None" luaPanelProgramChanged="-- None"
       luaPanelGlobalChanged="-- None" luaPanelMessageHandler="-- None"
       luaPanelModulatorValueChanged="-- None" luaPanelSaveState="-- None"
       luaPanelRestoreState="-- None" luaPanelMidiSnapshotPost="-- None"
       luaPanelMidiSnapshotPre="-- None" luaAudioProcessBlock="-- None"
       luaPanelOSCReceived="-- None" panelFilePath="C:\Users\tf\Desktop\Studiokram\CRLR\LXP-1\LXP-1 Editor_0_5_2024-03-10_16-58.panel"
       panelUID="8.c8yHir40g7D" panelInstanceUID="sa1x" panelInstanceManufacturerID="VPfv"
       panelModulatorListColumns="&lt;TABLELAYOUT sortedCol=&quot;125&quot; sortForwards=&quot;1&quot;&gt;&lt;COLUMN id=&quot;612&quot; visible=&quot;1&quot; width=&quot;139&quot;/&gt;&lt;COLUMN id=&quot;125&quot; visible=&quot;1&quot; width=&quot;88&quot;/&gt;&lt;COLUMN id=&quot;663&quot; visible=&quot;1&quot; width=&quot;163&quot;/&gt;&lt;COLUMN id=&quot;1&quot; visible=&quot;1&quot; width=&quot;108&quot;/&gt;&lt;COLUMN id=&quot;611&quot; visible=&quot;1&quot; width=&quot;108&quot;/&gt;&lt;COLUMN id=&quot;613&quot; visible=&quot;1&quot; width=&quot;131&quot;/&gt;&lt;COLUMN id=&quot;123&quot; visible=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;COLUMN id=&quot;127&quot; visible=&quot;1&quot; width=&quot;108&quot;/&gt;&lt;COLUMN id=&quot;128&quot; visible=&quot;1&quot; width=&quot;108&quot;/&gt;&lt;COLUMN id=&quot;135&quot; visible=&quot;1&quot; width=&quot;108&quot;/&gt;&lt;COLUMN id=&quot;555&quot; visible=&quot;1&quot; width=&quot;108&quot;/&gt;&lt;COLUMN id=&quot;552&quot; visible=&quot;1&quot; width=&quot;108&quot;/&gt;&lt;COLUMN id=&quot;556&quot; visible=&quot;1&quot; width=&quot;131&quot;/&gt;&lt;COLUMN id=&quot;18&quot; visible=&quot;1&quot; width=&quot;108&quot;/&gt;&lt;COLUMN id=&quot;19&quot; visible=&quot;1&quot; width=&quot;108&quot;/&gt;&lt;COLUMN id=&quot;151&quot; visible=&quot;1&quot; width=&quot;86&quot;/&gt;&lt;/TABLELAYOUT&gt;"
       panelModulatorListCsvDelimiter="," panelModulatorListXmlRoot="ctrlrModulatorList"
       panelModulatorListXmlModulator="ctrlrModulator" panelModulatorListSortOption="1"
       panelGlobalVariables="0:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1"
       panelResources="-- None" panelPropertyDisplayIDs="0" ctrlrMenuItemBackgroundColour="ffffffff"
       ctrlrMenuItemTextColour="ff000000" ctrlrMenuItemHighlightedTextColour="ffffffff"
       ctrlrMenuItemHighlightColour="ff4364ff" ctrlrMenuItemFont="&lt;Sans-Serif&gt;;18;0;0;0;0;1;3"
       ctrlrMenuItemSeparatorColour="44000000" ctrlrMenuItemHeaderColour="ff000000"
       ctrlrMenuBarBackgroundColour1="fff7f7f7" ctrlrMenuBarBackgroundColour2="ffcccccc"
       ctrlrMenuBarTextColour="ff000000" ctrlrMenuBarHighlightedTextColour="ffffffff"
       ctrlrMenuBarHighlightColour="ff4364ff" ctrlrMenuBarFont="&lt;Sans-Serif&gt;;18;0;0;0;0;1;3"
       ctrlrUseEditorWrapper="0" panelIndex="0" uiPanelModulatorListViewTree="1">
  <uiWindowManager>
    <uiChildWindow uiChildWindowName="LuaMethodEditor" uiChildWindowState="2640 217 1512 989">
      <uiChildWindowContentState luaMethodEditor="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#13;&#10;&#13;&#10;&lt;OPEN id=&quot;LUA&quot; scrollPos=&quot;0&quot;&gt;&#13;&#10;  &lt;OPEN id=&quot;helper&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;Reporters&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;ChMod&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;getValues&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;Assign&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;Start&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;tables&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;Preset&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;Timer&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;Construct&quot;/&gt;&#13;&#10;  &lt;SELECTED id=&quot;/LUA/helper/deselectListRows&quot;/&gt;&#13;&#10;&lt;/OPEN&gt;&#13;&#10;;3463d06ff8074305ad7ba253a4a861bc:ccc1637262474af49d4934162a0e48b6:70ea1a1049b84dfba21759dd6020a410:23b31d341c264bbba715724619dae93c:556da3c54c9a47b184cf2d7da0c40117:9d28f7c873ef496abd59bab77fdb2a61:f00d12c239eb40789095ed08007ac9c1:65a8a854226f4ef9b54f58ba57c54579:d68758d478b547129f7b5d5c7190bd31:63e3698dc3b24caf86c9233d646b5e59:88acf1560fd14bed86c0c4fac66c015f:1e7b954f9128457789ca9fe73b8062ed:f1aae4f937a84d42bdaeed8d1658dba9:404e0ed5fce04248846cc3052ff5ecb0:dee8d92b074440d6a8cebec210ea6ff8:db39f8b11f834fe7856ad676ebd3f8d9:b5aa20e7939348b281c28ce1ac6d6ca5:98d91583f7784b5a90c84ab08e26aa00:0f9f5a2fec404bb5ae48ef4d793cfdb8:61dc0705a3f1450b9f962efc115af0cf:9b0e96f730374602a499cdd146b6e4a8:9cb27fc374d545d881060635d7e9dcc5:038496f52a8e42f6a6b5e8c7e5027ae1:edfe354bc29941cdaa7391c0e2c91279:fb6b62f66f994b86881c802ee02a9fd7:975397ba162d4ecb9c26ce9b500e9a41:96146ba8a6494b9d94bba6434b120a6a:b5a70b44019a4b8b99fc7abea568f96f:5cbc808c39054d36bac56e6952e5074d:30aae470ed7d4907badd7f12e54eb104:baa04232e3354a309251a1546dc0b189:a708f67f88e04f11a74d137c6c02bd0c:f3b3edf1d78c441dbd10af2ca4e80dca:1f6d2df88f454dfabebdc35707ba4f97:19390315b4764aeca15981d0d1954d3a:97352f59383b42a98e8c0869d6053f3f:f6007c32371642fcb779417c45c88148:23cd714564ca49c1ad37682861c0b333:d5890fc28c064c9fa57a4fcf0377a135"/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="LuaMethodEditor" uiChildWindowState="fs 2818 63 1278 1368">
      <uiChildWindowContentState luaMethodEditor="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#13;&#10;&#13;&#10;&lt;OPEN id=&quot;LUA&quot; scrollPos=&quot;576&quot;&gt;&#13;&#10;  &lt;OPEN id=&quot;helper&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;Reporters&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;ChMod&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;getValues&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;Assign&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;Start&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;tables&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;Preset&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;Timer&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;Construct&quot;/&gt;&#13;&#10;  &lt;SELECTED id=&quot;/LUA/Timer/delGetActSetup&quot;/&gt;&#13;&#10;&lt;/OPEN&gt;&#13;&#10;;ccc1637262474af49d4934162a0e48b6:3463d06ff8074305ad7ba253a4a861bc:9d28f7c873ef496abd59bab77fdb2a61:9fa7184e5c9f4152bcdb3465060e87ef:baa04232e3354a309251a1546dc0b189:1e7b954f9128457789ca9fe73b8062ed:fb6b62f66f994b86881c802ee02a9fd7:f712021d3e344b5a9ffc680626cdf695:4c4113a124674b37b73ab8ed2c93fbe2:30aae470ed7d4907badd7f12e54eb104:dfa538ea62774dbd8b28157a1e095837:9242666798b845f1bdb3137f576b6779:16ab35900e1f46de9737fde96e03153d:b0433c6b19b14a7aa64c6bd121ce7934:c873c852074e4bf8a6cfeaab3b6a399a:96146ba8a6494b9d94bba6434b120a6a:64f62e1b5a764ad2adfcb41cc3046a3c:ddca59bad6fd40fc9edeb8544a41d3d5:cde6790d126b48a68f3706e4d50c0331:02ce6f2f9fb344a79a8e884ba0a14db2:d7f2ea73446c41f2815c44084c7d3249:bcfe8671c2a7426bb584e5262a41135e:edfe354bc29941cdaa7391c0e2c91279:57693edc64ec4fd2a6b3b0f13e1c72b7:405aa65524034acfbb409b792c25e51d:98d91583f7784b5a90c84ab08e26aa00:f1aae4f937a84d42bdaeed8d1658dba9:2b0bc37978af41808cc847c62015290b:975397ba162d4ecb9c26ce9b500e9a41:a708f67f88e04f11a74d137c6c02bd0c:f3b3edf1d78c441dbd10af2ca4e80dca:1f6d2df88f454dfabebdc35707ba4f97:97352f59383b42a98e8c0869d6053f3f:dee8d92b074440d6a8cebec210ea6ff8:556da3c54c9a47b184cf2d7da0c40117:88acf1560fd14bed86c0c4fac66c015f:19390315b4764aeca15981d0d1954d3a:70ea1a1049b84dfba21759dd6020a410:5cbc808c39054d36bac56e6952e5074d:537326258aab45dbaba9f2e4e12b4fea:7e39c65d2b9047b19658c17c3560ef22:23b31d341c264bbba715724619dae93c:f6007c32371642fcb779417c45c88148:63e3698dc3b24caf86c9233d646b5e59:fc90773e1ed74839a0da215e766d54a5:23cd714564ca49c1ad37682861c0b333:d5890fc28c064c9fa57a4fcf0377a135:b5aa20e7939348b281c28ce1ac6d6ca5:e19011f8f87443fbb7178e2bf9c52dd1:13bbeaa85e0f4edda6fc44c488e6433c:c6d6c7f1397840af8474962b1a22726b:91d9463c729943bc81385acf60a205b6:abb567a688e447ea8b0d4d5a14488615:404e0ed5fce04248846cc3052ff5ecb0:0f9f5a2fec404bb5ae48ef4d793cfdb8:8f4fa81e672e45df8d4717f5e1d88b17:61dc0705a3f1450b9f962efc115af0cf:773d98eda95d4f2f84c5ffd31e46c73b:9b0e96f730374602a499cdd146b6e4a8:65a8a854226f4ef9b54f58ba57c54579:d68758d478b547129f7b5d5c7190bd31:f00d12c239eb40789095ed08007ac9c1:038496f52a8e42f6a6b5e8c7e5027ae1:e1705c2b21124f9e9ae52f25207daf81:76a19415af7c4d0bb906472c4ff65615:7b81951155aa44719ff5801116e10273:b5a70b44019a4b8b99fc7abea568f96f:9cb27fc374d545d881060635d7e9dcc5"/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="MIDILibrary" uiChildWindowState="880 450 800 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="ModulatorList" uiChildWindowState="266 94 1860 1189">
      <uiChildWindowContentState/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="LuaConsole" uiChildWindowState="880 450 800 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="LayerEditor" uiChildWindowState="3979 108 800 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
  </uiWindowManager>
  <midiLibrary uuid="a7daf8af1fde41d8aad908d148366edf" luaTransInfo="-- None"
               midiLibraryParameterIndexProperty="modulatorCustomIndex" midiLibraryMidiProgramChangeControl="0"
               midiLibrarySendSnapAfterPChg="0" midiLibraryDefaultBankName="New Bank - %H:%M:%S"
               midiLibraryDefaultProgramName="New Program - %H:%M:%S" midiLibraryDefaultSnapshotName="Snapshot - %H:%M:%S"
               midiLibraryCustomRequests="" midiLibraryTreeState="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#13;&#10;&#13;&#10;&lt;OPEN id=&quot;midiLibrary&quot; scrollPos=&quot;0&quot;/&gt;&#13;&#10;">
    <midiLibrarySnapshots name="Snapshots"/>
    <midiLibraryFirmware name="Firmware"/>
    <midiLibraryEditBuffer name="Edit buffer"/>
    <midiLibraryTransactions name="Transactions"/>
  </midiLibrary>
  <luaManager>
    <luaManagerMethods>
      <luaMethodGroup name="Built-In" uuid="3c26aff672df4f8685340936e80f250c">
        <luaMethod luaMethodName="table_dump" luaMethodCode="-- @1.1&#13;&#10;--&#13;&#10;-- Print table contents&#13;&#10;--&#13;&#10;function table_dump(table)&#13;&#10;&#9;for key,value in ipairs(table) do&#13;&#10;&#9;&#9;_DBG (&quot;KEY= [&quot;..key..&quot;]&quot;)&#13;&#10;&#13;&#10;&#9;&#9;if (type(value) == &quot;table&quot;) then&#13;&#10;&#9;&#9;&#9;table_dump(value)&#13;&#10;&#9;&#9;elseif (type(value) == &quot;nil&quot;) then&#13;&#10;&#9;&#9;&#9;_DBG (&quot; = NIL&quot;)&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;what (value)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000001"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="what" luaMethodCode="-- @1.1&#13;&#10;--&#13;&#10;-- Print methods for an object&#13;&#10;--&#13;&#10;function what(o)&#13;&#10;&#9;info = class_info(o)&#13;&#10;&#9;if info ~= nil then&#13;&#10;&#9;&#9;ret = &quot;Object type [&quot; .. info.name .. &quot;]\n-----------------------------------------------------------------\n\n&quot;..&quot;Members:\n&quot;&#13;&#10;&#13;&#10;&#9;&#9;if info.name == &quot;table&quot; then&#13;&#10;&#9;&#9;&#9;table_dump(o)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;for k, v in pairs(info.methods) do&#13;&#10;&#9;&#9;&#9;ret = ret .. string.format (&quot;\t%30s:\t%5s\n&quot;, k, type(v))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;ret = ret .. &quot;\n\nAttributes:\n&quot;&#13;&#10;&#9;&#9;for k, v in pairs(info.attributes) do&#13;&#10;&#9;&#9;&#9;ret = ret .. string.format (&quot;\t%30s:\t%5s\n&quot;, k, type(v))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;console (ret)&#13;&#10;&#9;return ret&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000002"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="how" luaMethodCode="-- @1.1&#13;&#10;--&#13;&#10;-- Print all available classes&#13;&#10;--&#13;&#10;function how()&#13;&#10;&#9;ret = &quot;Available classes:\n&quot;&#13;&#10;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;for i,v in ipairs(class_names()) do&#13;&#10;&#9;&#9;ret = ret .. &quot;\t&quot;.. v .. &quot;\n&quot;&#13;&#10;&#9;end&#13;&#10;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;console (J(ret))&#13;&#10;&#9;return ret&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000003"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="json4lua" luaMethodCode="-----------------------------------------------------------------------------&#13;&#10;-- JSON4Lua: JSON encoding / decoding support for the Lua language.&#13;&#10;-- json Module.&#13;&#10;-- Author: Craig Mason-Jones&#13;&#10;-- Homepage: http://json.luaforge.net/&#13;&#10;-- Version: 0.9.40&#13;&#10;-- This module is released under the MIT License (MIT).&#13;&#10;-- Please see LICENCE.txt for details.&#13;&#10;--&#13;&#10;-- USAGE:&#13;&#10;-- This module exposes two functions:&#13;&#10;--   encode(o)&#13;&#10;--     Returns the table / string / boolean / number / nil / json.null value as a JSON-encoded string.&#13;&#10;--   decode(json_string)&#13;&#10;--     Returns a Lua object populated with the data encoded in the JSON string json_string.&#13;&#10;--&#13;&#10;-- REQUIREMENTS:&#13;&#10;--   compat-5.1 if using Lua 5.0&#13;&#10;--&#13;&#10;-- CHANGELOG&#13;&#10;--   0.9.20 Introduction of local Lua functions for private functions (removed _ function prefix). &#13;&#10;--          Fixed Lua 5.1 compatibility issues.&#13;&#10;--   &#9;&#9;Introduced json.null to have null values in associative arrays.&#13;&#10;--          encode() performance improvement (more than 50%) through table.concat rather than ..&#13;&#10;--          Introduced decode ability to ignore /**/ comments in the JSON string.&#13;&#10;--   0.9.10 Fix to array encoding / decoding to correctly manage nil/null values in arrays.&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;-- Imports and dependencies&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;local math = require('math')&#13;&#10;local string = require(&quot;string&quot;)&#13;&#10;local table = require(&quot;table&quot;)&#13;&#10;&#13;&#10;local base = _G&#13;&#10;&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;-- Module declaration&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;module(&quot;json&quot;)&#13;&#10;&#13;&#10;-- Public functions&#13;&#10;&#13;&#10;-- Private functions&#13;&#10;local decode_scanArray&#13;&#10;local decode_scanComment&#13;&#10;local decode_scanConstant&#13;&#10;local decode_scanNumber&#13;&#10;local decode_scanObject&#13;&#10;local decode_scanString&#13;&#10;local decode_scanWhitespace&#13;&#10;local encodeString&#13;&#10;local isArray&#13;&#10;local isEncodable&#13;&#10;&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;-- PUBLIC FUNCTIONS&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;--- Encodes an arbitrary Lua object / variable.&#13;&#10;-- @param v The Lua object / variable to be JSON encoded.&#13;&#10;-- @return String containing the JSON encoding in internal Lua string format (i.e. not unicode)&#13;&#10;function encode (v)&#13;&#10;  -- Handle nil values&#13;&#10;  if v==nil then&#13;&#10;    return &quot;null&quot;&#13;&#10;  end&#13;&#10;  &#13;&#10;  local vtype = base.type(v)  &#13;&#10;&#13;&#10;  -- Handle strings&#13;&#10;  if vtype=='string' then    &#13;&#10;    return '&quot;' .. encodeString(v) .. '&quot;'&#9;    -- Need to handle encoding in string&#13;&#10;  end&#13;&#10;  &#13;&#10;  -- Handle booleans&#13;&#10;  if vtype=='number' or vtype=='boolean' then&#13;&#10;    return base.tostring(v)&#13;&#10;  end&#13;&#10;  &#13;&#10;  -- Handle tables&#13;&#10;  if vtype=='table' then&#13;&#10;    local rval = {}&#13;&#10;    -- Consider arrays separately&#13;&#10;    local bArray, maxCount = isArray(v)&#13;&#10;    if bArray then&#13;&#10;      for i = 1,maxCount do&#13;&#10;        table.insert(rval, encode(v[i]))&#13;&#10;      end&#13;&#10;    else&#9;-- An object, not an array&#13;&#10;      for i,j in base.pairs(v) do&#13;&#10;        if isEncodable(i) and isEncodable(j) then&#13;&#10;          table.insert(rval, '&quot;' .. encodeString(i) .. '&quot;:' .. encode(j))&#13;&#10;        end&#13;&#10;      end&#13;&#10;    end&#13;&#10;    if bArray then&#13;&#10;      return '[' .. table.concat(rval,',') ..']'&#13;&#10;    else&#13;&#10;      return '{' .. table.concat(rval,',') .. '}'&#13;&#10;    end&#13;&#10;  end&#13;&#10;  &#13;&#10;  -- Handle null values&#13;&#10;  if vtype=='function' and v==null then&#13;&#10;    return 'null'&#13;&#10;  end&#13;&#10;  &#13;&#10;  base.assert(false,'encode attempt to encode unsupported type ' .. vtype .. ':' .. base.tostring(v))&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;--- Decodes a JSON string and returns the decoded value as a Lua data structure / value.&#13;&#10;-- @param s The string to scan.&#13;&#10;-- @param [startPos] Optional starting position where the JSON string is located. Defaults to 1.&#13;&#10;-- @param Lua object, number The object that was scanned, as a Lua table / string / number / boolean or nil,&#13;&#10;-- and the position of the first character after&#13;&#10;-- the scanned JSON object.&#13;&#10;function decode(s, startPos)&#13;&#10;  startPos = startPos and startPos or 1&#13;&#10;  startPos = decode_scanWhitespace(s,startPos)&#13;&#10;  base.assert(startPos&lt;=string.len(s), 'Unterminated JSON encoded object found at position in [' .. s .. ']')&#13;&#10;  local curChar = string.sub(s,startPos,startPos)&#13;&#10;  -- Object&#13;&#10;  if curChar=='{' then&#13;&#10;    return decode_scanObject(s,startPos)&#13;&#10;  end&#13;&#10;  -- Array&#13;&#10;  if curChar=='[' then&#13;&#10;    return decode_scanArray(s,startPos)&#13;&#10;  end&#13;&#10;  -- Number&#13;&#10;  if string.find(&quot;+-0123456789.e&quot;, curChar, 1, true) then&#13;&#10;    return decode_scanNumber(s,startPos)&#13;&#10;  end&#13;&#10;  -- String&#13;&#10;  if curChar==[[&quot;]] or curChar==[[']] then&#13;&#10;    return decode_scanString(s,startPos)&#13;&#10;  end&#13;&#10;  if string.sub(s,startPos,startPos+1)=='/*' then&#13;&#10;    return decode(s, decode_scanComment(s,startPos))&#13;&#10;  end&#13;&#10;  -- Otherwise, it must be a constant&#13;&#10;  return decode_scanConstant(s,startPos)&#13;&#10;end&#13;&#10;&#13;&#10;--- The null function allows one to specify a null value in an associative array (which is otherwise&#13;&#10;-- discarded if you set the value with 'nil' in Lua. Simply set t = { first=json.null }&#13;&#10;function null()&#13;&#10;  return null -- so json.null() will also return null ;-)&#13;&#10;end&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;-- Internal, PRIVATE functions.&#13;&#10;-- Following a Python-like convention, I have prefixed all these 'PRIVATE'&#13;&#10;-- functions with an underscore.&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;&#13;&#10;--- Scans an array from JSON into a Lua object&#13;&#10;-- startPos begins at the start of the array.&#13;&#10;-- Returns the array and the next starting position&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The starting position for the scan.&#13;&#10;-- @return table, int The scanned array as a table, and the position of the next character to scan.&#13;&#10;function decode_scanArray(s,startPos)&#13;&#10;  local array = {}&#9;-- The return value&#13;&#10;  local stringLen = string.len(s)&#13;&#10;  base.assert(string.sub(s,startPos,startPos)=='[','decode_scanArray called but array does not start at position ' .. startPos .. ' in string:\n'..s )&#13;&#10;  startPos = startPos + 1&#13;&#10;  -- Infinite loop for array elements&#13;&#10;  repeat&#13;&#10;    startPos = decode_scanWhitespace(s,startPos)&#13;&#10;    base.assert(startPos&lt;=stringLen,'JSON String ended unexpectedly scanning array.')&#13;&#10;    local curChar = string.sub(s,startPos,startPos)&#13;&#10;    if (curChar==']') then&#13;&#10;      return array, startPos+1&#13;&#10;    end&#13;&#10;    if (curChar==',') then&#13;&#10;      startPos = decode_scanWhitespace(s,startPos+1)&#13;&#10;    end&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON String ended unexpectedly scanning array.')&#13;&#10;    object, startPos = decode(s,startPos)&#13;&#10;    table.insert(array,object)&#13;&#10;  until false&#13;&#10;end&#13;&#10;&#13;&#10;--- Scans a comment and discards the comment.&#13;&#10;-- Returns the position of the next character following the comment.&#13;&#10;-- @param string s The JSON string to scan.&#13;&#10;-- @param int startPos The starting position of the comment&#13;&#10;function decode_scanComment(s, startPos)&#13;&#10;  base.assert( string.sub(s,startPos,startPos+1)=='/*', &quot;decode_scanComment called but comment does not start at position &quot; .. startPos)&#13;&#10;  local endPos = string.find(s,'*/',startPos+2)&#13;&#10;  base.assert(endPos~=nil, &quot;Unterminated comment in string at &quot; .. startPos)&#13;&#10;  return endPos+2  &#13;&#10;end&#13;&#10;&#13;&#10;--- Scans for given constants: true, false or null&#13;&#10;-- Returns the appropriate Lua type, and the position of the next character to read.&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The position in the string at which to start scanning.&#13;&#10;-- @return object, int The object (true, false or nil) and the position at which the next character should be &#13;&#10;-- scanned.&#13;&#10;function decode_scanConstant(s, startPos)&#13;&#10;  local consts = { [&quot;true&quot;] = true, [&quot;false&quot;] = false, [&quot;null&quot;] = nil }&#13;&#10;  local constNames = {&quot;true&quot;,&quot;false&quot;,&quot;null&quot;}&#13;&#10;&#13;&#10;  for i,k in base.pairs(constNames) do&#13;&#10;    --print (&quot;[&quot; .. string.sub(s,startPos, startPos + string.len(k) -1) ..&quot;]&quot;, k)&#13;&#10;    if string.sub(s,startPos, startPos + string.len(k) -1 )==k then&#13;&#10;      return consts[k], startPos + string.len(k)&#13;&#10;    end&#13;&#10;  end&#13;&#10;  base.assert(nil, 'Failed to scan constant from string ' .. s .. ' at starting position ' .. startPos)&#13;&#10;end&#13;&#10;&#13;&#10;--- Scans a number from the JSON encoded string.&#13;&#10;-- (in fact, also is able to scan numeric +- eqns, which is not&#13;&#10;-- in the JSON spec.)&#13;&#10;-- Returns the number, and the position of the next character&#13;&#10;-- after the number.&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The position at which to start scanning.&#13;&#10;-- @return number, int The extracted number and the position of the next character to scan.&#13;&#10;function decode_scanNumber(s,startPos)&#13;&#10;  local endPos = startPos+1&#13;&#10;  local stringLen = string.len(s)&#13;&#10;  local acceptableChars = &quot;+-0123456789.e&quot;&#13;&#10;  while (string.find(acceptableChars, string.sub(s,endPos,endPos), 1, true)&#13;&#10;&#9;and endPos&lt;=stringLen&#13;&#10;&#9;) do&#13;&#10;    endPos = endPos + 1&#13;&#10;  end&#13;&#10;  local stringValue = 'return ' .. string.sub(s,startPos, endPos-1)&#13;&#10;  local stringEval = base.loadstring(stringValue)&#13;&#10;  base.assert(stringEval, 'Failed to scan number [ ' .. stringValue .. '] in JSON string at position ' .. startPos .. ' : ' .. endPos)&#13;&#10;  return stringEval(), endPos&#13;&#10;end&#13;&#10;&#13;&#10;--- Scans a JSON object into a Lua object.&#13;&#10;-- startPos begins at the start of the object.&#13;&#10;-- Returns the object and the next starting position.&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The starting position of the scan.&#13;&#10;-- @return table, int The scanned object as a table and the position of the next character to scan.&#13;&#10;function decode_scanObject(s,startPos)&#13;&#10;  local object = {}&#13;&#10;  local stringLen = string.len(s)&#13;&#10;  local key, value&#13;&#10;  base.assert(string.sub(s,startPos,startPos)=='{','decode_scanObject called but object does not start at position ' .. startPos .. ' in string:\n' .. s)&#13;&#10;  startPos = startPos + 1&#13;&#10;  repeat&#13;&#10;    startPos = decode_scanWhitespace(s,startPos)&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly while scanning object.')&#13;&#10;    local curChar = string.sub(s,startPos,startPos)&#13;&#10;    if (curChar=='}') then&#13;&#10;      return object,startPos+1&#13;&#10;    end&#13;&#10;    if (curChar==',') then&#13;&#10;      startPos = decode_scanWhitespace(s,startPos+1)&#13;&#10;    end&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly scanning object.')&#13;&#10;    -- Scan the key&#13;&#10;    key, startPos = decode(s,startPos)&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly searching for value of key ' .. key)&#13;&#10;    startPos = decode_scanWhitespace(s,startPos)&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly searching for value of key ' .. key)&#13;&#10;    base.assert(string.sub(s,startPos,startPos)==':','JSON object key-value assignment mal-formed at ' .. startPos)&#13;&#10;    startPos = decode_scanWhitespace(s,startPos+1)&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly searching for value of key ' .. key)&#13;&#10;    value, startPos = decode(s,startPos)&#13;&#10;    object[key]=value&#13;&#10;  until false&#9;-- infinite loop while key-value pairs are found&#13;&#10;end&#13;&#10;&#13;&#10;-- START SoniEx2&#13;&#10;-- Initialize some things used by decode_scanString&#13;&#10;-- You know, for efficiency&#13;&#10;local escapeSequences = {&#13;&#10;  [&quot;\\t&quot;] = &quot;\t&quot;,&#13;&#10;  [&quot;\\f&quot;] = &quot;\f&quot;,&#13;&#10;  [&quot;\\r&quot;] = &quot;\r&quot;,&#13;&#10;  [&quot;\\n&quot;] = &quot;\n&quot;,&#13;&#10;  [&quot;\\b&quot;] = &quot;\b&quot;&#13;&#10;}&#13;&#10;base.setmetatable(escapeSequences, {__index = function(t,k)&#13;&#10;  -- skip &quot;\&quot; aka strip escape&#13;&#10;  return string.sub(k,2)&#13;&#10;end})&#13;&#10;-- END SoniEx2&#13;&#10;&#13;&#10;--- Scans a JSON string from the opening inverted comma or single quote to the&#13;&#10;-- end of the string.&#13;&#10;-- Returns the string extracted as a Lua string,&#13;&#10;-- and the position of the next non-string character&#13;&#10;-- (after the closing inverted comma or single quote).&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The starting position of the scan.&#13;&#10;-- @return string, int The extracted string as a Lua string, and the next character to parse.&#13;&#10;function decode_scanString(s,startPos)&#13;&#10;  base.assert(startPos, 'decode_scanString(..) called without start position')&#13;&#10;  local startChar = string.sub(s,startPos,startPos)&#13;&#10;  -- START SoniEx2&#13;&#10;  -- PS: I don't think single quotes are valid JSON&#13;&#10;  base.assert(startChar == [[&quot;]] or startChar == [[']],'decode_scanString called for a non-string')&#13;&#10;  --base.assert(startPos, &quot;String decoding failed: missing closing &quot; .. startChar .. &quot; for string at position &quot; .. oldStart)&#13;&#10;  local t = {}&#13;&#10;  local i,j = startPos,startPos&#13;&#10;  while string.find(s, startChar, j+1) ~= j+1 do&#13;&#10;    local oldj = j&#13;&#10;    i,j = string.find(s, &quot;\\.&quot;, j+1)&#13;&#10;    local x,y = string.find(s, startChar, oldj+1)&#13;&#10;    if not i or x &lt; i then&#13;&#10;      base.print(s, startPos, string.sub(s,startPos,oldj))&#13;&#10;      i,j = x,y-1&#13;&#10;      if not x then base.print(s, startPos, string.sub(s,startPos,oldj)) end&#13;&#10;    end&#13;&#10;    table.insert(t, string.sub(s, oldj+1, i-1))&#13;&#10;    if string.sub(s, i, j) == &quot;\\u&quot; then&#13;&#10;      local a = string.sub(s,j+1,j+4)&#13;&#10;      j = j + 4&#13;&#10;      local n = base.tonumber(a, 16)&#13;&#10;      base.assert(n, &quot;String decoding failed: bad Unicode escape &quot; .. a .. &quot; at position &quot; .. i .. &quot; : &quot; .. j)&#13;&#10;      -- math.floor(x/2&#94;y) == lazy right shift&#13;&#10;      -- a % 2&#94;b == bitwise_and(a, (2&#94;b)-1)&#13;&#10;      -- 64 = 2&#94;6&#13;&#10;      -- 4096 = 2&#94;12 (or 2&#94;6 * 2&#94;6)&#13;&#10;      local x&#13;&#10;      if n &lt; 0x80 then&#13;&#10;        x = string.char(n % 0x80)&#13;&#10;      elseif n &lt; 0x800 then&#13;&#10;        -- [110x xxxx] [10xx xxxx]&#13;&#10;        x = string.char(0xC0 + (math.floor(n/64) % 0x20), 0x80 + (n % 0x40))&#13;&#10;      else&#13;&#10;        -- [1110 xxxx] [10xx xxxx] [10xx xxxx]&#13;&#10;        x = string.char(0xE0 + (math.floor(n/4096) % 0x10), 0x80 + (math.floor(n/64) % 0x40), 0x80 + (n % 0x40))&#13;&#10;      end&#13;&#10;      table.insert(t, x)&#13;&#10;    else&#13;&#10;      table.insert(t, escapeSequences[string.sub(s, i, j)])&#13;&#10;    end&#13;&#10;  end&#13;&#10;  table.insert(t,string.sub(j, j+1))&#13;&#10;  base.assert(string.find(s, startChar, j+1), &quot;String decoding failed: missing closing &quot; .. startChar .. &quot; at position &quot; .. j .. &quot;(for string at position &quot; .. startPos .. &quot;)&quot;)&#13;&#10;  return table.concat(t,&quot;&quot;), j+2&#13;&#10;  -- END SoniEx2&#13;&#10;end&#13;&#10;&#13;&#10;--- Scans a JSON string skipping all whitespace from the current start position.&#13;&#10;-- Returns the position of the first non-whitespace character, or nil if the whole end of string is reached.&#13;&#10;-- @param s The string being scanned&#13;&#10;-- @param startPos The starting position where we should begin removing whitespace.&#13;&#10;-- @return int The first position where non-whitespace was encountered, or string.len(s)+1 if the end of string&#13;&#10;-- was reached.&#13;&#10;function decode_scanWhitespace(s,startPos)&#13;&#10;  local whitespace=&quot; \n\r\t&quot;&#13;&#10;  local stringLen = string.len(s)&#13;&#10;  while ( string.find(whitespace, string.sub(s,startPos,startPos), 1, true)  and startPos &lt;= stringLen) do&#13;&#10;    startPos = startPos + 1&#13;&#10;  end&#13;&#10;  return startPos&#13;&#10;end&#13;&#10;&#13;&#10;--- Encodes a string to be JSON-compatible.&#13;&#10;-- This just involves back-quoting inverted commas, back-quotes and newlines, I think ;-)&#13;&#10;-- @param s The string to return as a JSON encoded (i.e. backquoted string)&#13;&#10;-- @return The string appropriately escaped.&#13;&#10;&#13;&#10;local escapeList = {&#13;&#10;    ['&quot;']  = '\\&quot;',&#13;&#10;    ['\\'] = '\\\\',&#13;&#10;    ['/']  = '\\/', &#13;&#10;    ['\b'] = '\\b',&#13;&#10;    ['\f'] = '\\f',&#13;&#10;    ['\n'] = '\\n',&#13;&#10;    ['\r'] = '\\r',&#13;&#10;    ['\t'] = '\\t'&#13;&#10;}&#13;&#10;&#13;&#10;function encodeString(s)&#13;&#10; return s:gsub(&quot;.&quot;, function(c) return escapeList[c] end) -- SoniEx2: 5.0 compat&#13;&#10;end&#13;&#10;&#13;&#10;-- Determines whether the given Lua type is an array or a table / dictionary.&#13;&#10;-- We consider any table an array if it has indexes 1..n for its n items, and no&#13;&#10;-- other data in the table.&#13;&#10;-- I think this method is currently a little 'flaky', but can't think of a good way around it yet...&#13;&#10;-- @param t The table to evaluate as an array&#13;&#10;-- @return boolean, number True if the table can be represented as an array, false otherwise. If true,&#13;&#10;-- the second returned value is the maximum&#13;&#10;-- number of indexed elements in the array. &#13;&#10;function isArray(t)&#13;&#10;  -- Next we count all the elements, ensuring that any non-indexed elements are not-encodable &#13;&#10;  -- (with the possible exception of 'n')&#13;&#10;  local maxIndex = 0&#13;&#10;  for k,v in base.pairs(t) do&#13;&#10;    if (base.type(k)=='number' and math.floor(k)==k and 1&lt;=k) then&#9;-- k,v is an indexed pair&#13;&#10;      if (not isEncodable(v)) then return false end&#9;-- All array elements must be encodable&#13;&#10;      maxIndex = math.max(maxIndex,k)&#13;&#10;    else&#13;&#10;      if (k=='n') then&#13;&#10;        if v ~= table.getn(t) then return false end  -- False if n does not hold the number of elements&#13;&#10;      else -- Else of (k=='n')&#13;&#10;        if isEncodable(v) then return false end&#13;&#10;      end  -- End of (k~='n')&#13;&#10;    end -- End of k,v not an indexed pair&#13;&#10;  end  -- End of loop across all pairs&#13;&#10;  return true, maxIndex&#13;&#10;end&#13;&#10;&#13;&#10;--- Determines whether the given Lua object / table / variable can be JSON encoded. The only&#13;&#10;-- types that are JSON encodable are: string, boolean, number, nil, table and json.null.&#13;&#10;-- In this implementation, all other types are ignored.&#13;&#10;-- @param o The object to examine.&#13;&#10;-- @return boolean True if the object should be JSON encoded, false if it should be ignored.&#13;&#10;function isEncodable(o)&#13;&#10;  local t = base.type(o)&#13;&#10;  return (t=='string' or t=='boolean' or t=='number' or t=='nil' or t=='table') or (t=='function' and o==null) &#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000004"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="debugger.lua" luaMethodCode="--{{{  history&#13;&#10;&#13;&#10;--15/03/06 DCN Created based on RemDebug&#13;&#10;--28/04/06 DCN Update for Lua 5.1&#13;&#10;--01/06/06 DCN Fix command argument parsing&#13;&#10;--             Add step/over N facility&#13;&#10;--             Add trace lines facility&#13;&#10;--05/06/06 DCN Add trace call/return facility&#13;&#10;--06/06/06 DCN Make it behave when stepping through the creation of a coroutine&#13;&#10;--06/06/06 DCN Integrate the simple debugger into the main one&#13;&#10;--07/06/06 DCN Provide facility to step into coroutines&#13;&#10;--13/06/06 DCN Fix bug that caused the function environment to get corrupted with the global one&#13;&#10;--14/06/06 DCN Allow 'sloppy' file names when setting breakpoints&#13;&#10;--04/08/06 DCN Allow for no space after command name&#13;&#10;--11/08/06 DCN Use io.write not print&#13;&#10;--30/08/06 DCN Allow access to array elements in 'dump'&#13;&#10;--10/10/06 DCN Default to breakfile for all commands that require a filename and give '-'&#13;&#10;--06/12/06 DCN Allow for punctuation characters in DUMP variable names&#13;&#10;--03/01/07 DCN Add pause on/off facility&#13;&#10;--19/06/07 DCN Allow for duff commands being typed in the debugger (thanks to Michael.Bringmann@lsi.com)&#13;&#10;--             Allow for case sensitive file systems               (thanks to Michael.Bringmann@lsi.com)&#13;&#10;--04/08/09 DCN Add optional line count param to pause&#13;&#10;--05/08/09 DCN Reset the debug hook in Pause() even if we think we're started&#13;&#10;--30/09/09 DCN Re-jig to not use co-routines (makes debugging co-routines awkward)&#13;&#10;--01/10/09 DCN Add ability to break on reaching any line in a file&#13;&#10;--24/07/13 TWW Added code for emulating setfenv/getfenv in Lua 5.2 as per&#13;&#10;--             http://lua-users.org/lists/lua-l/2010-06/msg00313.html&#13;&#10;--25/07/13 TWW Copied Alex Parrill's fix for errors when tracing back across a C frame&#13;&#10;--             (https://github.com/ColonelThirtyTwo/clidebugger, 26/01/12)&#13;&#10;--25/07/13 DCN Allow for windows and unix file name conventions in has_breakpoint&#13;&#10;--26/07/13 DCN Allow for \ being interpreted as an escape inside a [] pattern in 5.2&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  description&#13;&#10;&#13;&#10;--A simple command line debug system for Lua written by Dave Nichols of&#13;&#10;--Match-IT Limited. Its public domain software. Do with it as you wish.&#13;&#10;&#13;&#10;--This debugger was inspired by:&#13;&#10;-- RemDebug 1.0 Beta&#13;&#10;-- Copyright Kepler Project 2005 (http://www.keplerproject.org/remdebug)&#13;&#10;&#13;&#10;--Usage:&#13;&#10;--  require('debugger')        --load the debug library&#13;&#10;--  pause(message)             --start/resume a debug session&#13;&#10;&#13;&#10;--An assert() failure will also invoke the debugger.&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;local IsWindows = string.find(string.lower(os.getenv('OS') or ''),'&#94;windows')&#13;&#10;&#13;&#10;local coro_debugger&#13;&#10;local events = { BREAK = 1, WATCH = 2, STEP = 3, SET = 4 }&#13;&#10;breakpoints = {}&#13;&#10;local watches = {}&#13;&#10;local step_into   = false&#13;&#10;local step_over   = false&#13;&#10;local step_lines  = 0&#13;&#10;local step_level  = {main=0}&#13;&#10;local stack_level = {main=0}&#13;&#10;local trace_level = {main=0}&#13;&#10;local trace_calls = false&#13;&#10;local trace_returns = false&#13;&#10;local trace_lines = false&#13;&#10;local ret_file, ret_line, ret_name&#13;&#10;local current_thread = 'main'&#13;&#10;local started = false&#13;&#10;local pause_off = false&#13;&#10;local _g      = _G&#13;&#10;local cocreate, cowrap = coroutine.create, coroutine.wrap&#13;&#10;local pausemsg = 'pause'&#13;&#10;&#13;&#10;--{{{  make Lua 5.2 compatible&#13;&#10;&#13;&#10;if not setfenv then -- Lua 5.2&#13;&#10;  --[[&#13;&#10;  As far as I can see, the only missing detail of these functions (except&#13;&#10;  for occasional bugs) to achieve 100% compatibility is the case of&#13;&#10;  'getfenv' over a function that does not have an _ENV variable (that is,&#13;&#10;  it uses no globals).&#13;&#10;&#13;&#10;  We could use a weak table to keep the environments of these functions&#13;&#10;  when set by setfenv, but that still misses the case of a function&#13;&#10;  without _ENV that was not subjected to setfenv.&#13;&#10;&#13;&#10;  -- Roberto&#13;&#10;  ]]--&#13;&#10;&#13;&#10;  setfenv = setfenv or function(f, t)&#13;&#10;    f = (type(f) == 'function' and f or debug.getinfo(f + 1, 'f').func)&#13;&#10;    local name&#13;&#10;    local up = 0&#13;&#10;    repeat&#13;&#10;      up = up + 1&#13;&#10;      name = debug.getupvalue(f, up)&#13;&#10;    until name == '_ENV' or name == nil&#13;&#10;    if name then&#13;&#10;      debug.upvaluejoin(f, up, function() return name end, 1) -- use unique upvalue&#13;&#10;      debug.setupvalue(f, up, t)&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;  getfenv = getfenv or function(f)&#13;&#10;    f = (type(f) == 'function' and f or debug.getinfo(f + 1, 'f').func)&#13;&#10;    local name, val&#13;&#10;    local up = 0&#13;&#10;    repeat&#13;&#10;      up = up + 1&#13;&#10;      name, val = debug.getupvalue(f, up)&#13;&#10;    until name == '_ENV' or name == nil&#13;&#10;    return val&#13;&#10;  end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  local hints -- command help&#13;&#10;--The format in here is name=summary|description&#13;&#10;local hints = {&#13;&#10;&#13;&#10;pause =   [[&#13;&#10;pause(msg[,lines][,force]) -- start/resume a debugger session|&#13;&#10;&#13;&#10;This can only be used in your code or from the console as a means to&#13;&#10;start/resume a debug session.&#13;&#10;If msg is given that is shown when the session starts/resumes. Useful to&#13;&#10;give a context if you've instrumented your code with pause() statements.&#13;&#10;&#13;&#10;If lines is given, the script pauses after that many lines, else it pauses&#13;&#10;immediately.&#13;&#10;&#13;&#10;If force is true, the pause function is honoured even if poff has been used.&#13;&#10;This is useful when in an interactive console session to regain debugger&#13;&#10;control.&#13;&#10;]],&#13;&#10;&#13;&#10;poff =    [[&#13;&#10;poff                -- turn off pause() command|&#13;&#10;&#13;&#10;This causes all pause() commands to be ignored. This is useful if you have&#13;&#10;instrumented your code in a busy loop and want to continue normal execution&#13;&#10;with no further interruption.&#13;&#10;]],&#13;&#10;&#13;&#10;pon =     [[&#13;&#10;pon                 -- turn on pause() command|&#13;&#10;&#13;&#10;This re-instates honouring the pause() commands you may have instrumented&#13;&#10;your code with.&#13;&#10;]],&#13;&#10;&#13;&#10;setb =    [[&#13;&#10;setb [line file]    -- set a breakpoint to line/file|, line 0 means 'any'&#13;&#10;&#13;&#10;If file is omitted or is &quot;-&quot; the breakpoint is set at the file for the&#13;&#10;currently set level (see &quot;set&quot;). Execution pauses when this line is about&#13;&#10;to be executed and the debugger session is re-activated.&#13;&#10;&#13;&#10;The file can be given as the fully qualified name, partially qualified or&#13;&#10;just the file name. E.g. if file is set as &quot;myfile.lua&quot;, then whenever&#13;&#10;execution reaches any file that ends with &quot;myfile.lua&quot; it will pause. If&#13;&#10;no extension is given, any extension will do.&#13;&#10;&#13;&#10;If the line is given as 0, then reaching any line in the file will do.&#13;&#10;]],&#13;&#10;&#13;&#10;delb =    [[&#13;&#10;delb [line file]    -- removes a breakpoint|&#13;&#10;&#13;&#10;If file is omitted or is &quot;-&quot; the breakpoint is removed for the file of the&#13;&#10;currently set level (see &quot;set&quot;).&#13;&#10;]],&#13;&#10;&#13;&#10;delallb = [[&#13;&#10;delallb             -- removes all breakpoints|&#13;&#10;]],&#13;&#10;&#13;&#10;setw =    [[&#13;&#10;setw &lt;exp&gt;          -- adds a new watch expression|&#13;&#10;&#13;&#10;The expression is evaluated before each line is executed. If the expression&#13;&#10;yields true then execution is paused and the debugger session re-activated.&#13;&#10;The expression is executed in the context of the line about to be executed.&#13;&#10;]],&#13;&#10;&#13;&#10;delw =    [[&#13;&#10;delw &lt;index&gt;        -- removes the watch expression at index|&#13;&#10;&#13;&#10;The index is that returned when the watch expression was set by setw.&#13;&#10;]],&#13;&#10;&#13;&#10;delallw = [[&#13;&#10;delallw             -- removes all watch expressions|&#13;&#10;]],&#13;&#10;&#13;&#10;run     = [[&#13;&#10;run                 -- run until next breakpoint or watch expression|&#13;&#10;]],&#13;&#10;&#13;&#10;step    = [[&#13;&#10;step [N]            -- run next N lines, stepping into function calls|&#13;&#10;&#13;&#10;If N is omitted, use 1.&#13;&#10;]],&#13;&#10;&#13;&#10;over    = [[&#13;&#10;over [N]            -- run next N lines, stepping over function calls|&#13;&#10;&#13;&#10;If N is omitted, use 1.&#13;&#10;]],&#13;&#10;&#13;&#10;out     = [[&#13;&#10;out [N]             -- run lines until stepped out of N functions|&#13;&#10;&#13;&#10;If N is omitted, use 1.&#13;&#10;If you are inside a function, using &quot;out 1&quot; will run until you return&#13;&#10;from that function to the caller.&#13;&#10;]],&#13;&#10;&#13;&#10;gotoo   = [[&#13;&#10;gotoo [line file]    -- step to line in file|&#13;&#10;&#13;&#10;This is equivalent to 'setb line file', followed by 'run', followed&#13;&#10;by 'delb line file'.&#13;&#10;]],&#13;&#10;&#13;&#10;listb   = [[&#13;&#10;listb               -- lists breakpoints|&#13;&#10;]],&#13;&#10;&#13;&#10;listw   = [[&#13;&#10;listw               -- lists watch expressions|&#13;&#10;]],&#13;&#10;&#13;&#10;set     = [[&#13;&#10;set [level]         -- set context to stack level, omitted=show|&#13;&#10;&#13;&#10;If level is omitted it just prints the current level set.&#13;&#10;This sets the current context to the level given. This affects the&#13;&#10;context used for several other functions (e.g. vars). The possible&#13;&#10;levels are those shown by trace.&#13;&#10;]],&#13;&#10;&#13;&#10;vars    = [[&#13;&#10;vars [depth]        -- list context locals to depth, omitted=1|&#13;&#10;&#13;&#10;If depth is omitted then uses 1.&#13;&#10;Use a depth of 0 for the maximum.&#13;&#10;Lists all non-nil local variables and all non-nil upvalues in the&#13;&#10;currently set context. For variables that are tables, lists all fields&#13;&#10;to the given depth.&#13;&#10;]],&#13;&#10;&#13;&#10;fenv    = [[&#13;&#10;fenv [depth]        -- list context function env to depth, omitted=1|&#13;&#10;&#13;&#10;If depth is omitted then uses 1.&#13;&#10;Use a depth of 0 for the maximum.&#13;&#10;Lists all function environment variables in the currently set context.&#13;&#10;For variables that are tables, lists all fields to the given depth.&#13;&#10;]],&#13;&#10;&#13;&#10;glob    = [[&#13;&#10;glob [depth]        -- list globals to depth, omitted=1|&#13;&#10;&#13;&#10;If depth is omitted then uses 1.&#13;&#10;Use a depth of 0 for the maximum.&#13;&#10;Lists all global variables.&#13;&#10;For variables that are tables, lists all fields to the given depth.&#13;&#10;]],&#13;&#10;&#13;&#10;ups     = [[&#13;&#10;ups                 -- list all the upvalue names|&#13;&#10;&#13;&#10;These names will also be in the &quot;vars&quot; list unless their value is nil.&#13;&#10;This provides a means to identify which vars are upvalues and which are&#13;&#10;locals. If a name is both an upvalue and a local, the local value takes&#13;&#10;precedance.&#13;&#10;]],&#13;&#10;&#13;&#10;locs    = [[&#13;&#10;locs                -- list all the locals names|&#13;&#10;&#13;&#10;These names will also be in the &quot;vars&quot; list unless their value is nil.&#13;&#10;This provides a means to identify which vars are upvalues and which are&#13;&#10;locals. If a name is both an upvalue and a local, the local value takes&#13;&#10;precedance.&#13;&#10;]],&#13;&#10;&#13;&#10;dump    = [[&#13;&#10;dump &lt;var&gt; [depth]  -- dump all fields of variable to depth|&#13;&#10;&#13;&#10;If depth is omitted then uses 1.&#13;&#10;Use a depth of 0 for the maximum.&#13;&#10;Prints the value of &lt;var&gt; in the currently set context level. If &lt;var&gt;&#13;&#10;is a table, lists all fields to the given depth. &lt;var&gt; can be just a&#13;&#10;name, or name.field or name.# to any depth, e.g. t.1.f accesses field&#13;&#10;'f' in array element 1 in table 't'.&#13;&#10;&#13;&#10;Can also be called from a script as dump(var,depth).&#13;&#10;]],&#13;&#10;&#13;&#10;tron    = [[&#13;&#10;tron [crl]          -- turn trace on for (c)alls, (r)etuns, (l)lines|&#13;&#10;&#13;&#10;If no parameter is given then tracing is turned off.&#13;&#10;When tracing is turned on a line is printed to the console for each&#13;&#10;debug 'event' selected. c=function calls, r=function returns, l=lines.&#13;&#10;]],&#13;&#10;&#13;&#10;trace   = [[&#13;&#10;trace               -- dumps a stack trace|&#13;&#10;&#13;&#10;Format is [level] = file,line,name&#13;&#10;The level is a candidate for use by the 'set' command.&#13;&#10;]],&#13;&#10;&#13;&#10;info    = [[&#13;&#10;info                -- dumps the complete debug info captured|&#13;&#10;&#13;&#10;Only useful as a diagnostic aid for the debugger itself. This information&#13;&#10;can be HUGE as it dumps all variables to the maximum depth, so be careful.&#13;&#10;]],&#13;&#10;&#13;&#10;show    = [[&#13;&#10;show line file X Y  -- show X lines before and Y after line in file|&#13;&#10;&#13;&#10;If line is omitted or is '-' then the current set context line is used.&#13;&#10;If file is omitted or is '-' then the current set context file is used.&#13;&#10;If file is not fully qualified and cannot be opened as specified, then&#13;&#10;a search for the file in the package[path] is performed using the usual&#13;&#10;&quot;require&quot; searching rules. If no file extension is given, .lua is used.&#13;&#10;Prints the lines from the source file around the given line.&#13;&#10;]],&#13;&#10;&#13;&#10;exit    = [[&#13;&#10;exit                -- exits debugger, re-start it using pause()|&#13;&#10;]],&#13;&#10;&#13;&#10;help    = [[&#13;&#10;help [command]      -- show this list or help for command|&#13;&#10;]],&#13;&#10;&#13;&#10;[&quot;&lt;statement&gt;&quot;] = [[&#13;&#10;&lt;statement&gt;         -- execute a statement in the current context|&#13;&#10;&#13;&#10;The statement can be anything that is legal in the context, including&#13;&#10;assignments. Such assignments affect the context and will be in force&#13;&#10;immediately. Any results returned are printed. Use '=' as a short-hand&#13;&#10;for 'return', e.g. &quot;=func(arg)&quot; will call 'func' with 'arg' and print&#13;&#10;the results, and &quot;=var&quot; will just print the value of 'var'.&#13;&#10;]],&#13;&#10;&#13;&#10;what    = [[&#13;&#10;what &lt;func&gt;         -- show where &lt;func&gt; is defined (if known)|&#13;&#10;]],&#13;&#10;&#13;&#10;}&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{ Local function to get table size&#13;&#10;local function tsize(t)&#13;&#10;    local count=0&#13;&#10;&#13;&#10;    for k,v in pairs(t) do&#13;&#10;        count = count + 1&#13;&#10;    end&#13;&#10;&#13;&#10;    return count&#13;&#10;end&#13;&#10;---}}}&#13;&#10;&#13;&#10;---{{{ Global utility function to set breakpoints, used inside Ctrlr&#13;&#10;function setBreakpoint(line, file, shouldBeSet)&#13;&#10;    if not breakpoints[line] then&#13;&#10;        breakpoints[line] = {}&#13;&#10;    end&#13;&#10;&#13;&#10;    if shouldBeSet then&#13;&#10;        breakpoints[line][file] = true&#13;&#10;    else&#13;&#10;        breakpoints[line] = nil&#13;&#10;    end&#13;&#10;end&#13;&#10;---}}}&#13;&#10;&#13;&#10;&#13;&#10;--{{{  local function getinfo(level,field)&#13;&#10;&#13;&#10;--like debug.getinfo but copes with no activation record at the given level&#13;&#10;--and knows how to get 'field'. 'field' can be the name of any of the&#13;&#10;--activation record fields or any of the 'what' names or nil for everything.&#13;&#10;--only valid when using the stack level to get info, not a function name.&#13;&#10;&#13;&#10;local function getinfo(level,field)&#13;&#10;  level = level + 1  --to get to the same relative level as the caller&#13;&#10;  if not field then return debug.getinfo(level) end&#13;&#10;  local what&#13;&#10;  if field == 'name' or field == 'namewhat' then&#13;&#10;    what = 'n'&#13;&#10;  elseif field == 'what' or field == 'source' or field == 'linedefined' or field == 'lastlinedefined' or field == 'short_src' then&#13;&#10;    what = 'S'&#13;&#10;  elseif field == 'currentline' then&#13;&#10;    what = 'l'&#13;&#10;  elseif field == 'nups' then&#13;&#10;    what = 'u'&#13;&#10;  elseif field == 'func' then&#13;&#10;    what = 'f'&#13;&#10;  else&#13;&#10;    return debug.getinfo(level,field)&#13;&#10;  end&#13;&#10;  local ar = debug.getinfo(level,what)&#13;&#10;  if ar then return ar[field] else return nil end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function indented( level, ... )&#13;&#10;&#13;&#10;local function indented( level, ... )&#13;&#10;  ctrlrDebugger:write( string.format (&quot;%s%s\n&quot;, string.rep('  ',level), table.concat({...}) ))&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function dumpval( level, name, value, limit )&#13;&#10;&#13;&#10;local dumpvisited&#13;&#10;&#13;&#10;local function dumpval( level, name, value, limit )&#13;&#10;    local index&#13;&#10;&#13;&#10;    if type(name) == 'number' then&#13;&#10;        index = string.format(&quot;%q,&quot;,name)&#13;&#10;    elseif type(name) == 'string' and (name == '__VARSLEVEL__' or name == '__ENVIRONMENT__' or name == '__GLOBALS__' or name == '__UPVALUES__' or name == '__LOCALS__') then&#13;&#10;        --ignore these, they are debugger generated&#13;&#10;        return&#13;&#10;    elseif type(name) == 'string' and string.find(name,'&#94;[_%a][_.%w]*$') then&#13;&#10;        index = string.format (&quot;%q: &quot;, name);&#13;&#10;    else&#13;&#10;        index = string.format (&quot;%q,&quot;, tostring(name))&#13;&#10;    end&#13;&#10;&#13;&#10;    if type(value) == 'table' then&#13;&#10;        if dumpvisited[value] then&#13;&#10;            indented (level, index, string.format(&quot;%q&quot;, dumpvisited[value]))&#13;&#10;        else&#13;&#10;            dumpvisited[value] = string.format (&quot;\&quot;table\&quot;: \&quot;%d\&quot;,&quot;, tsize (value))&#13;&#10;            if (limit or 0) &gt; 0 and level+1 &gt;= limit then&#13;&#10;                indented (level, index, string.format (&quot;{%s&quot;, string.gsub(dumpvisited[value], &quot;,&quot;, &quot;},&quot;)))&#13;&#10;            else&#13;&#10;                indented (level, index, &quot;{\n&quot;, dumpvisited[value])&#13;&#10;&#13;&#10;                for n,v in pairs(value) do&#13;&#10;                    dumpval (level+1, n, v, limit)&#13;&#10;                end&#13;&#10;&#13;&#10;                indented (level, &quot;}&quot;)&#13;&#10;            end&#13;&#10;        end&#13;&#10;    else&#13;&#10;        if type(value) == 'string' then&#13;&#10;            indented (level, index, string.format(&quot;{\&quot;string\&quot;: %q}&quot;,value), ',')&#13;&#10;        end&#13;&#10;&#13;&#10;        if type(value) == 'userdata' then&#13;&#10;            info = class_info (value)&#13;&#10;            indented (level, index, string.format (&quot;{\&quot;userdata\&quot;: %q}&quot;, info.name) , ',')&#13;&#10;        end&#13;&#10;&#13;&#10;        if type(value) == 'number' then&#13;&#10;            indented (level, index, string.format (&quot;{\&quot;number\&quot;: %q}&quot;,tostring(value)), ',')&#13;&#10;        end&#13;&#10;    end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function dumpvar( value, limit, name )&#13;&#10;&#13;&#10;local function dumpvar( value, limit, name )&#13;&#10;  ctrlrDebugger:write (&quot;\n::start dumpvar\n&quot;)&#13;&#10;  dumpvisited = {}&#13;&#10;  dumpval( 0, name or tostring(value), value, limit )&#13;&#10;  ctrlrDebugger:write (&quot;::end\n&quot;)&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function show(file,line,before,after)&#13;&#10;&#13;&#10;--show +/-N lines of a file around line M&#13;&#10;&#13;&#10;local function show(file,line,before,after)&#13;&#10;&#13;&#10;  line   = tonumber(line   or 1)&#13;&#10;  before = tonumber(before or 10)&#13;&#10;  after  = tonumber(after  or before)&#13;&#10;&#13;&#10;  if not string.find(file,'%.') then file = file..'.lua' end&#13;&#10;&#13;&#10;  local f = io.open(file,'r')&#13;&#10;  if not f then&#13;&#10;    --{{{  try to find the file in the path&#13;&#10;&#13;&#10;    --&#13;&#10;    -- looks for a file in the package path&#13;&#10;    --&#13;&#10;    local path = package.path or LUA_PATH or ''&#13;&#10;    for c in string.gmatch (path, &quot;[&#94;;]+&quot;) do&#13;&#10;      local c = string.gsub (c, &quot;%?%.lua&quot;, file)&#13;&#10;      f = io.open (c,'r')&#13;&#10;      if f then&#13;&#10;        break&#13;&#10;      end&#13;&#10;    end&#13;&#10;&#13;&#10;    --}}}&#13;&#10;    if not f then&#13;&#10;      ctrlrDebugger:write('Cannot find '..file..'\n')&#13;&#10;      return&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;  local i = 0&#13;&#10;  for l in f:lines() do&#13;&#10;    i = i + 1&#13;&#10;    if i &gt;= (line-before) then&#13;&#10;      if i &gt; (line+after) then break end&#13;&#10;      if i == line then&#13;&#10;        ctrlrDebugger:write(i..'***\t'..l..'\n')&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(i..'\t'..l..'\n')&#13;&#10;      end&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;  f:close()&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function tracestack(l)&#13;&#10;&#13;&#10;local function gi( i )&#13;&#10;  return function() i=i+1 return debug.getinfo(i),i end&#13;&#10;end&#13;&#10;&#13;&#10;local function gl( level, j )&#13;&#10;  return function() j=j+1 return debug.getlocal( level, j ) end&#13;&#10;end&#13;&#10;&#13;&#10;local function gu( func, k )&#13;&#10;  return function() k=k+1 return debug.getupvalue( func, k ) end&#13;&#10;end&#13;&#10;&#13;&#10;local  traceinfo&#13;&#10;&#13;&#10;local function tracestack(l)&#13;&#10;  local l = l + 1                        --NB: +1 to get level relative to caller&#13;&#10;  traceinfo = {}&#13;&#10;  traceinfo.pausemsg = pausemsg&#13;&#10;  for ar,i in gi(l) do&#13;&#10;    table.insert( traceinfo, ar )&#13;&#10;    if ar.what ~= 'C' then&#13;&#10;      local names  = {}&#13;&#10;      local values = {}&#13;&#10;      for n,v in gl(i,0) do&#13;&#10;        if string.sub(n,1,1) ~= '(' then   --ignore internal control variables&#13;&#10;          table.insert( names, n )&#13;&#10;          table.insert( values, v )&#13;&#10;        end&#13;&#10;      end&#13;&#10;      if #names &gt; 0 then&#13;&#10;        ar.lnames  = names&#13;&#10;        ar.lvalues = values&#13;&#10;      end&#13;&#10;    end&#13;&#10;    if ar.func then&#13;&#10;      local names  = {}&#13;&#10;      local values = {}&#13;&#10;      for n,v in gu(ar.func,0) do&#13;&#10;        if string.sub(n,1,1) ~= '(' then   --ignore internal control variables&#13;&#10;          table.insert( names, n )&#13;&#10;          table.insert( values, v )&#13;&#10;        end&#13;&#10;      end&#13;&#10;      if #names &gt; 0 then&#13;&#10;        ar.unames  = names&#13;&#10;        ar.uvalues = values&#13;&#10;      end&#13;&#10;    end&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function trace()&#13;&#10;&#13;&#10;local function trace(set)&#13;&#10;  ctrlrDebugger:write (&quot;\n::start trace\n&quot;)&#13;&#10;  local mark&#13;&#10;  for level,ar in ipairs(traceinfo) do&#13;&#10;    if level == set then&#13;&#10;      mark = '***'&#13;&#10;    else&#13;&#10;      mark = ''&#13;&#10;    end&#13;&#10;    ctrlrDebugger:write('['..level..']'..mark..'\t'..(ar.name or ar.what)..' in '..ar.short_src..':'..ar.currentline..'\n')&#13;&#10;  end&#13;&#10;&#13;&#10;  ctrlrDebugger:write (&quot;::end\n&quot;)&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function info()&#13;&#10;&#13;&#10;local function info()&#13;&#10;    dumpvar( traceinfo, 0, 'traceinfo' )&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  local function set_breakpoint(file, line, once)&#13;&#10;&#13;&#10;local function set_breakpoint(file, line, once)&#13;&#10;  if not breakpoints[line] then&#13;&#10;    breakpoints[line] = {}&#13;&#10;  end&#13;&#10;  if once then&#13;&#10;    breakpoints[line][file] = 1&#13;&#10;  else&#13;&#10;    breakpoints[line][file] = true&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function remove_breakpoint(file, line)&#13;&#10;&#13;&#10;local function remove_breakpoint(file, line)&#13;&#10;  if breakpoints[line] then&#13;&#10;    breakpoints[line][file] = nil&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function has_breakpoint(file, line)&#13;&#10;&#13;&#10;--allow for 'sloppy' file names&#13;&#10;--search for file and all variations walking up its directory hierachy&#13;&#10;--ditto for the file with no extension&#13;&#10;--a breakpoint can be permenant or once only, if once only its removed&#13;&#10;--after detection here, these are used for temporary breakpoints in the&#13;&#10;--debugger loop when executing the 'gotoo' command&#13;&#10;--a breakpoint on line 0 of a file means any line in that file&#13;&#10;&#13;&#10;local function has_breakpoint(file, line)&#13;&#10;  local isLine = breakpoints[line]&#13;&#10;  local isZero = breakpoints[0]&#13;&#10;  if not isLine and not isZero then return false end&#13;&#10;  local noext = string.gsub(file,&quot;(%..-)$&quot;,'',1)&#13;&#10;  if noext == file then noext = nil end&#13;&#10;  while file do&#13;&#10;    if isLine and isLine[file] then&#13;&#10;      if isLine[file] == 1 then isLine[file] = nil end&#13;&#10;      return true&#13;&#10;    end&#13;&#10;    if isZero and isZero[file] then&#13;&#10;      if isZero[file] == 1 then isZero[file] = nil end&#13;&#10;      return true&#13;&#10;    end&#13;&#10;    if IsWindows then&#13;&#10;      file = string.match(file,&quot;[:/\\](.+)$&quot;)&#13;&#10;    else&#13;&#10;      file = string.match(file,&quot;[:/](.+)$&quot;)&#13;&#10;    end&#13;&#10;  end&#13;&#10;  while noext do&#13;&#10;    if isLine and isLine[noext] then&#13;&#10;      if isLine[noext] == 1 then isLine[noext] = nil end&#13;&#10;      return true&#13;&#10;    end&#13;&#10;    if isZero and isZero[noext] then&#13;&#10;      if isZero[noext] == 1 then isZero[noext] = nil end&#13;&#10;      return true&#13;&#10;    end&#13;&#10;    if IsWindows then&#13;&#10;      noext = string.match(noext,&quot;[:/\\](.+)$&quot;)&#13;&#10;    else&#13;&#10;      noext = string.match(noext,&quot;[:/](.+)$&quot;)&#13;&#10;    end&#13;&#10;  end&#13;&#10;  return false&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function capture_vars(ref,level,line)&#13;&#10;&#13;&#10;local function capture_vars(ref,level,line)&#13;&#10;  --get vars, file and line for the given level relative to debug_hook offset by ref&#13;&#10;&#13;&#10;  local lvl = ref + level                --NB: This includes an offset of +1 for the call to here&#13;&#10;&#13;&#10;  --{{{  capture variables&#13;&#10;&#13;&#10;  local ar = debug.getinfo(lvl, &quot;f&quot;)&#13;&#10;  if not ar then return {},'?',0 end&#13;&#10;&#13;&#10;  local vars = {__UPVALUES__={}, __LOCALS__={}}&#13;&#10;  local i&#13;&#10;&#13;&#10;  local func = ar.func&#13;&#10;  if func then&#13;&#10;    i = 1&#13;&#10;    while true do&#13;&#10;      local name, value = debug.getupvalue(func, i)&#13;&#10;      if not name then break end&#13;&#10;      if string.sub(name,1,1) ~= '(' then  --NB: ignoring internal control variables&#13;&#10;        vars[name] = value&#13;&#10;        vars.__UPVALUES__[i] = name&#13;&#10;      end&#13;&#10;      i = i + 1&#13;&#10;    end&#13;&#10;    vars.__ENVIRONMENT__ = getfenv(func)&#13;&#10;  end&#13;&#10;&#13;&#10;  vars.__GLOBALS__ = getfenv(0)&#13;&#10;&#13;&#10;  i = 1&#13;&#10;  while true do&#13;&#10;    local name, value = debug.getlocal(lvl, i)&#13;&#10;    if not name then break end&#13;&#10;    if string.sub(name,1,1) ~= '(' then    --NB: ignoring internal control variables&#13;&#10;      vars[name] = value&#13;&#10;      vars.__LOCALS__[i] = name&#13;&#10;    end&#13;&#10;    i = i + 1&#13;&#10;  end&#13;&#10;&#13;&#10;  vars.__VARSLEVEL__ = level&#13;&#10;&#13;&#10;  if func then&#13;&#10;    --NB: Do not do this until finished filling the vars table&#13;&#10;    setmetatable(vars, { __index = getfenv(func), __newindex = getfenv(func) })&#13;&#10;  end&#13;&#10;&#13;&#10;  --NB: Do not read or write the vars table anymore else the metatable functions will get invoked!&#13;&#10;&#13;&#10;  --}}}&#13;&#10;&#13;&#10;  local file = getinfo(lvl, &quot;source&quot;)&#13;&#10;  if string.find(file, &quot;@&quot;) == 1 then&#13;&#10;    file = string.sub(file, 2)&#13;&#10;  end&#13;&#10;  if IsWindows then file = string.lower(file) end&#13;&#10;&#13;&#10;  if not line then&#13;&#10;    line = getinfo(lvl, &quot;currentline&quot;)&#13;&#10;  end&#13;&#10;&#13;&#10;  return vars,file,line&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function restore_vars(ref,vars)&#13;&#10;&#13;&#10;local function restore_vars(ref,vars)&#13;&#10;&#13;&#10;  if type(vars) ~= 'table' then return end&#13;&#10;&#13;&#10;  local level = vars.__VARSLEVEL__       --NB: This level is relative to debug_hook offset by ref&#13;&#10;  if not level then return end&#13;&#10;&#13;&#10;  level = level + ref                    --NB: This includes an offset of +1 for the call to here&#13;&#10;&#13;&#10;  local i&#13;&#10;  local written_vars = {}&#13;&#10;&#13;&#10;  i = 1&#13;&#10;  while true do&#13;&#10;    local name, value = debug.getlocal(level, i)&#13;&#10;    if not name then break end&#13;&#10;    if vars[name] and string.sub(name,1,1) ~= '(' then     --NB: ignoring internal control variables&#13;&#10;      debug.setlocal(level, i, vars[name])&#13;&#10;      written_vars[name] = true&#13;&#10;    end&#13;&#10;    i = i + 1&#13;&#10;  end&#13;&#10;&#13;&#10;  local ar = debug.getinfo(level, &quot;f&quot;)&#13;&#10;  if not ar then return end&#13;&#10;&#13;&#10;  local func = ar.func&#13;&#10;  if func then&#13;&#10;&#13;&#10;    i = 1&#13;&#10;    while true do&#13;&#10;      local name, value = debug.getupvalue(func, i)&#13;&#10;      if not name then break end&#13;&#10;      if vars[name] and string.sub(name,1,1) ~= '(' then   --NB: ignoring internal control variables&#13;&#10;        if not written_vars[name] then&#13;&#10;          debug.setupvalue(func, i, vars[name])&#13;&#10;        end&#13;&#10;        written_vars[name] = true&#13;&#10;      end&#13;&#10;      i = i + 1&#13;&#10;    end&#13;&#10;&#13;&#10;  end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function trace_event(event, line, level)&#13;&#10;&#13;&#10;local function print_trace(level,depth,event,file,line,name)&#13;&#10;&#13;&#10;  --NB: level here is relative to the caller of trace_event, so offset by 2 to get to there&#13;&#10;  level = level + 2&#13;&#10;&#13;&#10;  local file = file or getinfo(level,'short_src')&#13;&#10;  local line = line or getinfo(level,'currentline')&#13;&#10;  local name = name or getinfo(level,'name')&#13;&#10;&#13;&#10;  local prefix = ''&#13;&#10;  if current_thread ~= 'main' then prefix = '['..tostring(current_thread)..'] ' end&#13;&#10;&#13;&#10;  ctrlrDebugger:write(prefix..&#13;&#10;           string.format('%08.2f:%02i.',os.clock(),depth)..&#13;&#10;           string.rep('.',depth%32)..&#13;&#10;           (file or '')..' ('..(line or '')..') '..&#13;&#10;           (name or '')..&#13;&#10;           ' ('..event..')\n')&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;local function trace_event(event, line, level)&#13;&#10;&#13;&#10;  if event == 'return' and trace_returns then&#13;&#10;    --note the line info for later&#13;&#10;    ret_file = getinfo(level+1,'short_src')&#13;&#10;    ret_line = getinfo(level+1,'currentline')&#13;&#10;    ret_name = getinfo(level+1,'name')&#13;&#10;  end&#13;&#10;&#13;&#10;  if event ~= 'line' then return end&#13;&#10;&#13;&#10;  local slevel = stack_level[current_thread]&#13;&#10;  local tlevel = trace_level[current_thread]&#13;&#10;&#13;&#10;  if trace_calls and slevel &gt; tlevel then&#13;&#10;    --we are now in the function called, so look back 1 level further to find the calling file and line&#13;&#10;    print_trace(level+1,slevel-1,'c',nil,nil,getinfo(level+1,'name'))&#13;&#10;  end&#13;&#10;&#13;&#10;  if trace_returns and slevel &lt; tlevel then&#13;&#10;    print_trace(level,slevel,'r',ret_file,ret_line,ret_name)&#13;&#10;  end&#13;&#10;&#13;&#10;  if trace_lines then&#13;&#10;    print_trace(level,slevel,'l')&#13;&#10;  end&#13;&#10;&#13;&#10;  trace_level[current_thread] = stack_level[current_thread]&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function report(ev, vars, file, line, idx_watch)&#13;&#10;&#13;&#10;local function report(ev, vars, file, line, idx_watch)&#13;&#10;  local vars = vars or {}&#13;&#10;  local file = file or '?'&#13;&#10;  local line = line or 0&#13;&#10;  local prefix = ''&#13;&#10;  if current_thread ~= 'main' then prefix = '['..tostring(current_thread)..'] ' end&#13;&#10;  if ev == events.STEP then&#13;&#10;    ctrlrDebugger:write(prefix..&quot;Paused at file &quot;..file..&quot; line &quot;..line..' ('..stack_level[current_thread]..')\n')&#13;&#10;  elseif ev == events.BREAK then&#13;&#10;    ctrlrDebugger:write(prefix..&quot;Paused at file &quot;..file..&quot; line &quot;..line..' ('..stack_level[current_thread]..') (breakpoint)\n')&#13;&#10;  elseif ev == events.WATCH then&#13;&#10;    ctrlrDebugger:write(prefix..&quot;Paused at file &quot;..file..&quot; line &quot;..line..' ('..stack_level[current_thread]..')'..&quot; (watch expression &quot;..idx_watch.. &quot;: [&quot;..watches[idx_watch].exp..&quot;])\n&quot;)&#13;&#10;  elseif ev == events.SET then&#13;&#10;    --do nothing&#13;&#10;  else&#13;&#10;    ctrlrDebugger:write(prefix..&quot;Error in application: &quot;..file..&quot; line &quot;..line..&quot;\n&quot;)&#13;&#10;  end&#13;&#10;  if ev ~= events.SET then&#13;&#10;    if pausemsg and pausemsg ~= '' then ctrlrDebugger:write('Message: '..pausemsg..'\n') end&#13;&#10;    pausemsg = ''&#13;&#10;  end&#13;&#10;  return vars, file, line&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  local function debugger_loop(ev, vars, file, line, idx_watch)&#13;&#10;&#13;&#10;local function debugger_loop(ev, vars, file, line, idx_watch)&#13;&#10;&#13;&#10;  local eval_env  = vars or {}&#13;&#10;  local breakfile = file or '?'&#13;&#10;  local breakline = line or 0&#13;&#10;&#13;&#10;  local command, args&#13;&#10;&#13;&#10;  --{{{  local function getargs(spec)&#13;&#10;&#13;&#10;  --get command arguments according to the given spec from the args string&#13;&#10;  --the spec has a single character for each argument, arguments are separated&#13;&#10;  --by white space, the spec characters can be one of:&#13;&#10;  -- F for a filename    (defaults to breakfile if - given in args)&#13;&#10;  -- L for a line number (defaults to breakline if - given in args)&#13;&#10;  -- N for a number&#13;&#10;  -- V for a variable name&#13;&#10;  -- S for a string&#13;&#10;&#13;&#10;  local function getargs(spec)&#13;&#10;    local res={}&#13;&#10;    local char,arg&#13;&#10;    local ptr=1&#13;&#10;    for i=1,string.len(spec) do&#13;&#10;      char = string.sub(spec,i,i)&#13;&#10;      if     char == 'F' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '-' end&#13;&#10;        if arg == '-' then arg = breakfile end&#13;&#10;      elseif char == 'L' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '-' end&#13;&#10;        if arg == '-' then arg = breakline end&#13;&#10;        arg = tonumber(arg) or 0&#13;&#10;      elseif char == 'N' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '0' end&#13;&#10;        arg = tonumber(arg) or 0&#13;&#10;      elseif char == 'V' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '' end&#13;&#10;      elseif char == 'S' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '' end&#13;&#10;      else&#13;&#10;        arg = ''&#13;&#10;      end&#13;&#10;      table.insert(res,arg or '')&#13;&#10;    end&#13;&#10;    return unpack(res)&#13;&#10;  end&#13;&#10;&#13;&#10;  --}}}&#13;&#10;&#13;&#10;  while true do&#13;&#10;    -- io.write(&quot;[DEBUG]&gt; &quot;)&#13;&#10;    ctrlrDebugger:write(&quot;[DEBUG]&gt; &quot;)&#13;&#10;    -- local line = io.read(&quot;*line&quot;)&#13;&#10;    local line = ctrlrDebugger:read()&#13;&#10;    if line == nil then ctrlrDebugger:write('\n'); line = 'exit' end&#13;&#10;&#13;&#10;    if string.find(line, &quot;&#94;[a-z]+&quot;) then&#13;&#10;      command = string.sub(line, string.find(line, &quot;&#94;[a-z]+&quot;))&#13;&#10;      args    = string.gsub(line,&quot;&#94;[a-z]+%s*&quot;,'',1)            --strip command off line&#13;&#10;    else&#13;&#10;      command = ''&#13;&#10;    end&#13;&#10;&#13;&#10;    if command == &quot;setb&quot; then&#13;&#10;      --{{{  set breakpoint&#13;&#10;&#13;&#10;      local line, filename  = getargs('LF')&#13;&#10;      if filename ~= '' and line ~= '' then&#13;&#10;        set_breakpoint(filename,line)&#13;&#10;        ctrlrDebugger:write(&quot;Breakpoint set in file &quot;..filename..' line '..line..'\n')&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;delb&quot; then&#13;&#10;      --{{{  delete breakpoint&#13;&#10;&#13;&#10;      local line, filename = getargs('LF')&#13;&#10;      if filename ~= '' and line ~= '' then&#13;&#10;        remove_breakpoint(filename, line)&#13;&#10;        ctrlrDebugger:write(&quot;Breakpoint deleted from file &quot;..filename..' line '..line..&quot;\n&quot;)&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;delallb&quot; then&#13;&#10;      --{{{  delete all breakpoints&#13;&#10;      breakpoints = {}&#13;&#10;      ctrlrDebugger:write('All breakpoints deleted\n')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;listb&quot; then&#13;&#10;      --{{{  list breakpoints&#13;&#10;      for i, v in pairs(breakpoints) do&#13;&#10;        for ii, vv in pairs(v) do&#13;&#10;          ctrlrDebugger:write(&quot;Break at: &quot;..i..' in '..ii..'\n')&#13;&#10;        end&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;setw&quot; then&#13;&#10;      --{{{  set watch expression&#13;&#10;&#13;&#10;      if args and args ~= '' then&#13;&#10;        local func = loadstring(&quot;return(&quot; .. args .. &quot;)&quot;)&#13;&#10;        local newidx = #watches + 1&#13;&#10;        watches[newidx] = {func = func, exp = args}&#13;&#10;        ctrlrDebugger:write(&quot;Set watch exp no. &quot; .. newidx..'\n')&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;delw&quot; then&#13;&#10;      --{{{  delete watch expression&#13;&#10;&#13;&#10;      local index = tonumber(args)&#13;&#10;      if index then&#13;&#10;        watches[index] = nil&#13;&#10;        ctrlrDebugger:write(&quot;Watch expression deleted\n&quot;)&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;delallw&quot; then&#13;&#10;      --{{{  delete all watch expressions&#13;&#10;      watches = {}&#13;&#10;      ctrlrDebugger:write('All watch expressions deleted\n')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;listw&quot; then&#13;&#10;      --{{{  list watch expressions&#13;&#10;      for i, v in pairs(watches) do&#13;&#10;        ctrlrDebugger:write(&quot;Watch exp. &quot; .. i .. &quot;: &quot; .. v.exp..'\n')&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;run&quot; then&#13;&#10;      --{{{  run until breakpoint&#13;&#10;      step_into = false&#13;&#10;      step_over = false&#13;&#10;      return 'cont'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;step&quot; then&#13;&#10;      --{{{  step N lines (into functions)&#13;&#10;      local N = tonumber(args) or 1&#13;&#10;      step_over  = false&#13;&#10;      step_into  = true&#13;&#10;      step_lines = tonumber(N or 1)&#13;&#10;      return 'cont'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;over&quot; then&#13;&#10;      --{{{  step N lines (over functions)&#13;&#10;      local N = tonumber(args) or 1&#13;&#10;      step_into  = false&#13;&#10;      step_over  = true&#13;&#10;      step_lines = tonumber(N or 1)&#13;&#10;      step_level[current_thread] = stack_level[current_thread]&#13;&#10;      return 'cont'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;out&quot; then&#13;&#10;      --{{{  step N lines (out of functions)&#13;&#10;      local N = tonumber(args) or 1&#13;&#10;      step_into  = false&#13;&#10;      step_over  = true&#13;&#10;      step_lines = 1&#13;&#10;      step_level[current_thread] = stack_level[current_thread] - tonumber(N or 1)&#13;&#10;      return 'cont'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;gotoo&quot; then&#13;&#10;      --{{{  step until reach line&#13;&#10;      local line, filename = getargs('LF')&#13;&#10;      if line ~= '' then&#13;&#10;        step_over  = false&#13;&#10;        step_into  = false&#13;&#10;        if has_breakpoint(filename,line) then&#13;&#10;          return 'cont'&#13;&#10;        else&#13;&#10;          set_breakpoint(filename,line,true)&#13;&#10;          return 'cont'&#13;&#10;        end&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;set&quot; then&#13;&#10;      --{{{  set/show context level&#13;&#10;      local level = args&#13;&#10;      if level and level == '' then level = nil end&#13;&#10;      if level then return level end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;vars&quot; then&#13;&#10;      --{{{  list context variables&#13;&#10;      local depth = args&#13;&#10;      if depth and depth == '' then depth = nil end&#13;&#10;      depth = tonumber(depth) or 1&#13;&#10;      dumpvar(eval_env, depth+1, 'variables')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;glob&quot; then&#13;&#10;      --{{{  list global variables&#13;&#10;      local depth = args&#13;&#10;      if depth and depth == '' then depth = nil end&#13;&#10;      depth = tonumber(depth) or 1&#13;&#10;      dumpvar(eval_env.__GLOBALS__,depth+1,'globals')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;fenv&quot; then&#13;&#10;      --{{{  list function environment variables&#13;&#10;      local depth = args&#13;&#10;      if depth and depth == '' then depth = nil end&#13;&#10;      depth = tonumber(depth) or 1&#13;&#10;      dumpvar(eval_env.__ENVIRONMENT__,depth+1,'environment')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;ups&quot; then&#13;&#10;      --{{{  list upvalue names&#13;&#10;      dumpvar(eval_env.__UPVALUES__,2,'upvalues')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;locs&quot; then&#13;&#10;      --{{{  list locals names&#13;&#10;      dumpvar(eval_env.__LOCALS__,2,'upvalues')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;what&quot; then&#13;&#10;      --{{{  show where a function is defined&#13;&#10;      if args and args ~= '' then&#13;&#10;        local v = eval_env&#13;&#10;        local n = nil&#13;&#10;        for w in string.gmatch(args,&quot;[%w_]+&quot;) do&#13;&#10;          v = v[w]&#13;&#10;          if n then n = n..'.'..w else n = w end&#13;&#10;          if not v then break end&#13;&#10;        end&#13;&#10;        if type(v) == 'function' then&#13;&#10;          local def = debug.getinfo(v,'S')&#13;&#10;          if def then&#13;&#10;            ctrlrDebugger:write(def.what..' in '..def.short_src..' '..def.linedefined..'..'..def.lastlinedefined..'\n')&#13;&#10;          else&#13;&#10;            ctrlrDebugger:write('Cannot get info for '..v..'\n')&#13;&#10;          end&#13;&#10;        else&#13;&#10;          ctrlrDebugger:write(v..' is not a function\n')&#13;&#10;        end&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;dump&quot; then&#13;&#10;      --{{{  dump a variable&#13;&#10;      local name, depth = getargs('VN')&#13;&#10;      if name ~= '' then&#13;&#10;        if depth == '' or depth == 0 then depth = nil end&#13;&#10;        depth = tonumber(depth or 1)&#13;&#10;        local v = eval_env&#13;&#10;        local n = nil&#13;&#10;        for w in string.gmatch(name,&quot;[&#94;%.]+&quot;) do     --get everything between dots&#13;&#10;          if tonumber(w) then&#13;&#10;            v = v[tonumber(w)]&#13;&#10;          else&#13;&#10;            v = v[w]&#13;&#10;          end&#13;&#10;          if n then n = n..'.'..w else n = w end&#13;&#10;          if not v then break end&#13;&#10;        end&#13;&#10;        dumpvar(v,depth+1,n)&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;show&quot; then&#13;&#10;      --{{{  show file around a line or the current breakpoint&#13;&#10;&#13;&#10;      local line, file, before, after = getargs('LFNN')&#13;&#10;      if before == 0 then before = 10     end&#13;&#10;      if after  == 0 then after  = before end&#13;&#10;&#13;&#10;      if file ~= '' and file ~= &quot;=stdin&quot; then&#13;&#10;        show(file,line,before,after)&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write('Nothing to show\n')&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;poff&quot; then&#13;&#10;      --{{{  turn pause command off&#13;&#10;      pause_off = true&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;pon&quot; then&#13;&#10;      --{{{  turn pause command on&#13;&#10;      pause_off = false&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;tron&quot; then&#13;&#10;      --{{{  turn tracing on/off&#13;&#10;      local option = getargs('S')&#13;&#10;      trace_calls   = false&#13;&#10;      trace_returns = false&#13;&#10;      trace_lines   = false&#13;&#10;      if string.find(option,'c') then trace_calls   = true end&#13;&#10;      if string.find(option,'r') then trace_returns = true end&#13;&#10;      if string.find(option,'l') then trace_lines   = true end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;trace&quot; then&#13;&#10;      --{{{  dump a stack trace&#13;&#10;      trace(eval_env.__VARSLEVEL__)&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;info&quot; then&#13;&#10;      --{{{  dump all debug info captured&#13;&#10;      info()&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;pause&quot; then&#13;&#10;      --{{{  not allowed in here&#13;&#10;      ctrlrDebugger:write('pause() should only be used in the script you are debugging\n')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;help&quot; then&#13;&#10;      --{{{  help&#13;&#10;      local command = getargs('S')&#13;&#10;      if command ~= '' and hints[command] then&#13;&#10;        ctrlrDebugger:write(hints[command]..'\n')&#13;&#10;      else&#13;&#10;        for _,v in pairs(hints) do&#13;&#10;          local _,_,h = string.find(v,&quot;(.+)|&quot;)&#13;&#10;          ctrlrDebugger:write(h..'\n')&#13;&#10;        end&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;exit&quot; then&#13;&#10;      --{{{  exit debugger&#13;&#10;      return 'stop'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif line ~= '' then&#13;&#10;      --{{{  just execute whatever it is in the current context&#13;&#10;&#13;&#10;      --map line starting with &quot;=...&quot; to &quot;return ...&quot;&#13;&#10;      if string.sub(line,1,1) == '=' then line = string.gsub(line,'=','return ',1) end&#13;&#10;&#13;&#10;      local ok, func = pcall(loadstring,line)&#13;&#10;      if func == nil then                             --Michael.Bringmann@lsi.com&#13;&#10;        ctrlrDebugger:write(&quot;Compile error: &quot;..line..'\n')&#13;&#10;      elseif not ok then&#13;&#10;        ctrlrDebugger:write(&quot;Compile error: &quot;..func..'\n')&#13;&#10;      else&#13;&#10;        setfenv(func, eval_env)&#13;&#10;        local res = {pcall(func)}&#13;&#10;        if res[1] then&#13;&#10;          if res[2] then&#13;&#10;            table.remove(res,1)&#13;&#10;            for _,v in ipairs(res) do&#13;&#10;              ctrlrDebugger:write(tostring(v))&#13;&#10;              ctrlrDebugger:write('\t')&#13;&#10;            end&#13;&#10;            ctrlrDebugger:write('\n')&#13;&#10;          end&#13;&#10;          --update in the context&#13;&#10;          return 0&#13;&#10;        else&#13;&#10;          ctrlrDebugger:write(&quot;Run error: &quot;..res[2]..'\n')&#13;&#10;        end&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function debug_hook(event, line, level, thread)&#13;&#10;&#13;&#10;local function debug_hook(event, line, level, thread)&#13;&#10;  if not started then debug.sethook(); coro_debugger = nil; return end&#13;&#10;  current_thread = thread or 'main'&#13;&#10;  local level = level or 2&#13;&#10;  trace_event(event,line,level)&#13;&#10;  if event == &quot;call&quot; then&#13;&#10;    stack_level[current_thread] = stack_level[current_thread] + 1&#13;&#10;  elseif event == &quot;return&quot; then&#13;&#10;    stack_level[current_thread] = stack_level[current_thread] - 1&#13;&#10;    if stack_level[current_thread] &lt; 0 then stack_level[current_thread] = 0 end&#13;&#10;  else&#13;&#10;    local vars,file,line = capture_vars(level,1,line)&#13;&#10;    local stop, ev, idx = false, events.STEP, 0&#13;&#10;    while true do&#13;&#10;      for index, value in pairs(watches) do&#13;&#10;        setfenv(value.func, vars)&#13;&#10;        local status, res = pcall(value.func)&#13;&#10;        if status and res then&#13;&#10;          ev, idx = events.WATCH, index&#13;&#10;          stop = true&#13;&#10;          break&#13;&#10;        end&#13;&#10;      end&#13;&#10;      if stop then break end&#13;&#10;      if (step_into)&#13;&#10;      or (step_over and (stack_level[current_thread] &lt;= step_level[current_thread] or stack_level[current_thread] == 0)) then&#13;&#10;        step_lines = step_lines - 1&#13;&#10;        if step_lines &lt; 1 then&#13;&#10;          ev, idx = events.STEP, 0&#13;&#10;          break&#13;&#10;        end&#13;&#10;      end&#13;&#10;      if has_breakpoint(file, line) then&#13;&#10;        ev, idx = events.BREAK, 0&#13;&#10;        break&#13;&#10;      end&#13;&#10;      return&#13;&#10;    end&#13;&#10;    if not coro_debugger then&#13;&#10;      ctrlrDebugger:write(&quot;Lua Debugger\n&quot;)&#13;&#10;      vars, file, line = report(ev, vars, file, line, idx)&#13;&#10;      ctrlrDebugger:write(&quot;Type 'help' for commands\n&quot;)&#13;&#10;      coro_debugger = true&#13;&#10;    else&#13;&#10;      vars, file, line = report(ev, vars, file, line, idx)&#13;&#10;    end&#13;&#10;    tracestack(level)&#13;&#10;    local last_next = 1&#13;&#10;    local next = 'ask'&#13;&#10;    local silent = false&#13;&#10;    while true do&#13;&#10;      if next == 'ask' then&#13;&#10;        next = debugger_loop(ev, vars, file, line, idx)&#13;&#10;      elseif next == 'cont' then&#13;&#10;        return&#13;&#10;      elseif next == 'stop' then&#13;&#10;        started = false&#13;&#10;        debug.sethook()&#13;&#10;        coro_debugger = nil&#13;&#10;        return&#13;&#10;      elseif tonumber(next) then --get vars for given level or last level&#13;&#10;        next = tonumber(next)&#13;&#10;        if next == 0 then silent = true; next = last_next else silent = false end&#13;&#10;        last_next = next&#13;&#10;        restore_vars(level,vars)&#13;&#10;        vars, file, line = capture_vars(level,next)&#13;&#10;        if not silent then&#13;&#10;          if vars and vars.__VARSLEVEL__ then&#13;&#10;            ctrlrDebugger:write('Level: '..vars.__VARSLEVEL__..'\n')&#13;&#10;          else&#13;&#10;            ctrlrDebugger:write('No level set\n')&#13;&#10;          end&#13;&#10;        end&#13;&#10;        ev = events.SET&#13;&#10;        next = 'ask'&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write('Unknown command from debugger_loop: '..tostring(next)..'\n')&#13;&#10;        ctrlrDebugger:write('Stopping debugger\n')&#13;&#10;        next = 'stop'&#13;&#10;      end&#13;&#10;    end&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  coroutine.create&#13;&#10;&#13;&#10;--This function overrides the built-in for the purposes of propagating&#13;&#10;--the debug hook settings from the creator into the created coroutine.&#13;&#10;&#13;&#10;_G.coroutine.create = function(f)&#13;&#10;  local thread&#13;&#10;  local hook, mask, count = debug.gethook()&#13;&#10;  if hook then&#13;&#10;    local function thread_hook(event,line)&#13;&#10;      hook(event,line,3,thread)&#13;&#10;    end&#13;&#10;    thread = cocreate(function(...)&#13;&#10;                        stack_level[thread] = 0&#13;&#10;                        trace_level[thread] = 0&#13;&#10;                        step_level [thread] = 0&#13;&#10;                        debug.sethook(thread_hook,mask,count)&#13;&#10;                        return f(...)&#13;&#10;                      end)&#13;&#10;    return thread&#13;&#10;  else&#13;&#10;    return cocreate(f)&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  coroutine.wrap&#13;&#10;&#13;&#10;--This function overrides the built-in for the purposes of propagating&#13;&#10;--the debug hook settings from the creator into the created coroutine.&#13;&#10;&#13;&#10;_G.coroutine.wrap = function(f)&#13;&#10;  local thread&#13;&#10;  local hook, mask, count = debug.gethook()&#13;&#10;  if hook then&#13;&#10;    local function thread_hook(event,line)&#13;&#10;      hook(event,line,3,thread)&#13;&#10;    end&#13;&#10;    thread = cowrap(function(...)&#13;&#10;                      stack_level[thread] = 0&#13;&#10;                      trace_level[thread] = 0&#13;&#10;                      step_level [thread] = 0&#13;&#10;                      debug.sethook(thread_hook,mask,count)&#13;&#10;                      return f(...)&#13;&#10;                    end)&#13;&#10;    return thread&#13;&#10;  else&#13;&#10;    return cowrap(f)&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  function pause(x,l,f)&#13;&#10;&#13;&#10;--&#13;&#10;-- Starts/resumes a debug session&#13;&#10;--&#13;&#10;&#13;&#10;function pause(x,l,f)&#13;&#10;  if not f and pause_off then return end       --being told to ignore pauses&#13;&#10;  pausemsg = x or 'pause'&#13;&#10;  local lines&#13;&#10;  local src = getinfo(2,'short_src')&#13;&#10;  if l then&#13;&#10;    lines = l   --being told when to stop&#13;&#10;  elseif src == &quot;stdin&quot; then&#13;&#10;    lines = 1   --if in a console session, stop now&#13;&#10;  else&#13;&#10;    lines = 2   --if in a script, stop when get out of pause()&#13;&#10;  end&#13;&#10;  if started then&#13;&#10;    --we'll stop now 'cos the existing debug hook will grab us&#13;&#10;    step_lines = lines&#13;&#10;    step_into  = true&#13;&#10;    debug.sethook(debug_hook, &quot;crl&quot;)         --reset it in case some external agent fiddled with it&#13;&#10;  else&#13;&#10;    --set to stop when get out of pause()&#13;&#10;    trace_level[current_thread] = 0&#13;&#10;    step_level [current_thread] = 0&#13;&#10;    stack_level[current_thread] = 1&#13;&#10;    step_lines = lines&#13;&#10;    step_into  = true&#13;&#10;    started    = true&#13;&#10;    debug.sethook(debug_hook, &quot;crl&quot;)         --NB: this will cause an immediate entry to the debugger_loop&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  function dump(v,depth)&#13;&#10;&#13;&#10;--shows the value of the given variable, only really useful&#13;&#10;--when the variable is a table&#13;&#10;--see dump debug command hints for full semantics&#13;&#10;&#13;&#10;function dump(v,depth)&#13;&#10;  dumpvar(v,(depth or 1)+1,tostring(v))&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  function debug.traceback(x)&#13;&#10;&#13;&#10;local _traceback = debug.traceback       --note original function&#13;&#10;&#13;&#10;--override standard function&#13;&#10;debug.traceback = function(x)&#13;&#10;  local assertmsg = _traceback(x)        --do original function&#13;&#10;  pause(x)                               --let user have a look at stuff&#13;&#10;  return assertmsg                       --carry on&#13;&#10;end&#13;&#10;&#13;&#10;_TRACEBACK = debug.traceback             --Lua 5.0 function&#13;&#10;&#13;&#10;--}}}"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000005"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="inspect" luaMethodCode="function getInspect()&#13;&#10;local inspect ={&#13;&#10;  _VERSION = 'inspect.lua 3.0.0',&#13;&#10;  _URL     = 'http://github.com/kikito/inspect.lua',&#13;&#10;  _DESCRIPTION = 'human-readable representations of tables',&#13;&#10;  _LICENSE = [[&#13;&#10;    MIT LICENSE&#13;&#10;&#13;&#10;    Copyright (c) 2013 Enrique Garc&#237;a Cota&#13;&#10;&#13;&#10;    Permission is hereby granted, free of charge, to any person obtaining a&#13;&#10;    copy of this software and associated documentation files (the&#13;&#10;    &quot;Software&quot;), to deal in the Software without restriction, including&#13;&#10;    without limitation the rights to use, copy, modify, merge, publish,&#13;&#10;    distribute, sublicense, and/or sell copies of the Software, and to&#13;&#10;    permit persons to whom the Software is furnished to do so, subject to&#13;&#10;    the following conditions:&#13;&#10;&#13;&#10;    The above copyright notice and this permission notice shall be included&#13;&#10;    in all copies or substantial portions of the Software.&#13;&#10;&#13;&#10;    THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS&#13;&#10;    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF&#13;&#10;    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.&#13;&#10;    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY&#13;&#10;    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,&#13;&#10;    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE&#13;&#10;    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&#13;&#10;  ]]&#13;&#10;}&#13;&#10;&#13;&#10;inspect.KEY       = setmetatable({}, {__tostring = function() return 'inspect.KEY' end})&#13;&#10;inspect.METATABLE = setmetatable({}, {__tostring = function() return 'inspect.METATABLE' end})&#13;&#10;&#13;&#10;-- Apostrophizes the string if it has quotes, but not aphostrophes&#13;&#10;-- Otherwise, it returns a regular quoted string&#13;&#10;local function smartQuote(str)&#13;&#10;  if str:match('&quot;') and not str:match(&quot;'&quot;) then&#13;&#10;    return &quot;'&quot; .. str .. &quot;'&quot;&#13;&#10;  end&#13;&#10;  return '&quot;' .. str:gsub('&quot;', '\\&quot;') .. '&quot;'&#13;&#10;end&#13;&#10;&#13;&#10;local controlCharsTranslation = {&#13;&#10;  [&quot;\a&quot;] = &quot;\\a&quot;,  [&quot;\b&quot;] = &quot;\\b&quot;, [&quot;\f&quot;] = &quot;\\f&quot;,  [&quot;\n&quot;] = &quot;\\n&quot;,&#13;&#10;  [&quot;\r&quot;] = &quot;\\r&quot;,  [&quot;\t&quot;] = &quot;\\t&quot;, [&quot;\v&quot;] = &quot;\\v&quot;&#13;&#10;}&#13;&#10;&#13;&#10;local function escape(str)&#13;&#10;  local result = str:gsub(&quot;\\&quot;, &quot;\\\\&quot;):gsub(&quot;(%c)&quot;, controlCharsTranslation)&#13;&#10;  return result&#13;&#10;end&#13;&#10;&#13;&#10;local function isIdentifier(str)&#13;&#10;  return type(str) == 'string' and str:match( &quot;&#94;[_%a][_%a%d]*$&quot; )&#13;&#10;end&#13;&#10;&#13;&#10;local function isSequenceKey(k, length)&#13;&#10;  return type(k) == 'number'&#13;&#10;     and 1 &lt;= k&#13;&#10;     and k &lt;= length&#13;&#10;     and math.floor(k) == k&#13;&#10;end&#13;&#10;&#13;&#10;local defaultTypeOrders = {&#13;&#10;  ['number']   = 1, ['boolean']  = 2, ['string'] = 3, ['table'] = 4,&#13;&#10;  ['function'] = 5, ['userdata'] = 6, ['thread'] = 7&#13;&#10;}&#13;&#10;&#13;&#10;local function sortKeys(a, b)&#13;&#10;  local ta, tb = type(a), type(b)&#13;&#10;&#13;&#10;  -- strings and numbers are sorted numerically/alphabetically&#13;&#10;  if ta == tb and (ta == 'string' or ta == 'number') then return a &lt; b end&#13;&#10;&#13;&#10;  local dta, dtb = defaultTypeOrders[ta], defaultTypeOrders[tb]&#13;&#10;  -- Two default types are compared according to the defaultTypeOrders table&#13;&#10;  if dta and dtb then return defaultTypeOrders[ta] &lt; defaultTypeOrders[tb]&#13;&#10;  elseif dta     then return true  -- default types before custom ones&#13;&#10;  elseif dtb     then return false -- custom types after default ones&#13;&#10;  end&#13;&#10;&#13;&#10;  -- custom types are sorted out alphabetically&#13;&#10;  return ta &lt; tb&#13;&#10;end&#13;&#10;&#13;&#10;local function getNonSequentialKeys(t)&#13;&#10;  local keys, length = {}, #t&#13;&#10;  for k,_ in pairs(t) do&#13;&#10;    if not isSequenceKey(k, length) then table.insert(keys, k) end&#13;&#10;  end&#13;&#10;  table.sort(keys, sortKeys)&#13;&#10;  return keys&#13;&#10;end&#13;&#10;&#13;&#10;local function getToStringResultSafely(t, mt)&#13;&#10;  local __tostring = type(mt) == 'table' and rawget(mt, '__tostring')&#13;&#10;  local str, ok&#13;&#10;  if type(__tostring) == 'function' then&#13;&#10;    ok, str = pcall(__tostring, t)&#13;&#10;    str = ok and str or 'error: ' .. tostring(str)&#13;&#10;  end&#13;&#10;  if type(str) == 'string' and #str &gt; 0 then return str end&#13;&#10;end&#13;&#10;&#13;&#10;local maxIdsMetaTable = {&#13;&#10;  __index = function(self, typeName)&#13;&#10;    rawset(self, typeName, 0)&#13;&#10;    return 0&#13;&#10;  end&#13;&#10;}&#13;&#10;&#13;&#10;local idsMetaTable = {&#13;&#10;  __index = function (self, typeName)&#13;&#10;    local col = setmetatable({}, {__mode = &quot;kv&quot;})&#13;&#10;    rawset(self, typeName, col)&#13;&#10;    return col&#13;&#10;  end&#13;&#10;}&#13;&#10;&#13;&#10;local function countTableAppearances(t, tableAppearances)&#13;&#10;  tableAppearances = tableAppearances or setmetatable({}, {__mode = &quot;k&quot;})&#13;&#10;&#13;&#10;  if type(t) == 'table' then&#13;&#10;    if not tableAppearances[t] then&#13;&#10;      tableAppearances[t] = 1&#13;&#10;      for k,v in pairs(t) do&#13;&#10;        countTableAppearances(k, tableAppearances)&#13;&#10;        countTableAppearances(v, tableAppearances)&#13;&#10;      end&#13;&#10;      countTableAppearances(getmetatable(t), tableAppearances)&#13;&#10;    else&#13;&#10;      tableAppearances[t] = tableAppearances[t] + 1&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;  return tableAppearances&#13;&#10;end&#13;&#10;&#13;&#10;local copySequence = function(s)&#13;&#10;  local copy, len = {}, #s&#13;&#10;  for i=1, len do copy[i] = s[i] end&#13;&#10;  return copy, len&#13;&#10;end&#13;&#10;&#13;&#10;local function makePath(path, ...)&#13;&#10;  local keys = {...}&#13;&#10;  local newPath, len = copySequence(path)&#13;&#10;  for i=1, #keys do&#13;&#10;    newPath[len + i] = keys[i]&#13;&#10;  end&#13;&#10;  return newPath&#13;&#10;end&#13;&#10;&#13;&#10;local function processRecursive(process, item, path)&#13;&#10;  if item == nil then return nil end&#13;&#10;&#13;&#10;  local processed = process(item, path)&#13;&#10;  if type(processed) == 'table' then&#13;&#10;    local processedCopy = {}&#13;&#10;    local processedKey&#13;&#10;&#13;&#10;    for k,v in pairs(processed) do&#13;&#10;      processedKey = processRecursive(process, k, makePath(path, k, inspect.KEY))&#13;&#10;      if processedKey ~= nil then&#13;&#10;        processedCopy[processedKey] = processRecursive(process, v, makePath(path, processedKey))&#13;&#10;      end&#13;&#10;    end&#13;&#10;&#13;&#10;    local mt  = processRecursive(process, getmetatable(processed), makePath(path, inspect.METATABLE))&#13;&#10;    setmetatable(processedCopy, mt)&#13;&#10;    processed = processedCopy&#13;&#10;  end&#13;&#10;  return processed&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;-------------------------------------------------------------------&#13;&#10;&#13;&#10;local Inspector = {}&#13;&#10;local Inspector_mt = {__index = Inspector}&#13;&#10;&#13;&#10;function Inspector:puts(...)&#13;&#10;  local args   = {...}&#13;&#10;  local buffer = self.buffer&#13;&#10;  local len    = #buffer&#13;&#10;  for i=1, #args do&#13;&#10;    len = len + 1&#13;&#10;    buffer[len] = tostring(args[i])&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:down(f)&#13;&#10;  self.level = self.level + 1&#13;&#10;  f()&#13;&#10;  self.level = self.level - 1&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:tabify()&#13;&#10;  self:puts(self.newline, string.rep(self.indent, self.level))&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:alreadyVisited(v)&#13;&#10;  return self.ids[type(v)][v] ~= nil&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:getId(v)&#13;&#10;  local tv = type(v)&#13;&#10;  local id = self.ids[tv][v]&#13;&#10;  if not id then&#13;&#10;    id              = self.maxIds[tv] + 1&#13;&#10;    self.maxIds[tv] = id&#13;&#10;    self.ids[tv][v] = id&#13;&#10;  end&#13;&#10;  return id&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:putKey(k)&#13;&#10;  if isIdentifier(k) then return self:puts(k) end&#13;&#10;  self:puts(&quot;[&quot;)&#13;&#10;  self:putValue(k)&#13;&#10;  self:puts(&quot;]&quot;)&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:putTable(t)&#13;&#10;  if t == inspect.KEY or t == inspect.METATABLE then&#13;&#10;    self:puts(tostring(t))&#13;&#10;  elseif self:alreadyVisited(t) then&#13;&#10;    self:puts('&lt;table ', self:getId(t), '&gt;')&#13;&#10;  elseif self.level &gt;= self.depth then&#13;&#10;    self:puts('{...}')&#13;&#10;  else&#13;&#10;    if self.tableAppearances[t] &gt; 1 then self:puts('&lt;', self:getId(t), '&gt;') end&#13;&#10;&#13;&#10;    local nonSequentialKeys = getNonSequentialKeys(t)&#13;&#10;    local length            = #t&#13;&#10;    local mt                = getmetatable(t)&#13;&#10;    local toStringResult    = getToStringResultSafely(t, mt)&#13;&#10;&#13;&#10;    self:puts('{')&#13;&#10;    self:down(function()&#13;&#10;      if toStringResult then&#13;&#10;        self:puts(' -- ', escape(toStringResult))&#13;&#10;        if length &gt;= 1 then self:tabify() end&#13;&#10;      end&#13;&#10;&#13;&#10;      local count = 0&#13;&#10;      for i=1, length do&#13;&#10;        if count &gt; 0 then self:puts(',') end&#13;&#10;        self:puts(' ')&#13;&#10;        self:putValue(t[i])&#13;&#10;        count = count + 1&#13;&#10;      end&#13;&#10;&#13;&#10;      for _,k in ipairs(nonSequentialKeys) do&#13;&#10;        if count &gt; 0 then self:puts(',') end&#13;&#10;        self:tabify()&#13;&#10;        self:putKey(k)&#13;&#10;        self:puts(' = ')&#13;&#10;        self:putValue(t[k])&#13;&#10;        count = count + 1&#13;&#10;      end&#13;&#10;&#13;&#10;      if mt then&#13;&#10;        if count &gt; 0 then self:puts(',') end&#13;&#10;        self:tabify()&#13;&#10;        self:puts('&lt;metatable&gt; = ')&#13;&#10;        self:putValue(mt)&#13;&#10;      end&#13;&#10;    end)&#13;&#10;&#13;&#10;    if #nonSequentialKeys &gt; 0 or mt then -- result is multi-lined. Justify closing }&#13;&#10;      self:tabify()&#13;&#10;    elseif length &gt; 0 then -- array tables have one extra space before closing }&#13;&#10;      self:puts(' ')&#13;&#10;    end&#13;&#10;&#13;&#10;    self:puts('}')&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:putValue(v)&#13;&#10;  local tv = type(v)&#13;&#10;&#13;&#10;  if tv == 'string' then&#13;&#10;    self:puts(smartQuote(escape(v)))&#13;&#10;  elseif tv == 'number' or tv == 'boolean' or tv == 'nil' then&#13;&#10;    self:puts(tostring(v))&#13;&#10;  elseif tv == 'table' then&#13;&#10;    self:putTable(v)&#13;&#10;  else&#13;&#10;    self:puts('&lt;',tv,' ',self:getId(v),'&gt;')&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;-------------------------------------------------------------------&#13;&#10;&#13;&#10;function inspect.inspect(root, options)&#13;&#10;  options       = options or {}&#13;&#10;&#13;&#10;  local depth   = options.depth   or math.huge&#13;&#10;  local newline = options.newline or '\n'&#13;&#10;  local indent  = options.indent  or '  '&#13;&#10;  local process = options.process&#13;&#10;&#13;&#10;  if process then&#13;&#10;    root = processRecursive(process, root, {})&#13;&#10;  end&#13;&#10;&#13;&#10;  local inspector = setmetatable({&#13;&#10;    depth            = depth,&#13;&#10;    buffer           = {},&#13;&#10;    level            = 0,&#13;&#10;    ids              = setmetatable({}, idsMetaTable),&#13;&#10;    maxIds           = setmetatable({}, maxIdsMetaTable),&#13;&#10;    newline          = newline,&#13;&#10;    indent           = indent,&#13;&#10;    tableAppearances = countTableAppearances(root)&#13;&#10;  }, Inspector_mt)&#13;&#10;&#13;&#10;  inspector:putValue(root)&#13;&#10;&#13;&#10;  return table.concat(inspector.buffer)&#13;&#10;end&#13;&#10;&#13;&#10;setmetatable(inspect, { __call = function(_, ...) return inspect.inspect(...) end })&#13;&#10;&#13;&#10;return inspect&#13;&#10;end&#13;&#10;&#13;&#10;inspect = getInspect()"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000006"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="helper" uuid="31de155da840408abe9db99452f67f9f">
        <luaMethod luaMethodName="hexStringToTable" luaMethodCode="function hexStringToTable(hexString)&#13;&#10;&#13;&#10;&#9;local singleBytes = {} &#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- leere liste, hier kommen einfach die hex-werte rein&#13;&#10;&#9;for i in string.gmatch(hexString, &quot;%w+&quot;) do &#9;&#9;-- bei leerzeichen trennen (matchen auf alles, das kein leerzeichen ist)&#13;&#10;&#9;&#9;table.insert(singleBytes, i) &#9;&#9;&#9;&#9;&#9;-- die einzelnen bytes zur liste hinzuf&#252;gen&#13;&#10;&#9;end&#13;&#10;&#9;return singleBytes&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="cde6790d126b48a68f3706e4d50c0331"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="translateHexToAscii" luaMethodCode="function translateHexToAscii(hex)&#13;&#10;&#13;&#10;&#9;asciiTable = {}&#13;&#10;&#9;for i, byte in ipairs((hexStringToTable(hex:toHexString(1)))) do&#13;&#10;&#9;&#9;table.insert(asciiTable, string.char(tonumber(byte, 16)))&#13;&#10;&#9;end&#13;&#10;&#9;return table.concat(asciiTable)&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="bcfe8671c2a7426bb584e5262a41135e"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="splitInteger4Nybble2" luaMethodCode="splitInteger4Nybble2=function(int) -- integer input&#13;&#10;&#10;local t={}&#10;local bv=BigInteger(int)&#10;local msb16=bv:getBitRangeAsInt(16,4)&#10;local lsb16=bv:getBitRangeAsInt(8,4)&#10;local msb8=bv:getBitRangeAsInt(4,4)&#10;local lsb8 = bv:getBitRangeAsInt(0,4)&#10;table.insert(t,string.format(&quot;%.2x&quot;,msb16))&#10;table.insert(t,string.format(&quot;%.2x&quot;,lsb16))&#10;table.insert(t,string.format(&quot;%.2x&quot;,msb8))&#10;table.insert(t,string.format(&quot;%.2x&quot;,lsb8))&#10;--console(String(table.concat(t,&quot;|&quot;)))&#10;return t&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="02ce6f2f9fb344a79a8e884ba0a14db2"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="convert7to8" luaMethodCode="&#10;convert7to8 = function(midBlock)&#13;&#10;&#13;&#10;&#13;&#10;&#9;local nn = midBlock:getSize()/8&#13;&#10;&#13;&#10;&#9;local dat = {}&#13;&#10;&#9;if nn == 7 then&#13;&#10;&#13;&#10;&#9;&#9;--get the first Byte of each Block of 8&#13;&#10;&#13;&#10;&#9;&#9;local byte1 = midBlock:getRange(0,1)&#13;&#10;&#9;&#9;local byte2 = midBlock:getRange(8,1)&#13;&#10;&#9;&#9;local byte3 = midBlock:getRange(16,1)&#13;&#10;&#9;&#9;local byte4 = midBlock:getRange(24,1)&#13;&#10;&#9;&#9;local byte5 = midBlock:getRange(32,1)&#13;&#10;&#9;&#9;local byte6 = midBlock:getRange(40,1)&#13;&#10;&#9;&#9;local byte7 = midBlock:getRange(48,1)&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;--write each Byte to a table&#13;&#10;&#13;&#10;&#9;&#9;for i=0,55 do&#13;&#10;&#9;&#9;&#9;dat[i+1]=midBlock:getByte(i)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#13;&#10;&#9;&#9;--get the single bits of the first Byte of 8, to hex. This will be the MSb&#13;&#10;&#13;&#10;&#9;&#9;local bit00 = byte1:getBitRange(0,1)&#13;&#10;&#9;&#9;local bit01 = byte1:getBitRange(1,1)&#13;&#10;&#9;&#9;local bit02 = byte1:getBitRange(2,1)&#13;&#10;&#9;&#9;local bit03 = byte1:getBitRange(3,1)&#13;&#10;&#9;&#9;local bit04 = byte1:getBitRange(4,1)&#13;&#10;&#9;&#9;local bit05 = byte1:getBitRange(5,1)&#13;&#10;&#9;&#9;local bit06 = byte1:getBitRange(6,1)&#9;&#9;&#13;&#10;&#13;&#10;&#9;&#9;local bit10 = byte2:getBitRange(0,1)&#13;&#10;&#9;&#9;local bit11 = byte2:getBitRange(1,1)&#13;&#10;&#9;&#9;local bit12 = byte2:getBitRange(2,1)&#13;&#10;&#9;&#9;local bit13 = byte2:getBitRange(3,1)&#13;&#10;&#9;&#9;local bit14 = byte2:getBitRange(4,1)&#13;&#10;&#9;&#9;local bit15 = byte2:getBitRange(5,1)&#13;&#10;&#9;&#9;local bit16 = byte2:getBitRange(6,1)&#13;&#10;&#13;&#10;&#9;&#9;local bit20 = byte3:getBitRange(0,1)&#13;&#10;&#9;&#9;local bit21 = byte3:getBitRange(1,1)&#13;&#10;&#9;&#9;local bit22 = byte3:getBitRange(2,1)&#13;&#10;&#9;&#9;local bit23 = byte3:getBitRange(3,1)&#13;&#10;&#9;&#9;local bit24 = byte3:getBitRange(4,1)&#13;&#10;&#9;&#9;local bit25 = byte3:getBitRange(5,1)&#13;&#10;&#9;&#9;local bit26 = byte3:getBitRange(6,1)&#13;&#10;&#13;&#10;&#9;&#9;local bit30 = byte4:getBitRange(0,1)&#13;&#10;&#9;&#9;local bit31 = byte4:getBitRange(1,1)&#13;&#10;&#9;&#9;local bit32 = byte4:getBitRange(2,1)&#13;&#10;&#9;&#9;local bit33 = byte4:getBitRange(3,1)&#13;&#10;&#9;&#9;local bit34 = byte4:getBitRange(4,1)&#13;&#10;&#9;&#9;local bit35 = byte4:getBitRange(5,1)&#13;&#10;&#9;&#9;local bit36 = byte4:getBitRange(6,1)&#13;&#10;&#13;&#10;&#9;&#9;local bit40 = byte5:getBitRange(0,1)&#13;&#10;&#9;&#9;local bit41 = byte5:getBitRange(1,1)&#13;&#10;&#9;&#9;local bit42 = byte5:getBitRange(2,1)&#13;&#10;&#9;&#9;local bit43 = byte5:getBitRange(3,1)&#13;&#10;&#9;&#9;local bit44 = byte5:getBitRange(4,1)&#13;&#10;&#9;&#9;local bit45 = byte5:getBitRange(5,1)&#13;&#10;&#9;&#9;local bit46 = byte5:getBitRange(6,1)&#13;&#10;&#13;&#10;&#9;&#9;local bit50 = byte6:getBitRange(0,1)&#13;&#10;&#9;&#9;local bit51 = byte6:getBitRange(1,1)&#13;&#10;&#9;&#9;local bit52 = byte6:getBitRange(2,1)&#13;&#10;&#9;&#9;local bit53 = byte6:getBitRange(3,1)&#13;&#10;&#9;&#9;local bit54 = byte6:getBitRange(4,1)&#13;&#10;&#9;&#9;local bit55 = byte6:getBitRange(5,1)&#13;&#10;&#9;&#9;local bit56 = byte6:getBitRange(6,1)&#13;&#10;&#13;&#10;&#9;&#9;local bit60 = byte7:getBitRange(0,1)&#13;&#10;&#9;&#9;local bit61 = byte7:getBitRange(1,1)&#13;&#10;&#9;&#9;local bit62 = byte7:getBitRange(2,1)&#13;&#10;&#9;&#9;local bit63 = byte7:getBitRange(3,1)&#13;&#10;&#9;&#9;local bit64 = byte7:getBitRange(4,1)&#13;&#10;&#9;&#9;local bit65 = byte7:getBitRange(5,1)&#13;&#10;&#9;&#9;local bit66 = byte7:getBitRange(6,1)&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;local list = {}&#13;&#10;&#13;&#10;&#9;&#9;--the 7 last Bytes of each Block of 8, get their MSb back and are collected as hex in a table&#13;&#10;&#13;&#10;&#9;&#9;list[1] = string.format('%.2x', (dat[2]+(bit00*128)))&#13;&#10;&#9;&#9;list[2] = string.format('%.2x', (dat[3]+(bit01*128)))&#13;&#10;&#9;&#9;list[3] = string.format('%.2x', (dat[4]+(bit02*128)))&#13;&#10;&#9;&#9;list[4] = string.format('%.2x', (dat[5]+(bit03*128)))&#13;&#10;&#9;&#9;list[5] = string.format('%.2x', (dat[6]+(bit04*128)))&#13;&#10;&#9;&#9;list[6] = string.format('%.2x', (dat[7]+(bit05*128)))&#13;&#10;&#9;&#9;list[7] = string.format('%.2x', (dat[8]+(bit06*128)))&#13;&#10;&#13;&#10;&#9;&#9;list[8] = string.format('%.2x', (dat[10]+(bit10*128)))&#13;&#10;&#9;&#9;list[9] = string.format('%.2x', (dat[11]+(bit11*128)))&#13;&#10;&#9;&#9;list[10] = string.format('%.2x', (dat[12]+(bit12*128)))&#13;&#10;&#9;&#9;list[11] = string.format('%.2x', (dat[13]+(bit13*128)))&#13;&#10;&#9;&#9;list[12] = string.format('%.2x', (dat[14]+(bit14*128)))&#13;&#10;&#9;&#9;list[13] = string.format('%.2x', (dat[15]+(bit15*128)))&#13;&#10;&#9;&#9;list[14] = string.format('%.2x', (dat[16]+(bit16*128)))&#13;&#10;&#13;&#10;&#9;&#9;list[15] = string.format('%.2x', (dat[18]+(bit20*128)))&#13;&#10;&#9;&#9;list[16] = string.format('%.2x', (dat[19]+(bit21*128)))&#13;&#10;&#9;&#9;list[17] = string.format('%.2x', (dat[20]+(bit22*128)))&#13;&#10;&#9;&#9;list[18] = string.format('%.2x', (dat[21]+(bit23*128)))&#13;&#10;&#9;&#9;list[19] = string.format('%.2x', (dat[22]+(bit24*128)))&#13;&#10;&#9;&#9;list[20] = string.format('%.2x', (dat[23]+(bit25*128)))&#13;&#10;&#9;&#9;list[21] = string.format('%.2x', (dat[24]+(bit26*128)))&#13;&#10;&#13;&#10;&#9;&#9;list[22] = string.format('%.2x', (dat[26]+(bit30*128)))&#13;&#10;&#9;&#9;list[23] = string.format('%.2x', (dat[27]+(bit31*128)))&#13;&#10;&#9;&#9;list[24] = string.format('%.2x', (dat[28]+(bit32*128)))&#13;&#10;&#9;&#9;list[25] = string.format('%.2x', (dat[29]+(bit33*128)))&#13;&#10;&#9;&#9;list[26] = string.format('%.2x', (dat[30]+(bit34*128)))&#13;&#10;&#9;&#9;list[27] = string.format('%.2x', (dat[31]+(bit35*128)))&#13;&#10;&#9;&#9;list[28] = string.format('%.2x', (dat[32]+(bit36*128)))&#13;&#10;&#13;&#10;&#9;&#9;list[29] = string.format('%.2x', (dat[34]+(bit40*128)))&#13;&#10;&#9;&#9;list[30] = string.format('%.2x', (dat[35]+(bit41*128)))&#13;&#10;&#9;&#9;list[31] = string.format('%.2x', (dat[36]+(bit42*128)))&#13;&#10;&#9;&#9;list[32] = string.format('%.2x', (dat[37]+(bit43*128)))&#13;&#10;&#9;&#9;list[33] = string.format('%.2x', (dat[38]+(bit44*128)))&#13;&#10;&#9;&#9;list[34] = string.format('%.2x', (dat[39]+(bit45*128)))&#13;&#10;&#9;&#9;list[35] = string.format('%.2x', (dat[40]+(bit46*128)))&#13;&#10;&#13;&#10;&#9;&#9;list[36] = string.format('%.2x', (dat[42]+(bit50*128)))&#13;&#10;&#9;&#9;list[37] = string.format('%.2x', (dat[43]+(bit51*128)))&#13;&#10;&#9;&#9;list[38] = string.format('%.2x', (dat[44]+(bit52*128)))&#13;&#10;&#9;&#9;list[39] = string.format('%.2x', (dat[45]+(bit53*128)))&#13;&#10;&#9;&#9;list[40] = string.format('%.2x', (dat[46]+(bit54*128)))&#13;&#10;&#9;&#9;list[41] = string.format('%.2x', (dat[47]+(bit55*128)))&#13;&#10;&#9;&#9;list[42] = string.format('%.2x', (dat[48]+(bit56*128)))&#13;&#10;&#13;&#10;&#9;&#9;list[43] = string.format('%.2x', (dat[50]+(bit60*128)))&#13;&#10;&#9;&#9;list[44] = string.format('%.2x', (dat[51]+(bit61*128)))&#13;&#10;&#9;&#9;list[45] = string.format('%.2x', (dat[52]+(bit62*128)))&#13;&#10;&#9;&#9;list[46] = string.format('%.2x', (dat[53]+(bit63*128)))&#13;&#10;&#9;&#9;list[47] = string.format('%.2x', (dat[54]+(bit64*128)))&#13;&#10;&#9;&#9;list[48] = string.format('%.2x', (dat[55]+(bit65*128)))&#13;&#10;&#9;&#9;list[49] = string.format('%.2x', (dat[56]+(bit66*128)))&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;dat2Hextable = {}&#13;&#10;&#9;&#9;&#9;for i=1,56 do&#13;&#10;&#9;&#9;&#9;&#9;dat2Hextable[i] = string.format(&quot;%.2x&quot;,dat[i])&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#13;&#10;--local a = dat2Hextable&#13;&#10;--tableToListbox(a, 3)&#13;&#10;&#13;&#10;local a = list&#13;&#10;tableToListbox(a, 5)&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;local f = table.concat(list, ' ')&#13;&#10;&#9;&#9;--dump(table.concat(list, '\t'))&#13;&#10;&#9;&#9;return f&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;--dump('Bit')&#13;&#10;&#13;&#10;--dump(bit00)&#13;&#10;--dump(bit01)&#13;&#10;--dump(bit02)&#13;&#10;--dump(bit03)&#13;&#10;--dump(bit04)&#13;&#10;--dump(bit05)&#13;&#10;--dump(bit06)&#13;&#10;&#13;&#10;--&#9;&#9;dump(list[1])&#13;&#10;--&#9;&#9;dump(list[2])&#13;&#10;--&#9;&#9;dump(list[3])&#13;&#10;--&#9;&#9;dump(list[4])&#13;&#10;--&#9;&#9;dump(list[5])&#13;&#10;--&#9;&#9;dump(list[6])&#13;&#10;--&#9;&#9;dump(list[7])&#13;&#10;--dump('dat2Hextable')&#13;&#10;--dump(dat2Hextable)&#13;&#10;&#13;&#10;--dump('dat')&#13;&#10;--dump(dat)&#13;&#10;--dump('midBlock')&#13;&#10;--dump(midBlock:toHexString(1))&#13;&#10;--dump('byte1')&#13;&#10;--dump(byte1:toHexString(1))"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="f712021d3e344b5a9ffc680626cdf695"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="convert8to7" luaMethodCode="&#13;&#10;convert8to7 = function(datBlock)&#13;&#10;&#13;&#10;--local datBlock = MemoryBlock(string.format('08 00 80 00 b0 ff bf 00 b8 00 80 00 80 80 99 00 90 00 a0 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff ff 00 00 00 00'))&#13;&#10;&#13;&#10;&#9;local n = datBlock:getSize()&#13;&#10;&#9;local nn = datBlock:getSize() / 7&#9;&#9;--7&#13;&#10;&#9;local mid = {}&#13;&#10;--&#9;mid[1] = 0&#9;--here will be the Msb&#180;s of the 7 Bytes, in the end&#13;&#10;--&#9;mid[9] = 0&#13;&#10;--&#9;mid[17] = 0&#13;&#10;--&#9;mid[25] = 0&#13;&#10;--&#9;mid[33] = 0&#13;&#10;--&#9;mid[41] = 0&#13;&#10;--&#9;mid[49] = 0&#9;&#13;&#10;&#13;&#10;&#9;local block01Msb01=datBlock:getRange(0,1):getBitRange(7,1)&#13;&#10;&#9;local block01Msb02=datBlock:getRange(1,1):getBitRange(7,1)&#13;&#10;&#9;local block01Msb03=datBlock:getRange(2,1):getBitRange(7,1)&#13;&#10;&#9;local block01Msb04=datBlock:getRange(3,1):getBitRange(7,1)&#13;&#10;&#9;local block01Msb05=datBlock:getRange(4,1):getBitRange(7,1)&#13;&#10;&#9;local block01Msb06=datBlock:getRange(5,1):getBitRange(7,1)&#13;&#10;&#9;local block01Msb07=datBlock:getRange(6,1):getBitRange(7,1)&#13;&#10;&#9;local block02Msb01=datBlock:getRange(7,1):getBitRange(7,1)&#13;&#10;&#9;local block02Msb02=datBlock:getRange(8,1):getBitRange(7,1)&#13;&#10;&#9;local block02Msb03=datBlock:getRange(9,1):getBitRange(7,1)&#13;&#10;&#9;local block02Msb04=datBlock:getRange(10,1):getBitRange(7,1)&#13;&#10;&#9;local block02Msb05=datBlock:getRange(11,1):getBitRange(7,1)&#13;&#10;&#9;local block02Msb06=datBlock:getRange(12,1):getBitRange(7,1)&#13;&#10;&#9;local block02Msb07=datBlock:getRange(13,1):getBitRange(7,1)&#13;&#10;&#9;local block03Msb01=datBlock:getRange(14,1):getBitRange(7,1)&#13;&#10;&#9;local block03Msb02=datBlock:getRange(15,1):getBitRange(7,1)&#13;&#10;&#9;local block03Msb03=datBlock:getRange(16,1):getBitRange(7,1)&#13;&#10;&#9;local block03Msb04=datBlock:getRange(17,1):getBitRange(7,1)&#13;&#10;&#9;local block03Msb05=datBlock:getRange(18,1):getBitRange(7,1)&#13;&#10;&#9;local block03Msb06=datBlock:getRange(19,1):getBitRange(7,1)&#13;&#10;&#9;local block03Msb07=datBlock:getRange(20,1):getBitRange(7,1)&#13;&#10;&#9;local block04Msb01=datBlock:getRange(21,1):getBitRange(7,1)&#13;&#10;&#9;local block04Msb02=datBlock:getRange(22,1):getBitRange(7,1)&#13;&#10;&#9;local block04Msb03=datBlock:getRange(23,1):getBitRange(7,1)&#13;&#10;&#9;local block04Msb04=datBlock:getRange(24,1):getBitRange(7,1)&#13;&#10;&#9;local block04Msb05=datBlock:getRange(25,1):getBitRange(7,1)&#13;&#10;&#9;local block04Msb06=datBlock:getRange(26,1):getBitRange(7,1)&#13;&#10;&#9;local block04Msb07=datBlock:getRange(27,1):getBitRange(7,1)&#13;&#10;&#9;local block05Msb01=datBlock:getRange(28,1):getBitRange(7,1)&#13;&#10;&#9;local block05Msb02=datBlock:getRange(29,1):getBitRange(7,1)&#13;&#10;&#9;local block05Msb03=datBlock:getRange(30,1):getBitRange(7,1)&#13;&#10;&#9;local block05Msb04=datBlock:getRange(31,1):getBitRange(7,1)&#13;&#10;&#9;local block05Msb05=datBlock:getRange(32,1):getBitRange(7,1)&#13;&#10;&#9;local block05Msb06=datBlock:getRange(33,1):getBitRange(7,1)&#13;&#10;&#9;local block05Msb07=datBlock:getRange(34,1):getBitRange(7,1)&#13;&#10;&#9;local block06Msb01=datBlock:getRange(35,1):getBitRange(7,1)&#13;&#10;&#9;local block06Msb02=datBlock:getRange(36,1):getBitRange(7,1)&#13;&#10;&#9;local block06Msb03=datBlock:getRange(37,1):getBitRange(7,1)&#13;&#10;&#9;local block06Msb04=datBlock:getRange(38,1):getBitRange(7,1)&#13;&#10;&#9;local block06Msb05=datBlock:getRange(39,1):getBitRange(7,1)&#13;&#10;&#9;local block06Msb06=datBlock:getRange(40,1):getBitRange(7,1)&#13;&#10;&#9;local block06Msb07=datBlock:getRange(41,1):getBitRange(7,1)&#13;&#10;&#9;local block07Msb01=datBlock:getRange(42,1):getBitRange(7,1)&#13;&#10;&#9;local block07Msb02=datBlock:getRange(43,1):getBitRange(7,1)&#13;&#10;&#9;local block07Msb03=datBlock:getRange(44,1):getBitRange(7,1)&#13;&#10;&#9;local block07Msb04=datBlock:getRange(45,1):getBitRange(7,1)&#13;&#10;&#9;local block07Msb05=datBlock:getRange(46,1):getBitRange(7,1)&#13;&#10;&#9;local block07Msb06=datBlock:getRange(47,1):getBitRange(7,1)&#13;&#10;&#9;local block07Msb07=datBlock:getRange(48,1):getBitRange(7,1)&#13;&#10;&#9;&#13;&#10;&#9;mid[1] = block01Msb01*1+block01Msb02*2+block01Msb03*4+block01Msb04*8+block01Msb05*16+block01Msb06*32+block01Msb07*64&#13;&#10;&#9;mid[9] = block02Msb01*1+block02Msb02*2+block02Msb03*4+block02Msb04*8+block02Msb05*16+block02Msb06*32+block02Msb07*64&#13;&#10;&#9;mid[17] = block03Msb01*1+block03Msb02*2+block03Msb03*4+block03Msb04*8+block03Msb05*16+block03Msb06*32+block03Msb07*64&#13;&#10;&#9;mid[25] = block04Msb01*1+block04Msb02*2+block04Msb03*4+block04Msb04*8+block04Msb05*16+block04Msb06*32+block04Msb07*64&#13;&#10;&#9;mid[33] = block05Msb01*1+block05Msb02*2+block05Msb03*4+block05Msb04*8+block05Msb05*16+block05Msb06*32+block05Msb07*64&#13;&#10;&#9;mid[41] = block06Msb01*1+block06Msb02*2+block06Msb03*4+block06Msb04*8+block06Msb05*16+block06Msb06*32+block06Msb07*64&#13;&#10;&#9;mid[49] = block07Msb01*1+block07Msb02*2+block07Msb03*4+block07Msb04*8+block07Msb05*16+block07Msb06*32+block07Msb07*64&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#9;for i = 1,1+6 do&#13;&#10;&#9;&#9;mid[i+1] = datBlock:getByte(i-1)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;for i = 8,8+6 do&#13;&#10;&#9;&#9;mid[i+2] = datBlock:getByte(i-1)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;for i = 15,15+6 do&#13;&#10;&#9;&#9;mid[i+3] = datBlock:getByte(i-1)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;for i = 22,22+6 do&#13;&#10;&#9;&#9;mid[i+4] = datBlock:getByte(i-1)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;for i = 29,29+6 do&#13;&#10;&#9;&#9;mid[i+5] = datBlock:getByte(i-1)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;for i = 36,36+6 do&#13;&#10;&#9;&#9;mid[i+6] = datBlock:getByte(i-1)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;for i = 43,43+6 do&#13;&#10;&#9;&#9;mid[i+7] = datBlock:getByte(i-1)&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#13;&#10;&#9;for i = 1,56 do&#13;&#10;&#9;&#9;mid[i] = morethan127(mid[i])&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;midhex = {}&#13;&#10;&#9;for i=1,56 do&#13;&#10;&#9;&#9;midhex[i] = string.format(&quot;%.2x&quot;,(mid[i]))&#13;&#10;&#9;end&#13;&#10;--&#9;dump(nn)&#13;&#10;--&#9;dump(mid)&#13;&#10;--&#9;dump(midhex)&#13;&#10;return midhex&#13;&#10;end&#13;&#10;"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="dfa538ea62774dbd8b28157a1e095837"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="conv3Bto2B" luaMethodCode="function conv3Bto2B(midBlock)&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#9;local size = midBlock:getSize()&#13;&#10;--dump('size: '..size)&#13;&#10;&#9;local dat = {}&#13;&#10;&#9;if nn == 3 then&#13;&#10;&#13;&#10;&#9;&#9;--get the first Byte of the packet&#13;&#10;&#13;&#10;&#9;&#9;local byte1 = midBlock:getRange(1,1)&#13;&#10;&#13;&#10;&#13;&#10;--dump('byte1: ')&#13;&#10;--dump(byte1:toHexString(1))&#13;&#10;&#13;&#10;&#9;&#9;--write each Byte to a table&#13;&#10;&#13;&#10;&#9;&#9;for i=1,3 do&#13;&#10;&#9;&#9;&#9;dat[i]=midBlock:getByte(i)&#13;&#10;&#9;&#9;end&#13;&#10;--dump('dat: ')&#13;&#10;--dump(dat)&#9;&#13;&#10;&#9;&#9;--get the single bits of the first Byte of 8, to hex. This will be the MSb&#13;&#10;&#13;&#10;&#9;&#9;local bit00 = byte1:getBitRange(0,1)&#13;&#10;&#9;&#9;local bit01 = byte1:getBitRange(1,1)&#13;&#10;&#9;&#9;local bit02 = byte1:getBitRange(2,1)&#13;&#10;&#9;&#9;local bit03 = byte1:getBitRange(3,1)&#13;&#10;&#9;&#9;local bit04 = byte1:getBitRange(4,1)&#13;&#10;&#9;&#9;local bit05 = byte1:getBitRange(5,1)&#13;&#10;&#9;&#9;local bit06 = byte1:getBitRange(6,1)&#9;&#9;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;local list = {}&#13;&#10;&#13;&#10;&#9;&#9;--the 7 last Bytes of each Block of 8, get their MSb bach and are collected as hex in a table&#13;&#10;&#13;&#10;&#9;&#9;list[1] = string.format('%.2x', (dat[2]+(bit00*127)))&#13;&#10;&#9;&#9;list[2] = string.format('%.2x', (dat[3]+(bit01*127)))&#13;&#10;&#9;&#9;&#13;&#10;&#13;&#10;--&#9;dump(Block1:toHexString(1))&#13;&#10;&#13;&#10;&#13;&#10;--dump(bit00)&#13;&#10;--dump(bit01)&#13;&#10;--dump(bit02)&#13;&#10;--dump(bit03)&#13;&#10;--dump(bit04)&#13;&#10;--dump(bit05)&#13;&#10;--dump(bit06)&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;--dump(list[1])&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;local f = table.concat(list, ' ')&#13;&#10;&#9;&#9;--dump(table.concat(list, '\t'))&#13;&#10;&#9;&#9;return f&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#13;&#10;end&#13;&#10;"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="4c4113a124674b37b73ab8ed2c93fbe2"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="combine2x4nib" luaMethodCode="function combine2x4nib(a, b)-- convert two 4 bit nibbles to a single integer&#13;&#10;&#13;&#10;    local m = bit.lshift(a, 8)&#13;&#10;    return m + b&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="16ab35900e1f46de9737fde96e03153d"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="tableToListbox" luaMethodCode="function tableToListbox(a, number)&#10;&#10;&#13;&#10;&#9;if number == 1 then&#13;&#10;&#9;&#9;local f = table.concat(a, &quot;\n&quot;)&#13;&#10;&#9;&#9;panel:getComponent(&quot;listbox1&quot;):setPropertyString(&quot;uiListBoxContent&quot;,f)&#9;&#9;&#9;&#9;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if number == 2 then&#13;&#10;&#9;&#9;local f = table.concat(a, &quot;\n&quot;)&#13;&#10;&#9;&#9;panel:getComponent(&quot;listbox2&quot;):setPropertyString(&quot;uiListBoxContent&quot;,f)&#9;&#9;&#9;&#9;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if number == 3 then&#13;&#10;&#9;&#9;local f = table.concat(a, &quot;\n&quot;)&#13;&#10;&#9;&#9;panel:getComponent(&quot;listbox3&quot;):setPropertyString(&quot;uiListBoxContent&quot;,f)&#9;&#9;&#9;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if number == 4 then&#13;&#10;&#9;&#9;local f = table.concat(a, &quot;\n&quot;)&#13;&#10;&#9;&#9;panel:getComponent(&quot;listbox4&quot;):setPropertyString(&quot;uiListBoxContent&quot;,f)&#9;&#9;&#9;&#9;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if number == 5 then&#13;&#10;&#9;&#9;local f = table.concat(a, &quot;\n&quot;)&#13;&#10;&#9;&#9;panel:getComponent(&quot;listbox5&quot;):setPropertyString(&quot;uiListBoxContent&quot;,f)&#9;&#9;&#9;&#9;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if number == 6 then&#13;&#10;&#9;&#9;local f = table.concat(a, &quot;\n&quot;)&#13;&#10;&#9;&#9;panel:getComponent(&quot;listbox6&quot;):setPropertyString(&quot;uiListBoxContent&quot;,f)&#9;&#9;&#9;&#9;&#13;&#10;&#9;end&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="ddca59bad6fd40fc9edeb8544a41d3d5"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="morethan127" luaMethodCode="function morethan127(val)&#13;&#10;&#10;&#9;if val &gt;= 128 then&#13;&#10;&#9;&#9;val = val-128&#13;&#10;&#9;end&#13;&#10;&#9;return val&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="2b0bc37978af41808cc847c62015290b"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="get_K_V" luaMethodCode="&#10;function get_K_V(t, func)&#13;&#10;&#13;&#10;  local out = {}&#13;&#10;  for k, v in pairs(t) do&#13;&#10;    out[k] = func(k, v)&#13;&#10;  end&#13;&#10;  return out&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="537326258aab45dbaba9f2e4e12b4fea"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="joinbyspace" luaMethodCode="&#10;function joinbyspace(k, v) &#13;&#10;&#13;&#10;  return k .. '  -  ' .. v &#13;&#10;end&#13;&#10;"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="7e39c65d2b9047b19658c17c3560ef22"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="HexToChar" luaMethodCode="function HexToChar()&#10;local hex_to_char = {}&#13;&#10;&#9;for idx = 0, 255 do&#13;&#10;    &#9;hex_to_char[(&quot;%02X&quot;):format(idx)] = string.char(idx)&#13;&#10;    &#9;hex_to_char[(&quot;%02x&quot;):format(idx)] = string.char(idx)&#13;&#10;&#9;end&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="fc90773e1ed74839a0da215e766d54a5"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="deselectListRows" luaMethodCode="function deselectListRows()&#10;&#13;&#10;local l = panel:getListBox(&quot;Pset_ListBox&quot;)&#13;&#10;&#9;l:deselectAllRows();&#13;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="d5890fc28c064c9fa57a4fcf0377a135"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="setLenghtName" luaMethodCode="function setLenghtName(newName2)&#13;&#10;&#13;&#10;local newNamex = &quot;&quot;&#13;&#10;local char = &quot;&quot;&#13;&#10;--dump(&quot;char&quot;)&#13;&#10;--dump(char)&#10;&#9;for i = 1,16,1 do&#13;&#10;&#9;&#9;char = string.sub((newName2),i,i)&#13;&#10;&#9;&#9;if char ~= &quot;&quot; then--== nil then&#13;&#10;&#9;&#9;&#9;char = string.sub((newName2),i,i)&#9;&#13;&#10;&#9;&#9;else &#13;&#10;&#9;&#9;&#9;char = &quot; &quot;&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;newNamex = (newNamex .. char)&#13;&#10;&#9;end&#13;&#10;-- &#9;dump(&quot;newNamex&quot;)&#13;&#10;--&#9;dump(newNamex)&#13;&#10;&#9;return newNamex&#13;&#10;&#9;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="13bbeaa85e0f4edda6fc44c488e6433c"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="splitt16Bit" luaMethodCode="function splitt16Bit(value)&#13;&#10;&#13;&#10;&#9;local hex = ''&#10;&#9;local x = string.format('%.4x', value)&#13;&#10;&#9;local msB = string.sub(x,0,2)&#13;&#10;&#9;local lsB = string.sub(x,3)&#13;&#10;&#9;hex = hex..msB..' '..lsB..' ' &#13;&#10;&#9;return hex&#13;&#10;end&#13;&#10;--&#9;dump('msB: '..msB)&#13;&#10;--&#9;dump('lsB: '..lsB)&#13;&#10;&#13;&#10;--dump('hex')&#13;&#10;--dump(hex)"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="c6d6c7f1397840af8474962b1a22726b"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="repIllegChar" luaMethodCode="function repIllegChar(name)&#10;&#13;&#10;&#13;&#10;local newNamex = &quot;&quot;&#13;&#10;local char = &quot;&quot;&#13;&#10;--dump(&quot;char&quot;)&#13;&#10;--dump(char)&#10;&#9;for i = 1,16,1 do&#13;&#10;&#9;&#9;char = string.sub((name),i,i)&#13;&#10;&#9;&#9;if char &gt;= string.char(32) and char &lt;= string.char(127) then&#9;--== nil then&#13;&#10;&#9;&#9;&#9;char = string.sub((name),i,i)&#9;&#13;&#10;&#9;&#9;else &#13;&#10;&#9;&#9;&#9;char = &quot; &quot;&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;newNamex = (newNamex .. char)&#13;&#10;&#9;end&#13;&#10;-- &#9;dump(&quot;newNamex&quot;)&#13;&#10;--&#9;dump(newNamex)&#13;&#10;&#9;return newNamex&#13;&#10;&#9;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="8f4fa81e672e45df8d4717f5e1d88b17"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="Reporters" uuid="f4c46c1dca7c47349eac67f29c3eff7d">
        <luaMethod luaMethodName="getModValsForPset" luaMethodCode="function getModValsForPset()&#13;&#10;&#13;&#10;&#9;local parameter = &quot;&quot;&#10;&#9;local para01 = &quot;80 00 &quot;&#13;&#10;&#9;local para02 = &quot;80 00 &quot;&#13;&#10;&#9;local para03 = &quot;80 00 &quot;&#13;&#10;&#9;local para04 = &quot;80 00 &quot;&#13;&#10;&#9;local para05 = &quot;80 00 &quot;&#13;&#10;&#9;local para06 = &quot;80 00 &quot;&#13;&#10;&#9;local para07 = &quot;80 00 &quot;&#13;&#10;&#9;local para08 = &quot;80 00 &quot;&#13;&#10;&#9;local para09 = &quot;80 00 &quot;&#13;&#10;&#9;local para10 = &quot;80 00 &quot;&#13;&#10;&#13;&#10;&#9;local algo = AlgoTab:getProperty(&quot;uiTabsCurrentTab&quot;)&#13;&#10;--&#9;dump(algo)&#10;&#9;local para00 = string.format('%.2x ', algo)&#13;&#10;&#9;&#9;&#13;&#10;&#9;if algo == 1 then&#13;&#10;&#9;&#9;para01 = splitt16Bit(RevMidReverbDecay:getValueMapped())&#13;&#10;&#9;&#9;para02 = splitt16Bit(RevPredelay:getValueMapped())&#13;&#10;&#9;&#9;para03 = splitt16Bit(RevEffectsLevel:getValueMapped())&#13;&#10;&#9;&#9;para04 = splitt16Bit(RevBassMultiply:getValueMapped())&#13;&#10;&#9;&#9;para05 = splitt16Bit(RevHighFreqCutoff:getValueMapped())&#13;&#10;&#9;&#9;para06 = splitt16Bit(RevSize:getValueMapped())&#13;&#10;&#9;&#9;para07 = splitt16Bit(RevPredelayFeedback:getValueMapped())&#13;&#10;&#9;&#9;para08 = splitt16Bit(RevDiffusion:getValueMapped())&#13;&#10;&#9;&#9;--para09 = PsetTbl[x]:getRange(0, 21):toHexString(1)&#9;&#9;&#9;--does not change anything, so left at zero, 32768&#13;&#10;&#9;&#9;--para10 = splitt16Bit()&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;--does not change anything, so left at zero, 32768&#13;&#10;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#13;&#10;&#13;&#10;&#9;if algo == 2 then&#13;&#10;&#9;&#9;para01 = splitt16Bit(PlateMidReverbDecay:getValueMapped())&#13;&#10;&#9;&#9;para02 = splitt16Bit(PlatePredelay:getValueMapped())&#13;&#10;&#9;&#9;para03 = splitt16Bit(PlateEffectsLevel:getValueMapped())&#13;&#10;&#9;&#9;para04 = splitt16Bit(PlateBassMultiply:getValueMapped())&#13;&#10;&#9;&#9;para05 = splitt16Bit(PlateHighFreqCutoff:getValueMapped())&#13;&#10;&#9;&#9;para06 = splitt16Bit(PlateSize:getValueMapped())&#13;&#10;&#9;&#9;para07 = splitt16Bit(PlatePredelayFeedback:getValueMapped())&#13;&#10;&#9;&#9;para08 = splitt16Bit(PlateDiffusion:getValueMapped())&#13;&#10;&#9;&#9;--para09 = splitt16Bit()&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;--does not change anything, so left at zero, 32768&#13;&#10;&#9;&#9;--para10 = splitt16Bit()&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;--does not change anything, so left at zero, 32768&#13;&#10;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;if algo == 3 then&#13;&#10;&#9;&#9;para01 = splitt16Bit(Chorus1NegativFeedback:getValueMapped())&#13;&#10;&#9;&#9;para02 = splitt16Bit(Chorus1Depht:getValueMapped())&#13;&#10;&#9;&#9;para03 = splitt16Bit(Chorus1EffectsLevel:getValueMapped())&#13;&#10;&#9;&#9;para04 = splitt16Bit(Chorus1RightFeedback:getValueMapped())&#13;&#10;&#9;&#9;para05 = splitt16Bit(Chorus1RightDelay:getValueMapped())&#13;&#10;&#9;&#9;para06 = splitt16Bit(Chorus1Shape:getValueMapped())&#13;&#10;&#9;&#9;para07 = splitt16Bit(Chorus1LeftFeedback:getValueMapped())&#13;&#10;&#9;&#9;para08 = splitt16Bit(Chorus1LeftDelay:getValueMapped())&#13;&#10;&#9;&#9;para09 = splitt16Bit(Chorus1Rate:getValueMapped())&#13;&#10;&#9;&#9;--para10 = splitt16Bit()&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;--does not change anything, so left at zero, 32768&#13;&#10;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;if algo == 4 then&#13;&#10;&#9;&#9;para01 = splitt16Bit(Delay2PositivFeedback:getValueMapped())&#13;&#10;&#9;&#9;para02 = splitt16Bit(Delay2GangedDelay:getValueMapped())&#13;&#10;&#9;&#9;para03 = splitt16Bit(Delay2EffectsLevel:getValueMapped())&#13;&#10;&#9;&#9;para04 = splitt16Bit(Delay2Feedback:getValueMapped())&#13;&#10;&#9;&#9;para05 = splitt16Bit(Delay2LeftDelay:getValueMapped())&#13;&#10;&#9;&#9;para06 = splitt16Bit(Delay2RightDelay:getValueMapped())&#13;&#10;&#9;&#9;--para07 = &#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;--does not change anything, so left at zero, 32768&#13;&#10;&#9;&#9;para08 = splitt16Bit(Delay2HiFreqCut:getValueMapped())&#13;&#10;&#9;&#9;para09 = splitt16Bit(Delay2Diffusion:getValueMapped())&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;--para10 = splitt16Bit()&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;--does not change anything, so left at zero, 32768&#13;&#10;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;if algo == 5 then&#13;&#10;&#9;&#9;--para01 = splitt16Bit(:getValueMapped())&#9;&#9;&#9;&#9;&#9;&#9;--same as para07 but only positiv Resonance, dont know what to do to not correlate the one with the other , left at zero&#13;&#10;&#9;&#9;--para02 = splitt16Bit(:getValueMapped())&#9;&#9;&#9;&#9;&#9;&#9;-- interacts somehow with para10, at 32768, sets Tuning to -1, so zero is not good.............&#13;&#10;&#9;&#9;para03 = splitt16Bit(Chorus2EffectsLevel:getValueMapped())&#13;&#10;&#9;&#9;para04 = splitt16Bit(Chorus2Predelay:getValueMapped())&#13;&#10;&#9;&#9;para05 = splitt16Bit(Chorus2LoFreqCut:getValueMapped())&#13;&#10;&#9;&#9;para06 = splitt16Bit(Chorus2Shimmer:getValueMapped())&#13;&#10;&#9;&#9;para07 = splitt16Bit(Chorus2MstrResonance:getValueMapped())&#13;&#10;&#9;&#9;para08 = splitt16Bit(Chorus2Richness:getValueMapped())&#13;&#10;&#9;&#9;para09 = splitt16Bit(Chorus2Slope:getValueMapped())&#13;&#10;&#9;&#9;para10 = splitt16Bit(Chorus2Tuning)&#13;&#10;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;if algo == 6 then&#13;&#10;&#9;&#9;para01 = splitt16Bit(InverseSize:getValueMapped())&#13;&#10;&#9;&#9;para02 = splitt16Bit(InversePredelaygetValueMapped())&#9;&#9;&#9;--same as para09&#13;&#10;&#9;&#9;para03 = splitt16Bit(InverseEffectsLevel:getValueMapped())&#13;&#10;&#9;&#9;--para04 = splitt16Bit(:getValueMapped())&#9;&#9;&#9;&#9;&#9;&#9;--does not change anything, so left at zero, 32768&#13;&#10;&#9;&#9;para05 = splitt16Bit(InverseHiFreqCut:getValueMapped())&#13;&#10;&#9;&#9;para06 = splitt16Bit(InverseSlope:getValueMapped())&#13;&#10;&#9;&#9;para07 = splitt16Bit(InversePreDlyFdbk:getValueMapped())&#13;&#10;&#9;&#9;para08 = splitt16Bit(InverseDiffusiongetValueMapped())&#13;&#10;&#9;&#9;para09 = splitt16Bit(InversePredelaygetValueMapped())&#13;&#10;&#9;&#9;--para10 = splitt16Bit()&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;--does not change anything, so left at zero, 32768&#13;&#10;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;if algo == 7 then&#13;&#10;&#9;&#9;para01 = splitt16Bit(GateGateTime:getValueMapped())&#13;&#10;&#9;&#9;para02 = splitt16Bit(GatePredelaygetValueMapped())&#9;&#9;&#9;&#9;--same as para09&#13;&#10;&#9;&#9;para03 = splitt16Bit(GateEffectsLevel:getValueMapped())&#13;&#10;&#9;&#9;--para04 = splitt16Bit(:getValueMapped())&#9;&#9;&#9;&#9;&#9;&#9;--does not change anything, so left at zero, 32768&#13;&#10;&#9;&#9;para05 = splitt16Bit(GateHiFreqCut:getValueMapped())&#13;&#10;&#9;&#9;para06 = splitt16Bit(GateSlope:getValueMapped())&#13;&#10;&#9;&#9;para07 = splitt16Bit(GatePreDlyFdbk:getValueMapped())&#13;&#10;&#9;&#9;para08 = splitt16Bit(GateDiffusiongetValueMapped())&#13;&#10;&#9;&#9;para09 = splitt16Bit(GatePredelaygetValueMapped())&#13;&#10;&#9;&#9;--para10 = splitt16Bit()&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;--does not change anything, so left at zero, 32768&#13;&#10;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;if algo == 8 then&#13;&#10;&#9;&#9;para01 = splitt16Bit(Delay1Delay3Fdbk:getValueMapped())&#9;&#9;&#9;--same as para07&#13;&#10;&#9;&#9;para02 = splitt16Bit(Delay1GroupDelay:getValueMapped())&#13;&#10;&#9;&#9;para03 = splitt16Bit(Delay1EffectsLevel:getValueMapped())&#13;&#10;&#9;&#9;para04 = splitt16Bit(Delay1HiCut:getValueMapped())&#13;&#10;&#9;&#9;para05 = splitt16Bit(Delay1Delay2Spread:getValueMapped())&#13;&#10;&#9;&#9;para06 = splitt16Bit(Delay1Delay3Spread:getValueMapped())&#13;&#10;&#9;&#9;para07 = splitt16Bit(Delay1Delay3Fdbk:getValueMapped())&#13;&#10;&#9;&#9;para08 = splitt16Bit(Delay1Diffusion:getValueMapped())&#13;&#10;&#9;&#9;para09 = splitt16Bit(Delay1Rate:getValueMapped())&#13;&#10;&#9;&#9;--para10 = splitt16Bit(:)&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;--does not change anything, so left at zero, 32768&#13;&#10;&#9;end&#13;&#10;&#13;&#10;local parameter = parameter..para00..para01..para02..para03..para04..para05..para06..para07..para08..para09..para10&#13;&#10;--dump('parameter')&#13;&#10;--dump(parameter)&#13;&#10;end&#13;&#10;"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="57693edc64ec4fd2a6b3b0f13e1c72b7"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="getNameForPreset" luaMethodCode="function getNameForPreset()&#10;&#9;-- Your method code here&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="e1705c2b21124f9e9ae52f25207daf81"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="getMappingForPreset" luaMethodCode="&#13;&#10;function getMappingForPreset()&#13;&#10;&#9;&#9;local parameter = &quot;&quot;&#13;&#10;&#13;&#10;&#9;&#9;local para37 = 'F0 '&#13;&#10;&#9;&#9;local para38 = 'F0 '&#13;&#10;&#9;&#9;local para39 = 'F0 '&#13;&#10;&#9;&#9;local para40 = 'F0 '&#13;&#10;&#9;&#9;local para41 = 'F0 '&#13;&#10;&#9;&#9;local para42 = 'F0 '&#13;&#10;&#9;&#9;local para43 = 'F0 '&#13;&#10;&#9;&#9;local para44 = 'F0 '&#13;&#10;&#9;&#9;local para45 = 'F0 '&#13;&#10;&#9;&#9;local para46 = 'F0 '&#13;&#10;&#9;&#9;local para47 = 'F0 '&#13;&#10;&#9;&#9;local para48 = 'F0 '&#13;&#10;&#13;&#10;&#10;&#9;&#9;local para37 = string.format('%.2x ', PatchSource01:getValue())&#13;&#10;&#9;&#9;local para38 = string.format('%.2x ', PatchSource02:getValue())&#13;&#10;&#9;&#9;local para39 = string.format('%.2x ', PatchSource03:getValue())&#13;&#10;&#9;&#9;local para40 = string.format('%.2x ', PatchSource04:getValue())&#13;&#10;&#9;&#9;local para41 = string.format('%.2x ', PatchDestination01:getValue())&#13;&#10;&#9;&#9;local para42 = string.format('%.2x ', PatchDestination02:getValue())&#13;&#10;&#9;&#9;local para43 = string.format('%.2x ', PatchDestination03:getValue())&#13;&#10;&#9;&#9;local para44 = string.format('%.2x ', PatchDestination04:getValue())&#13;&#10;&#9;&#9;local para45 = string.format('%.2x ', PatchScale01:getValue())&#13;&#10;&#9;&#9;local para46 = string.format('%.2x ', PatchScale02:getValue())&#13;&#10;&#9;&#9;local para47 = string.format('%.2x ', PatchScale03:getValue())&#13;&#10;&#9;&#9;local para48 = string.format('%.2x ', PatchScale04:getValue())&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;local parameter = parameter..para37..para38..para39..para40..para41..para42..para43..para44..para45..para46..para47..para48&#13;&#10;--dump(parameter)&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="abb567a688e447ea8b0d4d5a14488615"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="ChMod" uuid="508bec2258954633a27204768b562dfe">
        <luaMethod luaMethodName="chMod_Uni_ValByName" luaMethodCode="function chMod_Uni_ValByName(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#10;&#13;&#10;&#13;&#10;&#9;if is_panel_ready() == true and source == 4 then&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;local x = tonumber(mod:getValueMapped())&#13;&#10;&#9;&#9;--FX-Parameter&#13;&#10;&#9;&#9;local modulatorCustomIndex = mod:getProperty(&quot;modulatorCustomIndex&quot;)&#13;&#10;&#10;&#9;&#9;--get Value as BitInteger&#10;&#9;&#9;local val = BigInteger(x)&#13;&#10;&#13;&#10;&#9;&#9;--slice into 4 bit Values and get the Values&#9;&#13;&#10;&#9;&#9;local lsb1 = val:getBitRangeAsInt(0,4)&#13;&#10;&#9;&#9;local lsb2 = val:getBitRangeAsInt(4,4)&#13;&#10;&#9;&#9;local msb1 = val:getBitRangeAsInt(8,4)&#13;&#10;&#9;&#9;local msb2 = val:getBitRangeAsInt(12,4)&#13;&#10;&#13;&#10;&#9;&#9;local SysEx = string.format('F0 06 02 5%.1x %.2x %.2x %.2x %.2x %.2x F7', MidiChannel, modulatorCustomIndex, msb2, msb1, lsb2, lsb1)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(SysEx))&#13;&#10;&#13;&#10;&#9;&#9;local a = {}&#13;&#10;&#9;&#9;a[1] = value&#13;&#10;&#9;&#9;a[2] = x&#13;&#10;&#9;&#9;a[3] = lsb1&#13;&#10;&#9;&#9;a[4] = lsb2&#13;&#10;&#9;&#9;a[5] = msb1&#13;&#10;&#9;&#9;a[6] = msb2&#13;&#10;&#9;&#9;tableToListbox(a, 2)&#13;&#10;&#9;else end&#13;&#10;end&#13;&#10;"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="baa04232e3354a309251a1546dc0b189"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="AsciTest" luaMethodCode="function AsciTest(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#10;&#9;if is_panel_ready() == true then&#13;&#10;&#13;&#10;&#9;&#9;local valTest = Asci:getValue()&#13;&#10;--&#9;&#9;dump(valTest)&#13;&#10;&#13;&#10;&#9;&#9;--FX-Parameter&#13;&#10;&#9;&#9;local ziffferNmbr = ZifferNr:getValue()&#13;&#10;&#9;&#9;--dump(ziffferNmbr)&#10;&#9;&#9;--get Value as BitInteger&#10;&#9;&#9;local val = BigInteger(valTest)&#13;&#10;&#13;&#10;&#9;&#9;--slice into 4 bit Values and get the Values&#9;&#13;&#10;&#9;&#9;local lsb1 = val:getBitRangeAsInt(0,4)&#9;&#9;&#13;&#10;&#9;&#9;--dump(lsb1)&#13;&#10;&#9;&#9;local lsb2 = val:getBitRangeAsInt(4,4)&#13;&#10;&#9;&#9;--dump(lsb2)&#13;&#10;&#9;&#9;local msb1 = val:getBitRangeAsInt(8,4)&#13;&#10;&#9;&#9;--dump(msb1)&#13;&#10;&#9;&#9;local msb2 = val:getBitRangeAsInt(12,4)&#13;&#10;&#9;&#9;--dump(msb2)&#13;&#10;&#13;&#10;&#9;&#9;local SysEx = string.format('F0 06 02 5%.1x %.2x %.2x %.2x %.2x %.2x F7', MidiChannel, ziffferNmbr, msb2, msb1, lsb2, lsb1)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(SysEx))&#13;&#10;&#9;else end&#10;end&#13;&#10;&#13;&#10;"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="30aae470ed7d4907badd7f12e54eb104"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="chMod_FaderVal" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;chMod_FaderVal = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#10;&#9;if is_panel_ready() == true and source == 4 then&#13;&#10;&#9;&#9;--local mc = panel:getPropertyString(&quot;panelVersionName&quot;)&#13;&#10;&#9;&#9;--dump(panel:getPropertyString(&quot;panelVersionName&quot;))&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;--multiplyer&#13;&#10;&#9;&#9;local mode = tonumber(mod:getProperty(&quot;modulatorCustomIndexGroup&quot;))&#13;&#10;&#9;&#9;--dump('mode: '..mode)&#13;&#10;&#13;&#10;--&#9;&#9;--FX-Parameter&#13;&#10;&#9;&#9;local modulatorCustomIndex = mod:getProperty(&quot;modulatorCustomIndex&quot;)&#13;&#10;&#10;--&#9;&#9;--get Value as BitInteger&#10;&#9;&#9;local val = BigInteger(value)&#13;&#10;&#13;&#10;&#9;&#9;--slice into 4 bit Values and get the Values&#9;&#13;&#10;&#9;&#9;local lsb1 = val:getBitRangeAsInt(0,4)&#13;&#10;&#9;&#9;local lsb2 = val:getBitRangeAsInt(4,4)&#13;&#10;&#9;&#9;local msb1 = val:getBitRangeAsInt(8,4)&#13;&#10;&#9;&#9;local msb2 = val:getBitRangeAsInt(12,4)&#13;&#10;&#13;&#10;&#9;&#9;local SysEx = string.format('F0 06 02 5%.1x %.2x %.2x %.2x %.2x %.2x F7', MidiChannel, modulatorCustomIndex, msb2, msb1, lsb2, lsb1)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(SysEx))&#13;&#10;&#13;&#10;&#9;&#9;--dump('msb2: '..msb2)&#13;&#10;&#9;&#9;--dump('msb1: '..msb1)&#13;&#10;&#9;&#9;--dump('lsb2: '..lsb2)&#13;&#10;&#9;&#9;--dump('lsb1: '..lsb1)&#13;&#10;&#9;&#9;--dump('SysEx: '..SysEx)&#13;&#10;&#9;else end&#13;&#10;end&#13;&#10;"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="5cbc808c39054d36bac56e6952e5074d" luaMethodValid="1"/>
        <luaMethod luaMethodName="chAlgo" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;chAlgo = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#9;if is_panel_ready() == true and source == 4 then&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;local x = value&#13;&#10;&#9;&#9;--FX-Parameter&#13;&#10;&#9;&#9;local modulatorCustomIndex = mod:getProperty(&quot;modulatorCustomIndex&quot;)&#13;&#10;&#10;&#9;&#9;--get Value as BitInteger&#10;&#9;&#9;local val = BigInteger(x)&#13;&#10;&#13;&#10;&#9;&#9;--slice into 4 bit Values and get the Values&#9;&#13;&#10;&#9;&#9;local lsb1 = val:getBitRangeAsInt(0,4)&#13;&#10;&#9;&#9;local lsb2 = val:getBitRangeAsInt(4,4)&#13;&#10;&#9;&#9;local msb1 = val:getBitRangeAsInt(8,4)&#13;&#10;&#9;&#9;local msb2 = val:getBitRangeAsInt(12,4)&#13;&#10;&#13;&#10;&#9;&#9;local SysEx = string.format('F0 06 02 5%.1x %.2x %.2x %.2x %.2x %.2x F7', MidiChannel, modulatorCustomIndex, msb2, msb1, lsb2, lsb1)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(SysEx))&#13;&#10;&#13;&#10;&#9;&#9;local a = {}&#13;&#10;&#9;&#9;a[1] = value&#13;&#10;&#9;&#9;a[2] = x&#13;&#10;&#9;&#9;a[3] = lsb1&#13;&#10;&#9;&#9;a[4] = lsb2&#13;&#10;&#9;&#9;a[5] = msb1&#13;&#10;&#9;&#9;a[6] = msb2&#13;&#10;&#9;&#9;tableToListbox(a, 2)&#13;&#10;&#9;else end&#13;&#10;end"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="b5aa20e7939348b281c28ce1ac6d6ca5" luaMethodValid="1"/>
        <luaMethod luaMethodName="listBox_Nr_Row" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;listBox_Nr_Row = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;&#9;if is_panel_ready() == true then&#13;&#10;&#9;&#9;local l = panel:getListBox(&quot;Pset_ListBox&quot;)&#13;&#10;&#13;&#10; &#9;&#9;psetListRow = (l:getLastRowSelected())&#13;&#10;--&#9;&#9;dump(&quot;psetListRow&quot;)&#13;&#10;--&#9;&#9;dump(psetListRow)&#13;&#10;&#9;end&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="63e3698dc3b24caf86c9233d646b5e59"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="ChPatch" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;ChPatch = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#9;if is_panel_ready() == true and source == 4 then&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;local x = tonumber(mod:getValueMapped())&#13;&#10;&#9;&#9;--FX-Parameter&#13;&#10;&#9;&#9;local modulatorCustomIndex = mod:getProperty(&quot;modulatorCustomIndex&quot;)&#13;&#10;--dump(modulatorCustomIndex)&#10;&#9;&#9;--get Value as BitInteger&#10;&#9;&#9;local val = BigInteger(x)&#13;&#10;&#13;&#10;&#9;&#9;--slice into 4 bit Values and get the Values&#9;&#13;&#10;&#9;&#9;local lsb1 = val:getBitRangeAsInt(0,4)&#13;&#10;&#9;&#9;local lsb2 = val:getBitRangeAsInt(4,4)&#13;&#10;&#9;&#9;local msb1 = val:getBitRangeAsInt(8,4)&#13;&#10;&#9;&#9;local msb2 = val:getBitRangeAsInt(12,4)&#13;&#10;&#13;&#10;&#9;&#9;local SysEx = string.format('F0 06 02 5%.1x %.2x %.2x %.2x %.2x %.2x F7', MidiChannel, modulatorCustomIndex, msb2, msb1, lsb2, lsb1)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(SysEx))&#13;&#10;&#13;&#10;&#9;&#9;local a = {}&#13;&#10;&#9;&#9;a[1] = value&#13;&#10;&#9;&#9;a[2] = x&#13;&#10;&#9;&#9;a[3] = lsb1&#13;&#10;&#9;&#9;a[4] = lsb2&#13;&#10;&#9;&#9;a[5] = msb1&#13;&#10;&#9;&#9;a[6] = msb2&#13;&#10;&#9;&#9;tableToListbox(a, 2)&#13;&#10;&#9;else end&#13;&#10;end"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="038496f52a8e42f6a6b5e8c7e5027ae1" luaMethodValid="1"/>
        <luaMethod luaMethodName="chAlgoTab" luaMethodCode="--&#10;-- Called when the current tab in an uiTabs component is changed&#10;--&#10;&#10;chAlgoTab = function(--[[ CtrlrModulator --]] mod, --[[ number --]] tabIndex)&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#9;if is_panel_ready() == true and source ~= 5 then&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;local x = tabIndex&#13;&#10;&#9;&#9;--FX-Parameter&#13;&#10;&#9;&#9;--local modulatorCustomIndex = mod:getProperty(&quot;modulatorCustomIndex&quot;)&#13;&#10;&#9;&#9;local modulatorCustomIndex = tostring(mod:getProperty(&quot;modulatorCustomIndex&quot;))&#13;&#10;--dump(x)&#10;&#9;&#9;--get Value as BitInteger&#10;&#9;&#9;local val = BigInteger(x)&#13;&#10;&#13;&#10;&#9;&#9;--slice into 4 bit Values and get the Values&#9;&#13;&#10;&#9;&#9;local lsb1 = val:getBitRangeAsInt(0,4)&#13;&#10;&#9;&#9;local lsb2 = val:getBitRangeAsInt(4,4)&#13;&#10;&#9;&#9;local msb1 = val:getBitRangeAsInt(8,4)&#13;&#10;&#9;&#9;local msb2 = val:getBitRangeAsInt(12,4)&#13;&#10;&#13;&#10;&#9;&#9;local SysEx = string.format('F0 06 02 5%.1x %.2x %.2x %.2x %.2x %.2x F7', MidiChannel, modulatorCustomIndex, msb2, msb1, lsb2, lsb1)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(SysEx))&#13;&#10;&#13;&#10;&#9;&#9;local a = {}&#13;&#10;&#9;&#9;a[1] = &quot;val&quot;&#13;&#10;&#9;&#9;a[2] = x&#13;&#10;&#9;&#9;a[3] = lsb1&#13;&#10;&#9;&#9;a[4] = lsb2&#13;&#10;&#9;&#9;a[5] = msb1&#13;&#10;&#9;&#9;a[6] = msb2&#13;&#10;&#9;&#9;tableToListbox(a, 2)&#13;&#10;&#9;&#9;assignInfoDisplay('please press &quot;Get Setup&quot;, for reflecting the right Values')&#9;&#13;&#10;&#9;&#9;--delGetActSetup(400)&#13;&#10;&#9;else end&#13;&#10;end"
                   luaMethodLinkedProperty="uiTabsCurrentTabChanged" luaMethodSource="0"
                   uuid="b5a70b44019a4b8b99fc7abea568f96f" luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="getValues" uuid="786635532e24439c8c8a5f3461dc2f9f">
        <luaMethod luaMethodName="getNibParaData" luaMethodCode="getNibParaData = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;&#13;&#10;&#13;&#10;&#13;&#10;--local val = ParaSelector:getValue()&#13;&#10;&#9;if is_panel_ready() == true then&#13;&#10;&#9;&#9;local val = ParaSelector:getValue()&#13;&#10;--&#9;&#9;dump(val)&#13;&#10;&#9;&#9;local SysEx = string.format('F0 06 02 3%.1x 65 %.2x F7', MidiChannel, val)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(SysEx))&#13;&#10;&#9;else end&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;--60 = activ setup&#13;&#10;--61 = one register&#13;&#10;--62 = packed parameterdata&#13;&#10;--64 = alle register&#13;&#10;--65 = nibbled parameterdata&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="96146ba8a6494b9d94bba6434b120a6a"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="getPackedParaData" luaMethodCode="&#10;getPackedParaData = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;&#13;&#10;&#13;&#10;&#13;&#10;--local val = ParaSelector:getValue()&#13;&#10;&#9;if is_panel_ready() == true then&#13;&#10;&#9;&#9;local val = ParaSelector:getValue()&#13;&#10;--&#9;&#9;dump(val)&#13;&#10;&#9;&#9;local SysEx = string.format('F0 06 02 3%.1x 62 %.2x F7', MidiChannel, val)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(SysEx))&#13;&#10;&#9;else end&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;--60 = activ setup&#13;&#10;--61 = one register&#13;&#10;--62 = packed parameterdata&#13;&#10;--64 = alle register&#13;&#10;--65 = nibbled parameterdata&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="975397ba162d4ecb9c26ce9b500e9a41"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="reqAlgo" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;reqAlgo = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#10;&#13;&#10;&#9;if is_panel_ready() == true then&#13;&#10;&#9;&#9;local val = 0&#13;&#10;&#13;&#10;&#9;&#9;local SysEx = string.format('F0 06 02 3%.1x 65 41 F7', MidiChannel)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(SysEx))&#13;&#10;&#9;else end&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;--60 = activ setup&#13;&#10;--61 = one register&#13;&#10;--62 = packed parameterdata&#13;&#10;--64 = alle register&#13;&#10;--65 = nibbled parameterdata&#10;end"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="f1aae4f937a84d42bdaeed8d1658dba9" luaMethodValid="1"/>
        <luaMethod luaMethodName="getActivSetupData" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;getActivSetupData = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;--dump('got packed_para_data')&#13;&#10;&#9;if is_panel_ready() == true then&#13;&#10;&#9;&#9;local val = 0&#13;&#10;&#9;&#9;dumpActivTimer(100)&#13;&#10;&#9;&#9;local SysEx = string.format('F0 06 02 3%.1x 60 11 F7', MidiChannel)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(SysEx))&#13;&#10;&#9;&#9;delGetActSetup(150)&#13;&#10;&#9;&#9;deselectListRows()&#13;&#10;&#9;else end&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;--60 = activ setup&#13;&#10;--61 = one register&#13;&#10;--62 = packed parameterdata&#13;&#10;--64 = alle register&#13;&#10;--65 = nibbled parameterdata&#10;end"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="fb6b62f66f994b86881c802ee02a9fd7" luaMethodValid="1"/>
        <luaMethod luaMethodName="reqPset" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;reqPset = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#9;if is_panel_ready() == true then&#13;&#10;&#13;&#10;--&#9;&#9;local val = PresetNumber:getValue()-1&#13;&#10;--&#9;&#9;local val = (x:getLastRowSelected())&#13;&#10;&#9;&#9;local x = panel:getListBox(&quot;Pset_ListBox&quot;)&#13;&#10;&#9;&#9;local val = psetListRow&#13;&#10;&#9;&#9;--dump(val)&#13;&#10;&#9;&#9;dumpActivTimer(100)&#13;&#10;&#9;&#9;if  val == nil then&#13;&#10;&#9;&#9;&#9;assignInfoDisplay('something went wrong, sorry')&#13;&#10;&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;local SysEx = string.format('F0 06 02 3%.1x 61 %.2x F7', MidiChannel, val)&#13;&#10;&#9;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(SysEx))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;&#9;else end&#13;&#10;&#13;&#10;&#9;--panel:sendMidiMessageNow(CtrlrMidiMessage(&quot;F0 06 02 30 61 22 F7&quot;))&#13;&#10;&#13;&#10;&#10;end&#13;&#10;&#13;&#10;--60 = activ setup&#13;&#10;--61 = one register&#13;&#10;--62 = packed parameterdata&#13;&#10;--64 = alle register&#13;&#10;--65 = nibbled parameterdata"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="1e7b954f9128457789ca9fe73b8062ed" luaMethodValid="1"/>
        <luaMethod luaMethodName="getAllPsetsDump" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;getAllPsetsDump = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#10;&#9;if is_panel_ready() == true then&#13;&#10;&#9;&#9;dumpActivTimer(5000)&#13;&#10;&#9;&#9;local SysEx = string.format('F0 06 02 3%.1x 64 01 F7', MidiChannel)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(SysEx))&#13;&#10;&#9;&#9;--deselectListRows()&#13;&#10;&#9;else end&#10;end"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="88acf1560fd14bed86c0c4fac66c015f" luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="Assign" uuid="fd2a8e68a2a84d928f41ba2f575b8c73">
        <luaMethod luaMethodName="assignFaderVals" luaMethodCode="function assignFaderVals(data, reg, register)&#13;&#10;&#13;&#10;&#9;if reg == 'reg' then&#13;&#10;&#9;&#9;--if type(register) == &quot;number&quot; then&#13;&#10;&#9;&#9;LcdPsetNr:setProperty(&quot;uiLabelText&quot;, tonumber(register,16)+1, false)&#13;&#10;&#9;&#9;local pgmName = translateHexToAscii(data:getRange(21, 16))&#13;&#10;&#9;&#9;LcdPsetName:setProperty(&quot;uiLabelText&quot;, pgmName, false)&#13;&#10;&#9;else&#13;&#10;&#9;LcdPsetName:setProperty(&quot;uiLabelText&quot;, 'No Preset', false)&#13;&#10;&#9;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if reg == &quot;actSetup&quot; then&#13;&#10;&#9;&#9;LcdPsetNr:setProperty(&quot;uiLabelText&quot;, register, false)&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;&#9;local algo = (tonumber(data:getRange(0,1):toHexString(1), 16))&#13;&#10;&#9;LcdAlgo:setProperty(&quot;uiLabelText&quot;, algo, false)&#13;&#10;&#9;panel:getComponent(&quot;LcdAlgorithm&quot;):setProperty(&quot;uiLabelText&quot;, (AlgoNames[algo]), false)&#13;&#10;&#13;&#10;&#9;if algo &gt;= 1 and algo &lt;= 8 then&#13;&#10;&#9;&#9;AlgoTab:setProperty(&quot;uiTabsCurrentTab&quot;,(algo) ,false)&#13;&#10;&#9;&#9;BlockTab:setProperty(&quot;uiTabsCurrentTab&quot;,(algo-1) ,false)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;assignInfoDisplay('no Algorithm')&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if algo == 1 then&#13;&#10;&#9;&#9;RevMidReverbDecay:setValueMapped((combine2x4nib((data:getByte(2)), (data:getByte(1)))), false, true)&#13;&#10;&#9;&#9;RevPredelay:setValueMapped((combine2x4nib((data:getByte(4)), (data:getByte(3)))), false, true)&#13;&#10;&#9;&#9;RevEffectsLevel:setValueMapped((combine2x4nib((data:getByte(6)), (data:getByte(5)))), false, true)&#13;&#10;&#9;&#9;RevBassMultiply:setValueMapped((combine2x4nib((data:getByte(8)), (data:getByte(7)))), false, true)&#13;&#10;&#9;&#9;RevHighFreqCutoff:setValueMapped((combine2x4nib((data:getByte(10)), (data:getByte(9)))), false, true)&#13;&#10;&#9;&#9;RevSize:setValueMapped((combine2x4nib((data:getByte(12)), (data:getByte(11)))), false, true)&#13;&#10;&#9;&#9;RevPredelayFeedback:setValueMapped((combine2x4nib((data:getByte(14)), (data:getByte(13)))), false, true)&#13;&#10;&#9;&#9;RevDiffusion:setValueMapped((combine2x4nib((data:getByte(16)), (data:getByte(15)))), false, true)&#13;&#10;&#9;end&#13;&#10;&#9;if algo == 2 then&#9;&#13;&#10;&#9;&#9;PlateMidReverbDecay:setValueMapped((combine2x4nib((data:getByte(2)), (data:getByte(1)))), false, true)&#13;&#10;&#9;&#9;PlatePredelay:setValueMapped((combine2x4nib((data:getByte(4)), (data:getByte(3)))), false, true)&#13;&#10;&#9;&#9;PlateEffectsLevel:setValueMapped((combine2x4nib((data:getByte(6)), (data:getByte(5)))), false, true)&#13;&#10;&#9;&#9;PlateBassMultiply:setValueMapped((combine2x4nib((data:getByte(8)), (data:getByte(7)))), false, true)&#13;&#10;&#9;&#9;PlateHighFreqCutoff:setValueMapped((combine2x4nib((data:getByte(10)), (data:getByte(9)))), false, true)&#13;&#10;&#9;&#9;PlateSize:setValueMapped((combine2x4nib((data:getByte(12)), (data:getByte(11)))), false, true)&#13;&#10;&#9;&#9;PlatePredelayFeedback:setValueMapped((combine2x4nib((data:getByte(14)), (data:getByte(13)))), false, true)&#13;&#10;&#9;&#9;PlateDiffusion:setValueMapped((combine2x4nib((data:getByte(16)), (data:getByte(15)))), false, true)&#13;&#10;&#9;end&#13;&#10;&#9;if algo == 3 then&#9;&#9;&#13;&#10;&#9;&#9;Chorus1NegativFeedback:setValueMapped((combine2x4nib((data:getByte(2)), (data:getByte(1)))), false, true)&#13;&#10;&#9;&#9;Chorus1Depht:setValueMapped((combine2x4nib((data:getByte(4)), (data:getByte(3)))), false, true)&#13;&#10;&#9;&#9;Chorus1EffectsLevel:setValueMapped((combine2x4nib((data:getByte(6)), (data:getByte(5)))), false, true)&#13;&#10;&#9;&#9;Chorus1RightFeedback:setValueMapped((combine2x4nib((data:getByte(8)), (data:getByte(7)))), false, true)&#13;&#10;&#9;&#9;Chorus1RightDelay:setValueMapped((combine2x4nib((data:getByte(10)), (data:getByte(9)))), false, true)&#13;&#10;&#9;&#9;Chorus1Shape:setValueMapped((combine2x4nib((data:getByte(12)), (data:getByte(11)))), false, true)&#13;&#10;&#9;&#9;Chorus1LeftFeedback:setValueMapped((combine2x4nib((data:getByte(14)), (data:getByte(13)))), false, true)&#13;&#10;&#9;&#9;Chorus1LeftDelay:setValueMapped((combine2x4nib((data:getByte(16)), (data:getByte(15)))), false, true)&#13;&#10;&#9;&#9;Chorus1Rate:setValueMapped((combine2x4nib((data:getByte(18)), (data:getByte(17)))), false, true)&#13;&#10;&#9;end&#13;&#10;&#9;if algo == 4 then&#9;&#9;&#13;&#10;&#9;&#9;Delay2PositivFeedback:setValueMapped((combine2x4nib((data:getByte(2)), (data:getByte(1)))), false, true)&#13;&#10;&#9;&#9;Delay2GangedDelay:setValueMapped((combine2x4nib((data:getByte(4)), (data:getByte(3)))), false, true)&#13;&#10;&#9;&#9;Delay2EffectsLevel:setValueMapped((combine2x4nib((data:getByte(6)), (data:getByte(5)))), false, true)&#13;&#10;&#9;&#9;Delay2Feedback:setValueMapped((combine2x4nib((data:getByte(8)), (data:getByte(7)))), false, true)&#13;&#10;&#9;&#9;Delay2LeftDelay:setValueMapped((combine2x4nib((data:getByte(10)), (data:getByte(9)))), false, true)&#13;&#10;&#9;&#9;Delay2RightDelay:setValueMapped((combine2x4nib((data:getByte(12)), (data:getByte(11)))), false, true)&#13;&#10;&#9;&#9;Delay2HiFreqCut:setValueMapped((combine2x4nib((data:getByte(16)), (data:getByte(15)))), false, true)&#13;&#10;&#9;&#9;Delay2Diffusion:setValueMapped((combine2x4nib((data:getByte(18)), (data:getByte(17)))), false, true)&#13;&#10;&#9;end&#13;&#10;&#9;if algo == 5 then&#9;&#9;&#13;&#10;&#9;&#9;Chorus2EffectsLevel:setValueMapped((combine2x4nib((data:getByte(6)), (data:getByte(5)))), false, true)&#13;&#10;&#9;&#9;Chorus2Predelay:setValueMapped((combine2x4nib((data:getByte(8)), (data:getByte(7)))), false, true)&#13;&#10;&#9;&#9;Chorus2LoFreqCut:setValueMapped((combine2x4nib((data:getByte(10)), (data:getByte(9)))), false, true)&#13;&#10;&#9;&#9;Chorus2Shimmer:setValueMapped((combine2x4nib((data:getByte(12)), (data:getByte(11)))), false, true)&#13;&#10;&#9;&#9;Chorus2MstrResonance:setValueMapped((combine2x4nib((data:getByte(14)), (data:getByte(13)))), false, true)&#13;&#10;&#9;&#9;Chorus2Richness:setValueMapped((combine2x4nib((data:getByte(16)), (data:getByte(15)))), false, true)&#13;&#10;&#9;&#9;Chorus2Slope:setValueMapped((combine2x4nib((data:getByte(18)), (data:getByte(17)))), false, true)&#13;&#10;&#9;&#9;Chorus2Tuning:setValueMapped((combine2x4nib((data:getByte(20)), (data:getByte(19)))), false, true)&#13;&#10;&#9;end&#13;&#10;&#9;if algo == 6 then&#9;&#9;&#13;&#10;&#9;&#9;InverseSize:setValueMapped((combine2x4nib((data:getByte(2)), (data:getByte(1)))), false, true)&#13;&#10;&#9;&#9;InverseEffectsLevel:setValueMapped((combine2x4nib((data:getByte(6)), (data:getByte(5)))), false, true)&#13;&#10;&#9;&#9;InverseHiFreqCut:setValueMapped((combine2x4nib((data:getByte(10)), (data:getByte(9)))), false, true)&#13;&#10;&#9;&#9;InverseSlope:setValueMapped((combine2x4nib((data:getByte(12)), (data:getByte(11)))), false, true)&#13;&#10;&#9;&#9;InversePreDlyFdbk:setValueMapped((combine2x4nib((data:getByte(14)), (data:getByte(13)))), false, true)&#13;&#10;&#9;&#9;InverseDiffusion:setValueMapped((combine2x4nib((data:getByte(16)), (data:getByte(15)))), false, true)&#13;&#10;&#9;&#9;InversePredelay:setValueMapped((combine2x4nib((data:getByte(18)), (data:getByte(17)))), false, true)&#13;&#10;&#9;end&#13;&#10;&#9;if algo == 7 then&#9;&#9;&#13;&#10;&#9;&#9;GateGateTime:setValueMapped((combine2x4nib((data:getByte(2)), (data:getByte(1)))), false, true)&#13;&#10;&#9;&#9;GateEffectsLevel:setValueMapped((combine2x4nib((data:getByte(6)), (data:getByte(5)))), false, true)&#13;&#10;&#9;&#9;GateHiFreqCut:setValueMapped((combine2x4nib((data:getByte(10)), (data:getByte(9)))), false, true)&#13;&#10;&#9;&#9;GateSlope:setValueMapped((combine2x4nib((data:getByte(12)), (data:getByte(11)))), false, true)&#13;&#10;&#9;&#9;GatePreDlyFdbk:setValueMapped((combine2x4nib((data:getByte(14)), (data:getByte(13)))), false, true)&#13;&#10;&#9;&#9;GateDiffusion:setValueMapped((combine2x4nib((data:getByte(16)), (data:getByte(15)))), false, true)&#13;&#10;&#9;&#9;GatePredelay:setValueMapped((combine2x4nib((data:getByte(18)), (data:getByte(17)))), false, true)&#13;&#10;&#9;end&#13;&#10;&#9;if algo == 8 then&#9;&#9;&#13;&#10;&#9;&#9;Delay1GroupDelay:setValueMapped((combine2x4nib((data:getByte(4)), (data:getByte(3)))), false, true)&#13;&#10;&#9;&#9;Delay1EffectsLevel:setValueMapped((combine2x4nib((data:getByte(6)), (data:getByte(5)))), false, true)&#13;&#10;&#9;&#9;Delay1HiCut:setValueMapped((combine2x4nib((data:getByte(8)), (data:getByte(7)))), false, true)&#13;&#10;&#9;&#9;Delay1Delay2Spread:setValueMapped((combine2x4nib((data:getByte(10)), (data:getByte(9)))), false, true)&#13;&#10;&#9;&#9;Delay1Delay3Spread:setValueMapped((combine2x4nib((data:getByte(12)), (data:getByte(11)))), false, true)&#13;&#10;&#9;&#9;Delay1Delay3Fdbk:setValueMapped((combine2x4nib((data:getByte(14)), (data:getByte(13)))), false, true)&#13;&#10;&#9;&#9;Delay1Diffusion:setValueMapped((combine2x4nib((data:getByte(16)), (data:getByte(15)))), false, true)&#13;&#10;&#9;&#9;Delay1Rate:setValueMapped((combine2x4nib((data:getByte(18)), (data:getByte(17)))), false, true)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;PatchSource01:setValueMapped((data:getByte(37)), false, true)&#13;&#10;&#9;&#9;PatchSource02:setValueMapped((data:getByte(38)), false, true)&#13;&#10;&#9;&#9;PatchSource03:setValueMapped((data:getByte(39)), false, true)&#13;&#10;&#9;&#9;PatchSource04:setValueMapped((data:getByte(40)), false, true)&#13;&#10;&#9;&#9;PatchDestination01:setValueMapped((data:getByte(41)), false, true)&#13;&#10;&#9;&#9;PatchDestination02:setValueMapped((data:getByte(42)), false, true)&#13;&#10;&#9;&#9;PatchDestination03:setValueMapped((data:getByte(43)), false, true)&#13;&#10;&#9;&#9;PatchDestination04:setValueMapped((data:getByte(44)), false, true)&#13;&#10;&#9;&#9;PatchScale01:setValueMapped((data:getByte(45)), false, true)&#13;&#10;&#9;&#9;PatchScale02:setValueMapped((data:getByte(46)), false, true)&#13;&#10;&#9;&#9;PatchScale03:setValueMapped((data:getByte(47)), false, true)&#13;&#10;&#9;&#9;PatchScale04:setValueMapped((data:getByte(48)), false, true)&#13;&#10;&#9;&#13;&#10;end&#13;&#10;"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="ccc1637262474af49d4934162a0e48b6"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="assignAlgo" luaMethodCode="function assignAlgo(data)&#10;panel:getComponent(&quot;LcdAlgo&quot;):setProperty(&quot;uiLabelText&quot;, (tonumber(data)), false)&#13;&#10;--dump(data)&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="405aa65524034acfbb409b792c25e51d"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="assignoOtherNibData" luaMethodCode="function assignoOtherNibData(data)&#10;&#10;--panel:getComponent(&quot;LcdAlgo&quot;):setProperty(&quot;uiLabelText&quot;, (tonumber(data)), false)&#13;&#10;--dump(data:toHexString(1))&#13;&#10;local HH = data:getBitRange(0, 8)*4096 &#13;&#10;local HL = data:getBitRange(8, 8)*256&#13;&#10;local LH = data:getBitRange(16, 8)*16&#13;&#10;local LL = data:getBitRange(24, 8)&#13;&#10;&#13;&#10;local val = HH+HL+LH+LL&#13;&#10;--dump(HH)&#13;&#10;--dump(HL)&#13;&#10;--dump(LH)&#13;&#10;--dump(LL)&#13;&#10;--dump(val)&#13;&#10;&#13;&#10;local a = {}&#13;&#10;a[1] = val&#13;&#10;a[2] = data:toHexString(1)&#13;&#10;a[3] = data:getBitRange(0, 8)&#13;&#10;a[4] = data:getBitRange(8, 8)&#13;&#10;a[5] = data:getBitRange(16, 8)&#13;&#10;a[6] = data:getBitRange(24, 8)&#13;&#10;&#13;&#10;tableToListbox(a, 1)&#13;&#10;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="64f62e1b5a764ad2adfcb41cc3046a3c"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="assignDumpAllToTbl" luaMethodCode="function assignDumpAllToTbl(pckedParaData)&#10;PsetTbl = {}&#13;&#10;&#13;&#10;&#9;for i=0,126 do&#9;&#9;&#13;&#10; &#9;&#9;PsetTbl[i+1] = MemoryBlock(convert7to8((pckedParaData:getRange(i*56,56))))&#13;&#10;&#9;end&#13;&#10;&#9;assignPsetListBox()&#13;&#10;--dump(PsetTbl[2]:toHexString(1))&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="70ea1a1049b84dfba21759dd6020a410"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="assignPsetListBox" luaMethodCode="function assignPsetListBox()&#13;&#10;&#13;&#10;&#9;if is_panel_ready() == true then&#13;&#10;&#13;&#10;&#9;local psetListTable = {} &#13;&#10;&#13;&#10;&#9;local Cha = {}&#13;&#10;&#9;local Char = &quot;&quot;&#13;&#10;&#9;&#9;local a = {}&#13;&#10;&#9;&#9;local b = {}&#13;&#10;&#9;&#9;for i,v in ipairs(PsetTbl) do&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;for y=1,16 do&#13;&#10;&#9;&#9;&#9;&#9;--i=1&#13;&#10;&#9;&#9;&#9;&#9;Cha[y] = PsetTbl[i]:getRange(21+y-1, 1):toHexString(1)&#13;&#10;&#9;&#9;&#9;&#9;a[y] = string.gsub(Cha[y],'00','20')&#13;&#10;&#9;&#9;&#9;&#9;b[y] = string.char(tonumber(a[y],16))&#9;&#9;&#9;&#9;&#9;--(string.gsub(Cha[y],'00', '32')))&#9;&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;&#9;&#9;psetListTable[i] = table.concat(b)&#13;&#10;&#9;&#9;end&#13;&#10;&#10;&#9;&#9;local f = table.concat(get_K_V(psetListTable, joinbyspace), &quot;\n&quot;)&#13;&#10;&#9;&#9;panel:getComponent(&quot;Pset_ListBox&quot;):setPropertyString(&quot;uiListBoxContent&quot;,f)&#13;&#10;&#9;end&#10;end&#13;&#10;"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="23b31d341c264bbba715724619dae93c"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="assignInfoDisplay" luaMethodCode="function assignInfoDisplay(text)&#13;&#10;&#10;panel:getComponent(&quot;InfoDisplay&quot;):setProperty(&quot;uiLabelText&quot;, (text), false)&#13;&#10;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="773d98eda95d4f2f84c5ffd31e46c73b"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="Start" uuid="55cab43838904c8a8bc4422eb5ef154e">
        <luaMethod luaMethodName="onMidChChange" luaMethodCode="--&#10;-- Called when a MIDI channel property for the panel changes&#10;--&#10;onMidChChange = function(--[[ number --]] channelType, --[[ number --]] newChannel)&#13;&#10;&#13;&#10;MidiChannel = newChannel-1&#13;&#10;&#10;end"
                   luaMethodLinkedProperty="luaPanelMidiChannelChanged" luaMethodSource="0"
                   uuid="edfe354bc29941cdaa7391c0e2c91279" luaMethodValid="1"/>
        <luaMethod luaMethodName="start_bPanel_Timer" luaMethodCode="function start_bPanel_Timer()&#13;&#10;&#13;&#10;os.execute(sleep(200))&#13;&#10;&#13;&#10;bPanelTimedOut = 1&#13;&#10;&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="f00d12c239eb40789095ed08007ac9c1"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="on_panel_load" luaMethodCode="function on_panel_load()&#13;&#10;&#13;&#10;-- unmutes the panel's MIDI Out&#13;&#10;panel:setPropertyInt(&quot;panelMidiPauseOut&quot;, 0)&#13;&#10;MidiChannel = panel:getPropertyInt(&quot;panelMidiOutputChannelDevice&quot;)-1&#13;&#10;Algotable()&#13;&#10;--dump(MidiChannel)&#13;&#10;&#13;&#10;nibller = panel:getModulatorByName(&quot;nibller&quot;)&#13;&#10;nibller2 = panel:getModulatorByName(&quot;nibller2&quot;)&#13;&#10;PresetNumber = panel:getModulatorByName(&quot;PresetNumber&quot;)&#13;&#10;recallPsetNr = panel:getModulatorByName(&quot;recallPsetNr&quot;)&#13;&#10;storePsetNr = panel:getModulatorByName(&quot;storePsetNr&quot;)&#13;&#10;Get_act_Algo = panel:getModulatorByName(&quot;Get_act_Algo&quot;)&#13;&#10;Get_act_Pset_Data = panel:getModulatorByName(&quot;Get_act_Pset_Data&quot;)&#13;&#10;ParaSelector = panel:getModulatorByName(&quot;ParaSelector&quot;)&#13;&#10;EffectsLevel1 = panel:getModulatorByName(&quot;EffectsLevel1&quot;)&#13;&#10;testBiDir = panel:getModulatorByName(&quot;testBiDir&quot;)&#13;&#10;Asci = panel:getModulatorByName(&quot;Asci&quot;)&#13;&#10;AsciTestButton = panel:getModulatorByName(&quot;AsciTestButton&quot;)&#13;&#10;nibllerBiDir = panel:getModulatorByName(&quot;nibllerBiDir&quot;)&#13;&#10;nibllerBI = panel:getModulatorByName(&quot;nibllerBI&quot;)&#13;&#10;testBiDir = panel:getModulatorByName(&quot;testBiDir&quot;)&#13;&#10;AlgoTab = panel:getComponent(&quot;AlgoTab&quot;)&#13;&#10;ZifferNr = panel:getComponent(&quot;ZifferNr&quot;)&#13;&#10;BlockTab = panel:getComponent(&quot;BlockTab&quot;)&#13;&#10;LcdPsetNr = panel:getComponent(&quot;LcdPsetNr&quot;)&#13;&#10;LcdPsetName = panel:getComponent(&quot;LcdPsetName&quot;)&#13;&#10;LcdAlgo = panel:getComponent(&quot;LcdAlgo&quot;)&#13;&#10;LcdAlgorithm = panel:getComponent(&quot;LcdAlgorithm&quot;)&#13;&#10;InfoDisplay = panel:getComponent(&quot;InfoDisplay&quot;)&#13;&#10;DumpActiv = panel:getModulatorByName(&quot;DumpActiv&quot;)&#13;&#10;AlgoSelector1 = panel:getModulatorByName(&quot;AlgoSelector1&quot;)&#13;&#10;&#13;&#10;RevMidReverbDecay = panel:getModulatorByName(&quot;RevMidReverbDecay&quot;)&#13;&#10;RevBassMultiply = panel:getModulatorByName(&quot;RevBassMultiply&quot;)&#13;&#10;RevPredelayFeedback = panel:getModulatorByName(&quot;RevPredelayFeedback&quot;)&#13;&#10;RevHighFreqCutoff = panel:getModulatorByName(&quot;RevHighFreqCutoff&quot;)&#13;&#10;RevSize = panel:getModulatorByName(&quot;RevSize&quot;)&#13;&#10;RevDiffusion = panel:getModulatorByName(&quot;RevDiffusion&quot;)&#13;&#10;RevPredelay = panel:getModulatorByName(&quot;RevPredelay&quot;)&#13;&#10;RevEffectsLevel = panel:getModulatorByName(&quot;RevEffectsLevel&quot;)&#13;&#10;RevBassMultiply = panel:getModulatorByName(&quot;RevBassMultiply&quot;)&#13;&#10;RevHighFreqCutoff = panel:getModulatorByName(&quot;RevHighFreqCutoff&quot;)&#13;&#10;RevSize = panel:getModulatorByName(&quot;RevSize&quot;)&#13;&#10;RevPredelayFeedback = panel:getModulatorByName(&quot;RevPredelayFeedback&quot;)&#13;&#10;RevDiffusion = panel:getModulatorByName(&quot;RevDiffusion&quot;)&#13;&#10;&#13;&#10;PlateMidReverbDecay = panel:getModulatorByName(&quot;PlateMidReverbDecay&quot;)&#13;&#10;PlatePredelay = panel:getModulatorByName(&quot;PlatePredelay&quot;)&#13;&#10;PlateEffectsLevel = panel:getModulatorByName(&quot;PlateEffectsLevel&quot;)&#13;&#10;PlateBassMultiply = panel:getModulatorByName(&quot;PlateBassMultiply&quot;)&#13;&#10;PlateHighFreqCutoff = panel:getModulatorByName(&quot;PlateHighFreqCutoff&quot;)&#13;&#10;PlateSize = panel:getModulatorByName(&quot;PlateSize&quot;)&#13;&#10;PlatePredelayFeedback = panel:getModulatorByName(&quot;PlatePredelayFeedback&quot;)&#13;&#10;PlateDiffusion = panel:getModulatorByName(&quot;PlateDiffusion&quot;)&#13;&#10;&#13;&#10;Chorus1NegativFeedback = panel:getModulatorByName(&quot;Chorus1NegativFeedback&quot;)&#13;&#10;Chorus1Depht = panel:getModulatorByName(&quot;Chorus1Depht&quot;)&#13;&#10;Chorus1EffectsLevel = panel:getModulatorByName(&quot;Chorus1EffectsLevel&quot;)&#13;&#10;Chorus1RightFeedback = panel:getModulatorByName(&quot;Chorus1RightFeedback&quot;)&#13;&#10;Chorus1RightDelay = panel:getModulatorByName(&quot;Chorus1RightDelay&quot;)&#13;&#10;Chorus1Shape = panel:getModulatorByName(&quot;Chorus1Shape&quot;)&#13;&#10;Chorus1LeftFeedback = panel:getModulatorByName(&quot;Chorus1LeftFeedback&quot;)&#13;&#10;Chorus1LeftDelay = panel:getModulatorByName(&quot;Chorus1LeftDelay&quot;)&#13;&#10;Chorus1Rate = panel:getModulatorByName(&quot;Chorus1Rate&quot;)&#13;&#10;&#13;&#10;Delay2PositivFeedback = panel:getModulatorByName(&quot;Delay2PositivFeedback&quot;)&#13;&#10;Delay2GangedDelay = panel:getModulatorByName(&quot;Delay2GangedDelay&quot;)&#13;&#10;Delay2EffectsLevel = panel:getModulatorByName(&quot;Delay2EffectsLevel&quot;)&#13;&#10;Delay2Feedback = panel:getModulatorByName(&quot;Delay2Feedback&quot;)&#13;&#10;Delay2LeftDelay = panel:getModulatorByName(&quot;Delay2LeftDelay&quot;)&#13;&#10;Delay2RightDelay = panel:getModulatorByName(&quot;Delay2RightDelay&quot;)&#13;&#10;Delay2HiFreqCut = panel:getModulatorByName(&quot;Delay2HiFreqCut&quot;)&#13;&#10;Delay2Diffusion = panel:getModulatorByName(&quot;Delay2Diffusion&quot;)&#13;&#10;&#13;&#10;Chorus2EffectsLevel = panel:getModulatorByName(&quot;Chorus2EffectsLevel&quot;)&#13;&#10;Chorus2Predelay = panel:getModulatorByName(&quot;Chorus2Predelay&quot;)&#13;&#10;Chorus2LoFreqCut = panel:getModulatorByName(&quot;Chorus2LoFreqCut&quot;)&#13;&#10;Chorus2Shimmer = panel:getModulatorByName(&quot;Chorus2Shimmer&quot;)&#13;&#10;Chorus2MstrResonance = panel:getModulatorByName(&quot;Chorus2MstrResonance&quot;)&#13;&#10;Chorus2Richness = panel:getModulatorByName(&quot;Chorus2Richness&quot;)&#13;&#10;Chorus2Slope = panel:getModulatorByName(&quot;Chorus2Slope&quot;)&#13;&#10;Chorus2Tuning = panel:getModulatorByName(&quot;Chorus2Tuning&quot;)&#13;&#10;&#13;&#10;InverseSize = panel:getModulatorByName(&quot;InverseSize&quot;)&#13;&#10;InverseEffectsLevel = panel:getModulatorByName(&quot;InverseEffectsLevel&quot;)&#13;&#10;InverseHiFreqCut = panel:getModulatorByName(&quot;InverseHiFreqCut&quot;)&#13;&#10;InverseSlope = panel:getModulatorByName(&quot;InverseSlope&quot;)&#13;&#10;InversePreDlyFdbk = panel:getModulatorByName(&quot;InversePreDlyFdbk&quot;)&#13;&#10;InverseDiffusion = panel:getModulatorByName(&quot;InverseDiffusion&quot;)&#13;&#10;InversePredelay = panel:getModulatorByName(&quot;InversePredelay&quot;)&#13;&#10;&#13;&#10;GateGateTime = panel:getModulatorByName(&quot;GateGateTime&quot;)&#13;&#10;GateEffectsLevel = panel:getModulatorByName(&quot;GateEffectsLevel&quot;)&#13;&#10;GateHiFreqCut = panel:getModulatorByName(&quot;GateHiFreqCut&quot;)&#13;&#10;GateSlope = panel:getModulatorByName(&quot;GateSlope&quot;)&#13;&#10;GatePreDlyFdbk = panel:getModulatorByName(&quot;GatePreDlyFdbk&quot;)&#13;&#10;GateDiffusion = panel:getModulatorByName(&quot;GateDiffusion&quot;)&#13;&#10;GatePredelay = panel:getModulatorByName(&quot;GatePredelay&quot;)&#13;&#10;&#13;&#10;Delay1GroupDelay = panel:getModulatorByName(&quot;Delay1GroupDelay&quot;)&#13;&#10;Delay1EffectsLevel = panel:getModulatorByName(&quot;Delay1EffectsLevel&quot;)&#13;&#10;Delay1HiCut = panel:getModulatorByName(&quot;Delay1HiCut&quot;)&#13;&#10;Delay1Delay2Spread = panel:getModulatorByName(&quot;Delay1Delay2Spread&quot;)&#13;&#10;Delay1Delay3Spread = panel:getModulatorByName(&quot;Delay1Delay3Spread&quot;)&#13;&#10;Delay1Delay3Fdbk = panel:getModulatorByName(&quot;Delay1Delay3Fdbk&quot;)&#13;&#10;Delay1Diffusion = panel:getModulatorByName(&quot;Delay1Diffusion&quot;)&#13;&#10;Delay1Rate = panel:getModulatorByName(&quot;Delay1Rate&quot;)&#13;&#10;&#13;&#10;&#13;&#10;--Patch&#13;&#10;PatchSource01 = panel:getModulatorByName(&quot;PatchSource01&quot;)&#13;&#10;PatchSource02 = panel:getModulatorByName(&quot;PatchSource02&quot;)&#13;&#10;PatchSource03 = panel:getModulatorByName(&quot;PatchSource03&quot;)&#13;&#10;PatchSource04 = panel:getModulatorByName(&quot;PatchSource04&quot;)&#13;&#10;&#13;&#10;PatchDestination01 = panel:getModulatorByName(&quot;PatchDestination01&quot;)&#13;&#10;PatchDestination02 = panel:getModulatorByName(&quot;PatchDestination02&quot;)&#13;&#10;PatchDestination03 = panel:getModulatorByName(&quot;PatchDestination03&quot;)&#13;&#10;PatchDestination04 = panel:getModulatorByName(&quot;PatchDestination04&quot;)&#13;&#10;&#13;&#10;PatchScale01 = panel:getModulatorByName(&quot;PatchScale01&quot;)&#13;&#10;PatchScale02 = panel:getModulatorByName(&quot;PatchScale02&quot;)&#13;&#10;PatchScale03 = panel:getModulatorByName(&quot;PatchScale03&quot;)&#13;&#10;PatchScale04 = panel:getModulatorByName(&quot;PatchScale04&quot;)&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;RevMidReverbDecay11 = panel:getModulatorByName(&quot;RevMidReverbDecay11&quot;)&#13;&#10;&#13;&#10;&#13;&#10;--Tester-Delete&#13;&#10;Tester0 = panel:getModulatorByName(&quot;Tester0&quot;)&#13;&#10;Tester1 = panel:getModulatorByName(&quot;Tester1&quot;)&#13;&#10;Tester3 = panel:getModulatorByName(&quot;Tester3&quot;)&#13;&#10;Tester8 = panel:getModulatorByName(&quot;Tester8&quot;)&#13;&#10;Tester9 = panel:getModulatorByName(&quot;Tester9&quot;)&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;--table etc.&#13;&#10;construct_HexToChar()&#13;&#10;&#13;&#10;construct_PsetListBoxTable()&#13;&#10;Pset_ListBox = panel:getModulatorByName(&quot;Pset_ListBox&quot;)&#13;&#10;DumpActiv:setValue(0, false)&#13;&#10;listbox1 = panel:getComponent(&quot;listbox1&quot;)&#13;&#10;deselectListRows()&#13;&#10;assignInfoDisplay('please press &quot;Get all Presets&quot; to get in sync, or &quot;GetSetup&quot; to get the current setup' )&#13;&#10;&#13;&#10;LcdPsetNr:setProperty(&quot;uiLabelText&quot;, '--', false)&#13;&#10;LcdPsetName:setProperty(&quot;uiLabelText&quot;, '--', false)&#13;&#10;LcdAlgo:setProperty(&quot;uiLabelText&quot;, '--', false)&#13;&#10;LcdAlgorithm:setProperty(&quot;uiLabelText&quot;, '--', false)&#13;&#10;panel:getComponent(&quot;Pset_ListBox&quot;):setPropertyString(&quot;uiListBoxContent&quot;,'No Presets loaded')&#13;&#10;&#13;&#10;--dumpstate = false&#13;&#10;--dumpActiv = panel:getModulatorByName(&quot;dumpActiv&quot;)&#13;&#10;--Wait_1_Activ = panel:getModulatorByName(&quot;Wait_1_Activ&quot;)&#13;&#10;--Wait_2_Activ = panel:getModulatorByName(&quot;Wait_2_Activ&quot;)&#13;&#10;-- Set Global MidiChannel Variable, panel set to 1 equates to zero when sending Hex&#13;&#10;&#13;&#10;--MidiChannel=panel:getProperty(&quot;panelMidiOutputChannelDevice&quot;)-1&#13;&#10;&#9;-- Your method code here&#13;&#10;&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="3463d06ff8074305ad7ba253a4a861bc"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="is_panel_ready" luaMethodCode="function is_panel_ready()&#13;&#10;&#13;&#10;if panel:getBootstrapState() == false and bPanelTimedOut == 1&#13;&#10;&#13;&#10;then return (true)&#13;&#10;else return (false)&#13;&#10;&#13;&#10;end&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="65a8a854226f4ef9b54f58ba57c54579"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="before_panel_load" luaMethodCode="function before_panel_load()&#13;&#10;&#13;&#10;-- sets a variable 'bPanelTimedOut' to 0 which only gets set to 1 when the 'start_timer' modulator&#13;&#10;-- on the System Tab triggers it's 'Start_bPanel_Timer' script which runs for 200mS&#13;&#10;&#13;&#10;bPanelTimedOut = 0&#13;&#10;&#13;&#10;-- Defines the variable used to stop any Patch Saving occuring if no Patch Data has been loaded to Panel first&#13;&#10;&#13;&#10;panel_data_loaded = 0&#13;&#10;&#13;&#10;-- mutes any MIDI Out from the Panel&#13;&#10;&#13;&#10;panel:setPropertyInt(&quot;panelMidiPauseOut&quot;, 1)&#13;&#10;&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="d68758d478b547129f7b5d5c7190bd31"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="tables" uuid="7f2db8f1c89240f49169d0bb4b9dce9c">
        <luaMethod luaMethodName="Algotable" luaMethodCode="function Algotable()&#10;&#9;AlgoNames = {}&#13;&#10;&#9;AlgoNames[0] = 'undefined'&#13;&#10;&#9;AlgoNames[1] = 'Rooms and Halls'&#13;&#10;&#9;AlgoNames[2] = 'Plate Emulation'&#13;&#10;&#9;AlgoNames[3] = 'Chorus'&#13;&#10;&#9;AlgoNames[4] = 'Multi-Tap Delay'&#13;&#10;&#9;AlgoNames[5] = 'Resonator'&#13;&#10;&#9;AlgoNames[6] = 'Inverse Room'&#13;&#10;&#9;AlgoNames[7] = 'Gated Reverb'&#13;&#10;&#9;AlgoNames[8] = 'Chorus/Delays'&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="98d91583f7784b5a90c84ab08e26aa00"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="Preset" uuid="0f783f37c8144198a8973dc43ca86305">
        <luaMethod luaMethodName="renPsetCallback" luaMethodCode="function renPsetCallback(ret, window)&#13;&#10;&#13;&#10;&#9;if is_panel_ready() == true then&#13;&#10;&#9;&#9;local x = psetListRow&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;local headerHex = &quot;F0 06 02 &quot;&#13;&#10;&#9;&#9;local MidCha = string.format(&quot;1%.1x &quot;, MidiChannel)&#13;&#10;&#9;&#9;local xPset = string.format('%.2x ', (psetListRow))&#13;&#10;&#9;&#9;local pdbc = string.format('%.2x ', 56)&#13;&#10;&#9;&#9;local faderPsetHex = &quot;&quot;&#13;&#10;&#9;&#9;local namePsetHex = &quot;&quot;&#13;&#10;&#9;&#9;local afterNamePsetHex = &quot;&quot;&#13;&#10;&#9;&#9;local psetHexForChksm = &quot;&quot;&#13;&#10;&#9;&#9;local snglPsetChksmHex = &quot;&quot;&#9;&#13;&#10;&#9;&#9;local renamedPsetHex = &quot;&quot;&#13;&#10;&#9;&#9;local renamedPsetHexForRTTable = &quot;&quot;&#13;&#10;&#9;&#9;local t = &quot;&quot;&#13;&#10;&#9;&#9;local u = &quot;&quot;&#13;&#10;&#9;&#9;local newName = &quot;&quot;&#13;&#10;&#9;&#9;local Character = &quot;&quot;&#13;&#10;&#9;&#9;local chars = {}&#13;&#10;&#13;&#10;&#9;&#9;modalWindow:setVisible (false)&#10;&#9;&#9;if ret == 1 then&#13;&#10;&#9;&#9;&#9;newName = modalWindow:getTextEditor(&quot;renameTextEditor&quot;):getText()&#13;&#10;&#13;&#10;&#9;&#9;&#9;faderPsetHex = PsetTbl[x]:getRange(0, 21):toHexString(1)&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;faderPsetHex = &#9;faderPsetHex..' '&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;newName = setLenghtName(newName)&#13;&#10;&#9;&#9;&#9;repIllegChar(newName)&#13;&#10;&#9;&#9;&#9;for i=1,16 do&#13;&#10;&#9;&#9;&#9;&#9;y = string.sub(newName,i, i)&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;table.insert(chars, y) &#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;local charshex = {}&#13;&#10;&#9;&#9;&#9;for i=1,16 do&#13;&#10;&#9;&#9;&#9;&#9;charshex[i] = string.format('%.2x', (string.byte(chars[i]))) &#13;&#10;  &#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;namePsetHex = table.concat(charshex, ' ')                                    -- die einzelnen bytes zur liste hinzuf&#252;gen&#13;&#10;&#9;&#9;&#9;namePsetHex = namePsetHex..' '&#13;&#10;&#13;&#10;&#9;&#9;&#9;afterNamePsetHex = PsetTbl[x]:getRange(37, 12):toHexString(1)&#13;&#10;&#9;&#9;&#9;afterNamePsetHex = afterNamePsetHex..' '&#13;&#10;&#9;&#13;&#10;&#9;&#9;&#9;psetHexForChksm = psetHexForChksm .. faderPsetHex .. namePsetHex .. afterNamePsetHex&#13;&#10;&#13;&#10;&#9;&#9;&#9;local hexOut = psetHexForChksm .. faderPsetHex .. namePsetHex .. afterNamePsetHex&#13;&#10;&#9;&#9;&#9;hexOut =  table.concat(convert8to7(MemoryBlock(hexOut)), ' ')&#13;&#10;&#9;&#9;&#9;hexOut = hexOut..' '&#13;&#10;--local a = {}&#13;&#10;&#9;&#9;&#9;--for i =1,56*3,3 do&#13;&#10;&#9;&#9;&#9;&#9;--y = string.sub(psetHexForChksm,i, i+1)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;--table.insert(a, y)&#13;&#10;&#9;&#9;&#9;--end&#13;&#10;&#9;&#9;&#9;&#9;--tableToListbox(a, 3)&#13;&#10;&#13;&#10;&#9;&#9;&#9;snglPsetChksmHex = convert8to7(MemoryBlock(psetHexForChksm))&#13;&#10;&#13;&#10;&#13;&#10;--addiert&#13;&#10;&#9;&#9;&#9;local add = 0&#13;&#10;&#9;&#9;&#9;for i =1,56 do&#13;&#10;&#9;&#9;&#9;&#9;add = add+(tonumber(snglPsetChksmHex[i],16))&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;if add &gt;=4096 then &#13;&#10;&#9;&#9;&#9;&#9;add = add-4096&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;if add &gt;=2048 then &#13;&#10;&#9;&#9;&#9;&#9;add = add-2048&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;if add &gt;=1024 then &#13;&#10;&#9;&#9;&#9;&#9;add = add-1024&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;if add &gt;=512 then &#13;&#10;&#9;&#9;&#9;&#9;add = add-512&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;if add &gt;=256 then &#13;&#10;&#9;&#9;&#9;&#9;add = add-256&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;if add &gt;=128 then &#13;&#10;&#9;&#9;&#9;&#9;add = add-128&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;local chkSum = string.format('%2x ', add)&#13;&#10;&#9;&#9;&#9;t = string.format('%2x', 247)&#13;&#10;&#13;&#10;&#9;&#9;&#9;renamedPsetHex = renamedPsetHex .. headerHex .. MidCha .. xPset..pdbc .. hexOut .. chkSum .. t&#13;&#10;&#13;&#10;&#9;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(renamedPsetHex))&#13;&#10;&#13;&#10;&#9;&#9;&#9;del_getPset(200)&#13;&#10;&#9;&#9;&#9;del_getAllPsetsDump(500&#13;&#10;)&#13;&#10;&#13;&#10;&#13;&#10;&#9;--&#9;&#9;&#9;renamedPsetHexForRTTable = renamedPsetHexForRTTable .. faderPsetHex .. namePsetHex .. afterNamePsetHex&#13;&#10;&#9;&#9;&#9;&#9;&#13;&#10;&#9;--&#9;&#9;&#9;writeNamedPsetToLocTbl(x, renamedPsetHexForRTTable)&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#9;--&#9;&#9;&#9;assignPsetListBox()&#13;&#10;&#9;--&#9;&#9;&#9;bkToEdtMde()&#13;&#10;&#9;--&#9;&#9;&#9;delayedStoreAktPset(250)&#13;&#10;&#9;--&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#10;end&#13;&#10;--dump('x')&#13;&#10;--dump(x)&#13;&#10;--dump('newName: '..newName)&#13;&#10; --dump('faderPsetHex')&#13;&#10;--dump(faderPsetHex)&#13;&#10;--dump('chars')&#13;&#10;--dump(chars)&#13;&#10;--dump('namePsetHex')&#13;&#10;--dump(namePsetHex)&#9;&#13;&#10;--dump('afterNamePsetHex')&#13;&#10;--dump(afterNamePsetHex)&#13;&#10;--dump('psetHexForChksm')&#13;&#10;--dump(psetHexForChksm)&#9;&#13;&#10;--dump('snglPsetChksmHex')&#13;&#10;--dump(snglPsetChksmHex)&#13;&#10;--dump('chkSum')&#13;&#10;--dump(chkSum)&#13;&#10;--dump('renamedPsetHex')&#13;&#10;--dump(renamedPsetHex)&#9;&#9;&#9;"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="a708f67f88e04f11a74d137c6c02bd0c"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="renamePreset" luaMethodCode="function renamePreset() &#13;&#10;&#13;&#10;&#9;renamePset_master()&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="f3b3edf1d78c441dbd10af2ca4e80dca"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="renamePset_master" luaMethodCode="&#13;&#10;function renamePset_master()&#13;&#10;&#13;&#10;&#9;if is_panel_ready() == true then&#13;&#10;&#13;&#10;&#9;&#9;local x = psetListRow+1&#13;&#10;&#13;&#10; &#13;&#10;&#9;&#9;local pgmName = PsetTbl[x]:getRange(21, 16):toHexString(1)&#13;&#10;&#9;&#9;local Cha = {}&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;for i=1,16 do&#13;&#10;&#9;&#9;&#9;Cha[i] = string.char(tonumber(PsetTbl[x]:getRange(21+i-1, 1):toHexString(1),16))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10; &#9;&#9;local nameData = &quot;&quot;&#13;&#10;&#9;&#9;nameData = nameData..table.concat(Cha)&#13;&#10;&#13;&#10;&#9;&#9;modalWindow = AlertWindow(&quot;\n\nRename the Preset,\nup to 16 characters long.&quot;, &quot;Please remember to save the\namended patch and name to\nyour LXP-1.&quot;, AlertWindow.InfoIcon)&#13;&#10;&#9;&#9;modalWindow:addButton(&quot;Cancel&quot;, 0, KeyPress(KeyPress.escapeKey), KeyPress())&#13;&#10;&#9;&#9;modalWindow:addButton(&quot;    OK    &quot;, 1, KeyPress(KeyPress.returnKey), KeyPress())&#13;&#10;&#9;&#9;modalWindow:addTextEditor (&quot;renameTextEditor&quot;, (nameData), &quot;Rename As:&quot;, false)&#13;&#10;&#9;&#9;modalWindow:setModalHandler(renPsetCallback)&#13;&#10;&#9;&#13;&#10;&#9;&#9;modalWindow:runModalLoop()&#13;&#10;&#9;&#13;&#10;&#9;end&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="1f6d2df88f454dfabebdc35707ba4f97"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="recallPset" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;recallPset = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;&#9;if is_panel_ready() == true then&#13;&#10;&#13;&#10;&#9;&#9;--local val = PresetNumber:getValue()&#13;&#10;&#13;&#10;&#9;&#9;local x = panel:getListBox(&quot;Pset_ListBox&quot;)&#13;&#10;&#13;&#10;&#9;&#9;local val = (x:getLastRowSelected())&#13;&#10;&#9;&#9;local x = panel:getListBox(&quot;Pset_ListBox&quot;)&#13;&#10;&#13;&#10;&#9;&#9;local val = (x:getLastRowSelected())&#13;&#10;&#13;&#10;&#9;&#9;if  val == nil then&#13;&#10;&#9;&#9;&#9;assignInfoDisplay('something went wrong, sorry')&#13;&#10;&#13;&#10;&#9;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;&#9;local SysEx = string.format('F0 06 02 6%.1x 71 %.2x F7', MidiChannel, val)&#13;&#10;&#9;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(SysEx))&#13;&#10;&#13;&#10;&#9;&#9;&#9;del_getPset(300)&#13;&#10;&#13;&#10;&#9;&#9;end&#13;&#10;&#9;else end&#10;end"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="556da3c54c9a47b184cf2d7da0c40117" luaMethodValid="1"/>
        <luaMethod luaMethodName="storePset" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;storePset = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;&#9;if is_panel_ready() == true then&#13;&#10;&#13;&#10;&#9;&#9;local val = psetListRow&#13;&#10;&#13;&#10;&#9;&#9;local SysEx = string.format('F0 06 02 6%.1x 70 %.2x F7', MidiChannel, val)&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(SysEx))&#13;&#10;&#13;&#10;&#9;&#9;del_getPset(200)&#13;&#10;&#9;&#9;del_getAllPsetsDump(300)&#13;&#10;&#9;else end&#10;end"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="19390315b4764aeca15981d0d1954d3a" luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="Timer" uuid="08ef3fe9a7ef48d7b9412ae383eb7a74">
        <luaMethod luaMethodName="renPsetTimer" luaMethodCode="function renPsetTimer(time)&#9;&#9;&#9;&#9;--call for a delayed pSet-rename&#10;&#10;&#9;if is_panel_ready() == true then&#10;&#13;&#10;    &#9;timer:setCallback(15, TimerCallback) -- TimerId 2&#10;    &#9;timer:startTimer(15, time) -- Timer Id 5 fires after ms&#13;&#10;&#9;end&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="97352f59383b42a98e8c0869d6053f3f"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="TimerCallback" luaMethodCode="function TimerCallback(timerId)&#10;&#10;&#9;--if is_panel_ready() == true then&#13;&#10;--_______________________________________________________________________________________________________&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;--_______________________________________________________________________________________________________&#13;&#10;&#13;&#10;&#9;&#9;if timerId == 2 then&#9;&#9;&#9;&#9;&#9;--ask for getAllPsetsDump&#10;&#13;&#10;&#9;&#9;&#9;reqPset()&#13;&#10;&#10;        &#9;timer:stopTimer(timerId)&#13;&#10;&#9;&#9;end&#13;&#10;--_______________________________________________________________________________________________________&#13;&#10;&#9;&#9;if timerId == 3 then&#9;&#9;&#9;&#9;&#9;--DlydSglPsetRqst&#10;&#13;&#10;&#9;&#9;&#9;getAllPsetsDump()&#13;&#10;&#10;       &#9;&#9;timer:stopTimer(timerId)&#13;&#10;&#9;&#9;end&#13;&#10;--_______________________________________________________________________________________________________&#13;&#10;&#9;&#9;if timerId == 4 then&#9;&#9;&#9;&#9;&#9;--del_clearInfo&#10;&#13;&#10;&#9;&#9;&#9;panel:getComponent(&quot;InfoDisplay&quot;):setProperty(&quot;uiLabelText&quot;, (&quot;-&quot;), false)&#13;&#10;&#10;        &#9;timer:stopTimer(timerId)&#13;&#10;&#9;&#9;end&#13;&#10;--_______________________________________________________________________________________________________&#13;&#10;&#9;&#9;if timerId == 5 then&#9;&#9;&#9;&#9;&#9;--Dump activ&#10;&#13;&#10;&#9;&#9;&#9;DumpActiv:setValue(0, false)&#13;&#10;&#10;        &#9;timer:stopTimer(timerId)&#13;&#10;&#9;&#9;end&#13;&#10;--_______________________________________________________________________________________________________&#13;&#10;&#9;&#9;if timerId == 6 then&#9;&#9;&#9;&#9;&#9;--for back to Edit Mode&#10;&#13;&#10;&#9;&#9;&#9;getActivSetupData()&#13;&#10;&#10;        &#9;timer:stopTimer(timerId)&#13;&#10;&#9;&#9;end&#13;&#10;--_______________________________________________________________________________________________________&#13;&#10;&#9;&#9;if timerId == 15 then&#9;&#9;&#9;&#9;&#9;--call for a delayed pSet-rename&#13;&#10;&#13;&#10;        &#9;timer:stopTimer(timerId)&#13;&#10;&#9;&#9;&#9;renamePset_master()&#10;&#9;&#9;end&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="dee8d92b074440d6a8cebec210ea6ff8"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="del_getPset" luaMethodCode="function del_getPset(time)--call for delayed pSet-Data&#9;&#9;&#9;&#10;&#10;&#9;if is_panel_ready() == true then&#10;&#10;&#13;&#10;    &#9;timer:setCallback(2, TimerCallback) -- TimerId 2&#10;    &#9;timer:startTimer(2, time) &#9;&#9;&#9;-- fires after (time)&#13;&#10;&#9;end&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="404e0ed5fce04248846cc3052ff5ecb0"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="del_getAllPsetsDump" luaMethodCode="function del_getAllPsetsDump(time)&#9;&#9;--call for delayed complete Dump request&#10;--call for delayed pSet-Data&#9;&#9;&#9;&#10;&#10;&#9;if is_panel_ready() == true then&#10;&#10;&#13;&#10;    &#9;timer:setCallback(3, TimerCallback) -- TimerId 2&#10;    &#9;timer:startTimer(3, time) &#9;&#9;&#9;-- fires after (time)&#13;&#10;&#9;end&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="0f9f5a2fec404bb5ae48ef4d793cfdb8"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="del_clearInfo" luaMethodCode="function del_clearInfo(time)&#9;&#9;--call for delayed delete text in info-display&#9;&#10;&#9;&#10;&#10;&#9;if is_panel_ready() == true then&#10;&#10;&#13;&#10;    &#9;timer:setCallback(4, TimerCallback) -- TimerId 2&#10;    &#9;timer:startTimer(4, time) &#9;&#9;&#9;-- fires after (time)&#13;&#10;&#9;end&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="61dc0705a3f1450b9f962efc115af0cf"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="dumpActivTimer" luaMethodCode="function dumpActivTimer(time)&#9;--call for DumpLight aktive and shut it off after &quot;time&quot;&#9;&#9;&#10;&#10;&#9;if is_panel_ready() == true then&#10;&#9;&#9;DumpActiv:setValue(1, false)&#10;&#13;&#10;    &#9;timer:setCallback(5, TimerCallback) -- TimerId 5&#10;    &#9;timer:startTimer(5, time) &#9;&#9;&#9;-- fires after (time)&#13;&#10;&#9;end&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="9b0e96f730374602a499cdd146b6e4a8"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="delGetActSetup" luaMethodCode="function delGetActSetup(time)&#9;--call for delayed Setup&#10;&#9;&#9;&#9;&#10;&#10;&#9;if is_panel_ready() == true then&#10;&#10;&#13;&#10;    &#9;timer:setCallback(6, TimerCallback) -- TimerId 2&#10;    &#9;timer:startTimer(6, time) &#9;&#9;&#9;-- fires after (time)&#13;&#10;&#9;end&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="9cb27fc374d545d881060635d7e9dcc5"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="Construct" uuid="296ae9b9c2b34d84af9f8edae773ddb4">
        <luaMethod luaMethodName="construct_PsetListBoxTable" luaMethodCode="function construct_PsetListBoxTable()&#10;&#10;&#9;psetListTable = {}&#13;&#10;&#9;for i=1,128 do &#13;&#10;&#9;&#9;psetListTable[i] = i&#13;&#10;&#9;end&#9;&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="f6007c32371642fcb779417c45c88148"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="construct_HexToChar" luaMethodCode="function construct_HexToChar()&#10;hex_to_char = {}&#13;&#10;&#9;for idx = 0, 255 do&#13;&#10;    &#9;hex_to_char[(&quot;%02X&quot;):format(idx)] = string.char(idx)&#13;&#10;    &#9;hex_to_char[(&quot;%02x&quot;):format(idx)] = string.char(idx)&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="23cd714564ca49c1ad37682861c0b333"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethod luaMethodName="receivedMidi" luaMethodCode="-- https://github.com/RomanKubiak/ctrlr/blob/master/Source/MIDI/CtrlrMidiMessage.h&#13;&#10;-- Called when a panel receives a midi message (does not need to match any modulator mask)&#13;&#10;-- @midi   CtrlrMidiMessage object&#13;&#10;&#13;&#10;receivedMidi = function(midiMessage)&#13;&#10;&#13;&#10;&#9;local Bit4 = tonumber(midiMessage:getData():getRange(3,1):toHexString(1));&#13;&#10;&#9;local messageType = string.sub(Bit4, 0,1)&#13;&#10;&#9;local parameter = tonumber(midiMessage:getData():getRange(4,1):toHexString(1),16) &#13;&#10;&#9;local a = tonumber(midiMessage:getData():getSize())&#13;&#10;&#13;&#10;&#9;-- SinglePrgDump&#13;&#10;&#9;if a == 64 then &#13;&#10;&#9;&#9;local typ = 'reg'&#13;&#10;&#9;&#9;local SinglePrgDumpData = midiMessage:getData():getRange(6,64-8)---8&#13;&#10;&#9;&#9;local register = midiMessage:getData():getRange(4,1):toHexString(1)&#13;&#10;&#9;&#9;local x = midiMessage:getData():getRange(5,1):toHexString(1)&#13;&#10;&#9;&#9;assignInfoDisplay('got a single preset dump from LXP-1')&#13;&#10;&#9;&#9;local data = MemoryBlock(convert7to8(SinglePrgDumpData))&#13;&#10;&#13;&#10;&#9;&#9;assignFaderVals(data, typ, register)&#13;&#10;&#9;end&#9;&#13;&#10;&#13;&#10;&#9;-- activ Setup Dump&#13;&#10;&#9;if a == 63 then &#13;&#10;&#9;&#9;local typ = 'actSetup'&#13;&#10;&#9;&#9;local aktSetDmp = midiMessage:getData():getRange(5,64-8)&#13;&#10;&#9;&#9;local register = 'no'&#13;&#10;&#9;&#9;local data = MemoryBlock(convert7to8(aktSetDmp))&#13;&#10;&#9;&#9;assignInfoDisplay('got active setup from LXP-1. This is no Preset. To store it, please select a Preset in the list and press &quot;Store&quot;')&#13;&#10;&#13;&#10;&#9;&#9;assignFaderVals(data, typ, register)&#13;&#10;&#9;end&#9;&#13;&#10;&#13;&#10;&#9;-- nibbled parameter data-Algo&#13;&#10;&#9;if a == 10 and parameter == 65 then &#13;&#10;&#9;&#9;local nibParamData = midiMessage:getData():getRange(8,1):toHexString(1)&#13;&#10;&#13;&#10;&#9;&#9;assignAlgo(nibParamData)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- nibbled parameter data, other&#13;&#10;&#9;if a == 10 and parameter &lt;= 64 then &#13;&#10;&#9;&#9;local nibParamData = midiMessage:getData():getRange(5,4)--:toHexString(1)&#13;&#10;&#13;&#10;&#9;&#9;assignoOtherNibData(nibParamData)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- packed parameter data&#13;&#10;&#9;if a == 9 and parameter == 64 and messageType == '2' then &#13;&#10;&#9;&#9;local pckedParaData = midiMessage:getData():getRange(5,3)&#13;&#10;&#13;&#10;&#9;&#9;local data = MemoryBlock(conv3Bto2B(pckedParaData))&#13;&#10;&#13;&#10;&#9;&#9;delGetActSetup(100)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- packed parameter data&#13;&#10;&#9;if a == 7176 and parameter == 56 then &#13;&#10;&#13;&#10;&#9;&#9;local pckedParaData = midiMessage:getData():getRange(6,7173-6)&#13;&#10;&#9;&#9;assignInfoDisplay('got a complete dump from LXP-1')&#13;&#10;&#13;&#10;&#9;&#9;assignDumpAllToTbl(pckedParaData)&#13;&#10;&#9;end&#13;&#10;end"
                 luaMethodLinkedProperty="" luaMethodSource="0" uuid="9d28f7c873ef496abd59bab77fdb2a61"
                 luaMethodValid="1"/>
      <luaMethod luaMethodName="chAlgoType" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;chAlgoType = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#10;&#13;&#10;&#9;if is_panel_ready() == true and source == 4 then&#13;&#10;&#13;&#10;&#9;&#9;local x = value+1&#13;&#10;&#9;&#9;--FX-Parameter&#13;&#10;&#9;&#9;local modulatorCustomIndex = mod:getProperty(&quot;modulatorCustomIndex&quot;)&#13;&#10;&#13;&#10;&#9;&#9;if value &gt;= 1 and value &lt;=8 then&#10;&#9;&#9;&#9;--get Value as BitInteger&#10;&#9;&#9;&#9;local val = BigInteger(x)&#13;&#10;&#13;&#10;&#9;&#9;&#9;--slice into 4 bit Values and get the Values&#9;&#13;&#10;&#9;&#9;&#9;local lsb1 = val:getBitRangeAsInt(0,4)&#13;&#10;&#9;&#9;&#9;local lsb2 = val:getBitRangeAsInt(4,4)&#13;&#10;&#9;&#9;&#9;local msb1 = val:getBitRangeAsInt(8,4)&#13;&#10;&#9;&#9;&#9;local msb2 = val:getBitRangeAsInt(12,4)&#13;&#10;&#13;&#10;&#9;&#9;&#9;local SysEx = string.format('F0 06 02 5%.1x %.2x %.2x %.2x %.2x %.2x F7', MidiChannel, modulatorCustomIndex, msb2, msb1, lsb2, lsb1)&#13;&#10;&#9;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(SysEx))&#13;&#10;&#13;&#10;&#9;&#9;&#9;local a = {}&#13;&#10;&#9;&#9;&#9;a[1] = value&#13;&#10;&#9;&#9;&#9;a[2] = x&#13;&#10;&#9;&#9;&#9;a[3] = lsb1&#13;&#10;&#9;&#9;&#9;a[4] = lsb2&#13;&#10;&#9;&#9;&#9;a[5] = msb1&#13;&#10;&#9;&#9;&#9;a[6] = msb2&#13;&#10;&#9;&#9;&#9;tableToListbox(a, 2)&#13;&#10;&#13;&#10;&#9;&#9;&#9;AlgoSelector1:setValueMapped(9, false, true)&#13;&#10;&#9;&#9;&#9;delGetActSetup(200)&#13;&#10;&#9;&#9;else end&#13;&#10;&#9;else end&#13;&#10;end"
                 luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                 uuid="db39f8b11f834fe7856ad676ebd3f8d9" luaMethodValid="1"/>
    </luaManagerMethods>
  </luaManager>
  <panelResources>
    <resource resourceHash="-355627969768098057" resourceLoadedTime="1710086099322"
              resourceSize="454704" resourceFile="5by7.ttf" resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\MPX1\Res\5by7.ttf"
              resourceName="5by7" resourceType="Font"/>
    <resource resourceHash="-4500796485099823997" resourceLoadedTime="1710086099343"
              resourceSize="560043" resourceFile="Black Plastic small 01.png"
              resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\MPX1\Res\Black Plastic small 01.png"
              resourceName="Black Plastic small 01" resourceType="Image"/>
    <resource resourceHash="-8366640436394835905" resourceLoadedTime="1710086099345"
              resourceSize="207317" resourceFile="Block_1.png" resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\LXP-1\Res\Block_1.png"
              resourceName="Block_1" resourceType="Image"/>
    <resource resourceHash="-8366640436290743648" resourceLoadedTime="1710086099346"
              resourceSize="194999" resourceFile="Block_2.png" resourceSourceFile="C:\Users\tf\AppData\Roaming\Ctrlr\8.c8yHir40g7D\Block_2.png"
              resourceName="Block_2" resourceType="Image"/>
    <resource resourceHash="-8366640436186654069" resourceLoadedTime="1710086099348"
              resourceSize="198364" resourceFile="Block_3.png" resourceSourceFile="C:\Users\tf\AppData\Roaming\Ctrlr\8.c8yHir40g7D\Block_3.png"
              resourceName="Block_3" resourceType="Image"/>
    <resource resourceHash="-8366640436081433028" resourceLoadedTime="1710086099350"
              resourceSize="204372" resourceFile="Block_4.png" resourceSourceFile="C:\Users\tf\AppData\Roaming\Ctrlr\8.c8yHir40g7D\Block_4.png"
              resourceName="Block_4" resourceType="Image"/>
    <resource resourceHash="-8366640435977342000" resourceLoadedTime="1710086099351"
              resourceSize="195117" resourceFile="Block_5.png" resourceSourceFile="C:\Users\tf\AppData\Roaming\Ctrlr\8.c8yHir40g7D\Block_5.png"
              resourceName="Block_5" resourceType="Image"/>
    <resource resourceHash="-8366640435873257518" resourceLoadedTime="1710086099352"
              resourceSize="194240" resourceFile="Block_6.png" resourceSourceFile="C:\Users\tf\AppData\Roaming\Ctrlr\8.c8yHir40g7D\Block_6.png"
              resourceName="Block_6" resourceType="Image"/>
    <resource resourceHash="-8366640435769171594" resourceLoadedTime="1710086099354"
              resourceSize="194263" resourceFile="Block_7.png" resourceSourceFile="C:\Users\tf\AppData\Roaming\Ctrlr\8.c8yHir40g7D\Block_7.png"
              resourceName="Block_7" resourceType="Image"/>
    <resource resourceHash="-8366640435665083520" resourceLoadedTime="1710086099355"
              resourceSize="194560" resourceFile="Block_8.png" resourceSourceFile="C:\Users\tf\AppData\Roaming\Ctrlr\8.c8yHir40g7D\Block_8.png"
              resourceName="Block_8" resourceType="Image"/>
    <resource resourceHash="2348704966400553970" resourceLoadedTime="1710086099355"
              resourceSize="5183" resourceFile="LED_Button_80x80x2knob.png"
              resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\MPX1\Res\LED_Button_80x80x2knob.png"
              resourceName="LED_Button_80x80x2knob" resourceType="Image"/>
    <resource resourceHash="3954125485347762339" resourceLoadedTime="1710086099356"
              resourceSize="9066" resourceFile="LED_Red_64x64_2.png" resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\LXP-1\Res\LED_Red_64x64_2.png"
              resourceName="LED_Red_64x64_2" resourceType="Image"/>
  </panelResources>
  <uiPanelEditor uiPanelCanvasRectangle="0 0 1003 666" uiPanelSnapSize="8" uiPanelBackgroundColour="0xffffffff"
                 uiPanelBackgroundColour1="0xffffffff" uiPanelBackgroundColour2="0xffffffff"
                 uiPanelBackgroundGradientType="1" uiPanelImageResource="-- None"
                 uiPanelEditMode="0" uiPanelLock="0" uiPanelDisabledOnEdit="0"
                 uiPanelMenuBarVisible="1" uiPanelMenuBarHideOnExport="0" uiPanelWidth="400"
                 uiPanelHeight="400" name="LXP-1 Editor" uiPanelImageAlpha="255"
                 uiPanelImageLayout="64" uiPanelSnapActive="1" uiPanelPropertiesOnRight="0"
                 luaPanelPaintBackground="-- None" luaPanelResized="-- None" luaPanelFileDragDropHandler="-- None"
                 luaPanelFileDragEnterHandler="-- None" luaPanelFileDragExitHandler="-- None"
                 uiPanelInvisibleComponentAlpha="0.5" uiPanelTooltipBackgroundColour="0xffeeeebb"
                 uiPanelTooltipOutlineColour="0xff000000" uiPanelTooltipColour="0xff000000"
                 uiPanelTooltipCornerRound="1" uiPanelTooltipPlacement="2" uiPanelTooltipFont="&lt;Sans-Serif&gt;;15;1;0;0;0;1;3"
                 uiPanelZoom="1" uiPanelPropertiesSize="510" uiPanelViewPortSize="2042">
    <uiPanelCanvasLayer uiPanelCanvasLayerName="Basic" uiPanelCanvasLayerUid="2df24869af040000feffffffffffffff"
                        uiPanelCanvasLayerColour="0x000000" uiPanelCanvasLayerVisibility="1"
                        uiPanelCanvasLayerIndex="0"/>
    <uiPanelCanvasLayer uiPanelCanvasLayerName="Tech-Menue" uiPanelCanvasLayerUid="a84c2d78d41d0000feffffffffffffff"
                        uiPanelCanvasLayerColour="0x000000" uiPanelCanvasLayerVisibility="0"
                        uiPanelCanvasLayerIndex="1"/>
    <uiPanelCanvasLayer uiPanelCanvasLayerName="Fader" uiPanelCanvasLayerUid="2fdd9a0a3c200000feffffffffffffff"
                        uiPanelCanvasLayerColour="0x000000" uiPanelCanvasLayerVisibility="0"
                        uiPanelCanvasLayerIndex="2"/>
  </uiPanelEditor>
  <modulator modulatorVstExported="1" modulatorMax="200" vstIndex="3" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="modulator-4" modulatorMin="0" modulatorValue="14">
    <midi midiMessageType="7" midiMessageChannelOverride="0" midiMessageChannel="16"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Pgm_for_Midi_CH"
               componentMouseCursor="2" componentGroupName="modulator-2" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="Black Plastic small 01" resourceImageWidth="80"
               resourceImageHeight="80" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="200" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="2df24869af040000feffffffffffffff"
               componentRectangle="1298 364 64 64" uiType="uiImageSlider" uiGroupTextFont="&lt;Monospaced&gt;;17;1;0;0;0;1;3"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="15" vstIndex="9" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="00" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="RevMidReverbDecay" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Mid Reverb Decay     "
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="6" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0,6 s=32768&#10;1,2 s=33792&#10;1,7 s=34816&#10;2,3 s=35840&#10;2,8 s=36864&#10;3,4 s=37888&#10;4,0 s=38912&#10;4,5 s=39936&#10;5,1 s=40960&#10;5,6 s=41984&#10;6,2 s=43008&#10;6,8 s=44032&#10;7,3 s=45056&#10;7,9 s=46080&#10;8,4 s=47104&#10;9,0 s=48128"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="1" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="32 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="10" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="71" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="recallPset"
             name="recallPsetNr" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Recall"
               componentMouseCursor="2" componentGroupName="modulator-6" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="1"
               uiImageButtonResource="LED_Button_80x80x2knob" componentRectangle="192 24 80 50"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="False&#10;True" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiType="uiImageButton" componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="12" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="storePset"
             name="storePsetNr" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Store"
               componentMouseCursor="2" componentGroupName="modulator-6" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="1"
               uiImageButtonResource="LED_Button_80x80x2knob" componentRectangle="272 24 80 50"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="False&#10;True" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="2df24869af040000feffffffffffffff" uiType="uiImageButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="13" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="getActivSetupData"
             name="Get_act_Pset_Data" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="9217" midiMessageCtrlrValue="-9216" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Get Setup"
               componentMouseCursor="2" componentGroupName="modulator-6" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="0.5" componentEffectColour="ff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="1"
               uiImageButtonResource="LED_Button_80x80x2knob" componentRectangle="192 152 80 50"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="False&#10;True" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiType="uiImageButton" componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="14" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="reqAlgo"
             name="Get_act_Algo" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="9217" midiMessageCtrlrValue="-9216" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Get_act_Algo"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="1"
               uiImageButtonResource="LED_Button_80x80x2knob" componentRectangle="816 584 80 55"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="False&#10;True" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="a84c2d78d41d0000feffffffffffffff" uiType="uiImageButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="15" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="start_bPanel_Timer"
             name="Panel_Wach" modulatorMin="0" modulatorValue="2">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="2" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Panel_Wach"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="Black Plastic small 01" resourceImageWidth="80"
               resourceImageHeight="80" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiType="uiImageSlider"
               componentRectangle="944 528 54 52" componentLayerUid="a84c2d78d41d0000feffffffffffffff"
               uiGroupTextFont="&lt;Monospaced&gt;;17;1;0;0;0;1;3"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="LcdAlgo" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Algo-Nr"
               componentMouseCursor="2" componentGroupName="modulator-2" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="ff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="ff000000"
               uiLabelTextColour="ffc1ff00" uiLabelOutline="1" uiLabelOutlineColour="ff2f51ce"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="5by7;25;0;0;0;0;1;1"
               uiLabelText="3" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="680 40 71 57"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="16" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="ParaSelector" modulatorMin="0" modulatorValue="4">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="16"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="ParaSelector"
               componentMouseCursor="2" componentGroupName="modulator-8" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="Black Plastic small 01" resourceImageWidth="80"
               resourceImageHeight="80" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="a84c2d78d41d0000feffffffffffffff"
               componentRectangle="8 40 64 64" uiType="uiImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="17" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="71" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="getNibParaData"
             name="ParSndReq" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="ParSndReq"
               componentMouseCursor="2" componentGroupName="modulator-8" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="1"
               uiImageButtonResource="LED_Button_80x80x2knob" componentRectangle="80 0 80 55"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="False&#10;True" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="a84c2d78d41d0000feffffffffffffff" uiType="uiImageButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="18" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="71" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="getPackedParaData"
             name="ParSndReqPacked" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="ParSndReqPacked"
               componentMouseCursor="2" componentGroupName="modulator-8" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="1"
               uiImageButtonResource="LED_Button_80x80x2knob" componentRectangle="80 64 80 55"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="False&#10;True" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiType="uiImageButton" componentLayerUid="a84c2d78d41d0000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="31" vstIndex="19" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="03" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="BI" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="RevBassMultiply" modulatorMin="0" modulatorValue="31">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Bass Multiply"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="-15" uiSliderMax="16" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="10" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0,3=16384&#10;0,4=17408&#10;0,4=18432&#10;0,5=19456&#10;0,6=20480&#10;0,7=21504&#10;0,7=22528&#10;0,8=23552&#10;0,9=24576&#10;0,9=25600&#10;1=26624&#10;1,1=27648&#10;1,1=28672&#10;1,2=29696&#10;1,3=30720&#10;1,4=31744&#10;1,4=32768&#10;1,5=33792&#10;1,6=34816&#10;1,6=35840&#10;1,7=36864&#10;1,8=37888&#10;1,8=38912&#10;1,9=39936&#10;2=40960&#10;2,1=41984&#10;2,1=43008&#10;2,2=44032&#10;2,3=45056&#10;2,3=46080&#10;2,4=47104&#10;2,5=48128"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="1" componentTabName="AlgoTab"
               uiType="uiFixedImageSlider" componentRectangle="344 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="22" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="02" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="BIDIR" modulatorVstNameFormat="%n"
             luaModulatorValueChange="chMod_Uni_ValByName" name="RevEffectsLevel"
             modulatorMin="0" modulatorValue="-1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="EffectsLevel1"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="54.400000000000006"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="-15" uiSliderMax="16" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="100" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0%=32768&#10;1%=32932&#10;2%=33096&#10;3%=33259&#10;4%=33423&#10;5%=33587&#10;6%=33751&#10;7%=33915&#10;8%=34079&#10;9%=34242&#10;10%=34406&#10;11%=34570&#10;12%=34734&#10;13%=34898&#10;14%=35062&#10;15%=35225&#10;16%=35389&#10;17%=35553&#10;18%=35717&#10;19%=35881&#10;20%=36045&#10;21%=36208&#10;22%=36372&#10;23%=36536&#10;24%=36700&#10;25%=36864&#10;26%=37028&#10;27%=37191&#10;28%=37355&#10;29%=37519&#10;30%=37683&#10;31%=37847&#10;32%=38011&#10;33%=38174&#10;34%=38338&#10;35%=38502&#10;36%=38666&#10;37%=38830&#10;38%=38994&#10;39%=39157&#10;40%=39321&#10;41%=39485&#10;42%=39649&#10;43%=39813&#10;44%=39977&#10;45%=40140&#10;46%=40304&#10;47%=40468&#10;48%=40632&#10;49%=40796&#10;50%=40960&#10;51%=41123&#10;52%=41287&#10;53%=41451&#10;54%=41615&#10;55%=41779&#10;56%=41942&#10;57%=42106&#10;58%=42270&#10;59%=42434&#10;60%=42598&#10;61%=42762&#10;62%=42925&#10;63%=43089&#10;64%=43253&#10;65%=43417&#10;66%=43581&#10;67%=43745&#10;68%=43908&#10;69%=44072&#10;70%=44236&#10;71%=44400&#10;72%=44564&#10;73%=44728&#10;74%=44891&#10;75%=45055&#10;76%=45219&#10;77%=45383&#10;78%=45547&#10;79%=45711&#10;80%=45874&#10;81%=46038&#10;82%=46202&#10;83%=46366&#10;84%=46530&#10;85%=46694&#10;86%=46857&#10;87%=47021&#10;88%=47185&#10;89%=47349&#10;90%=47513&#10;91%=47677&#10;92%=47840&#10;93%=48004&#10;94%=48168&#10;95%=48332&#10;96%=48496&#10;97%=48660&#10;98%=48823&#10;99%=48987&#10;100%=49150"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="1" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="240 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="LcdPsetNr" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset-Nr"
               componentMouseCursor="2" componentGroupName="modulator-2" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="ff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="ff000000"
               uiLabelTextColour="ffc1ff00" uiLabelOutline="1" uiLabelOutlineColour="ff2f51ce"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="5by7;25;0;0;0;0;1;1"
               uiLabelText="24" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="16 40 71 57" componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="23" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Asci" modulatorMin="0" modulatorValue="32">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="16"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Asci"
               componentMouseCursor="2" componentGroupName="modulator-9" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="25" uiSliderValuePosition="4"
               uiSliderValueWidth="100" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="fff8e8e8" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0&quot;null&quot;&#10;1&quot;&#1;&quot;&#10;2&quot;&#2;&quot;&#10;3&quot;&#3;&quot;&#10;4&quot;&#4;&quot;&#10;5&quot;&#5;&quot;&#10;6&quot;&#6;&quot;&#10;7&quot;&#7;&quot;&#10;8&quot;&#8;&quot;&#10;9&quot;&quot;&quot;&quot;&#10;10&quot;&quot;&#10;11&quot;&#11;&quot;&#10;12&quot;&#12;&quot;&#10;13&quot;&quot;&#10;14&quot;&#14;&quot;&#10;15&quot;&#15;&quot;&#10;16&quot;&#16;&quot;&#10;17&quot;&#17;&quot;&#10;18&quot;&#18;&quot;&#10;19&quot;&#19;&quot;&#10;20&quot;&#20;&quot;&#10;21&quot;&#21;&quot;&#10;22&quot;&#22;&quot;&#10;23&quot;&#23;&quot;&#10;24&quot;&#24;&quot;&#10;25&quot;&#25;&quot;&#10;26&quot;&#26;&quot;&#10;27&quot;&#27;&quot;&#10;28&quot;&#28;&quot;&#10;29&quot;&#29;&quot;&#10;30&quot;&#30;&quot;&#10;31&quot;&#31;&quot;&#10;32&quot; &quot;&#10;33&quot;!&quot;&#10;34&quot;&quot;&#10;35&quot;#&quot;&#10;36&quot;$&quot;&#10;37&quot;%&quot;&#10;38&quot;&amp;&quot;&#10;39&quot;'&quot;&#10;40&quot;(&quot;&#10;41&quot;)&quot;&#10;42&quot;*&quot;&#10;43&quot;+&quot;&#10;44&quot;,&quot;&#10;45&quot;-&quot;&#10;46&quot;.&quot;&#10;47&quot;/&quot;&#10;48&quot;0&quot;&#10;49&quot;1&quot;&#10;50&quot;2&quot;&#10;51&quot;3&quot;&#10;52&quot;4&quot;&#10;53&quot;5&quot;&#10;54&quot;6&quot;&#10;55&quot;7&quot;&#10;56&quot;8&quot;&#10;57&quot;9&quot;&#10;58&quot;:&quot;&#10;59&quot;;&quot;&#10;60&quot;&lt;&quot;&#10;61&quot;=&quot;&#10;62&quot;&gt;&quot;&#10;63&quot;?&quot;&#10;64&quot;@&quot;&#10;65&quot;A&quot;&#10;66&quot;B&quot;&#10;67&quot;C&quot;&#10;68&quot;D&quot;&#10;69&quot;E&quot;&#10;70&quot;F&quot;&#10;71&quot;G&quot;&#10;72&quot;H&quot;&#10;73&quot;I&quot;&#10;74&quot;J&quot;&#10;75&quot;K&quot;&#10;76&quot;L&quot;&#10;77&quot;M&quot;&#10;78&quot;N&quot;&#10;79&quot;O&quot;&#10;80&quot;P&quot;&#10;81&quot;Q&quot;&#10;82&quot;R&quot;&#10;83&quot;S&quot;&#10;84&quot;T&quot;&#10;85&quot;U&quot;&#10;86&quot;V&quot;&#10;87&quot;W&quot;&#10;88&quot;X&quot;&#10;89&quot;Y&quot;&#10;90&quot;Z&quot;&#10;91&quot;[&quot;&#10;92&quot;\&quot;&#10;93&quot;]&quot;&#10;94&quot;&#94;&quot;&#10;95&quot;_&quot;&#10;96&quot;&quot;&#10;97&quot;a&quot;&#10;98&quot;b&quot;&#10;99&quot;c&quot;&#10;100&quot;d&quot;&#10;101&quot;e&quot;&#10;102&quot;f&quot;&#10;103&quot;g&quot;&#10;104&quot;h&quot;&#10;105&quot;i&quot;&#10;106&quot;j&quot;&#10;107&quot;k&quot;&#10;108&quot;l&quot;&#10;109&quot;m&quot;&#10;110&quot;n&quot;&#10;111&quot;o&quot;&#10;112&quot;p&quot;&#10;113&quot;q&quot;&#10;114&quot;r&quot;&#10;115&quot;s&quot;&#10;116&quot;t&quot;&#10;117&quot;u&quot;&#10;118&quot;v&quot;&#10;119&quot;w&quot;&#10;120&quot;x&quot;&#10;121&quot;y&quot;&#10;122&quot;z&quot;&#10;123&quot;{&quot;&#10;124&quot;|&quot;&#10;125&quot;}&quot;&#10;126&quot;~&quot;&#10;127&quot;&quot;"
               uiSliderValueFont="&lt;Sans-Serif&gt;;25;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="bottom"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="a84c2d78d41d0000feffffffffffffff"
               componentRectangle="104 16 61 76" uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="24" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="35" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="AsciTest"
             name="AsciTestButton" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="AsciTestButton"
               componentMouseCursor="2" componentGroupName="modulator-9" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="1"
               uiImageButtonResource="LED_Button_80x80x2knob" componentRectangle="176 24 80 55"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="False&#10;True" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentTabId="0" componentTabName="" uiType="uiImageButton"
               componentLayerUid="a84c2d78d41d0000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="LcdPsetName" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset-Name"
               componentMouseCursor="2" componentGroupName="modulator-2" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="ff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="ff000000"
               uiLabelTextColour="ffc1ff00" uiLabelOutline="1" uiLabelOutlineColour="ff2f51ce"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="5by7;20;0;0;0;0;1;1"
               uiLabelText="Image 123444444 " uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="88 40 213 57"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="65" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="AlgoTab" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-3"
               componentMouseCursor="2" componentGroupName="modulator-2" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiTabsCurrentTabChanged="-- None"
               uiTabsDepth="24" uiTabsOutlineThickness="2" uiTabsFrontTabOutline="1"
               uiTabsTabOutline="1" uiTabsIndentThickness="0" uiTabsOrientation="1"
               uiTabsFrontTabFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiTabsTabFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiTabsOutlineGlobalColour="c5c7d3" uiTabsOutlineGlobalBackgroundColour="0x67000000"
               uiTabsOutlineTabColour="0xff303030" uiTabsTextTabColour="0xff909090"
               uiTabsFrontTabOutlineColour="0xff000000" uiTabsFrontTabTextColour="0xff000000"
               uiTabsAddTab="0" uiTabsRemoveTab="0" componentRectangle="16 96 978 153"
               uiTabsCurrentTab="3" componentLayerUid="2df24869af040000feffffffffffffff"
               uiType="uiTabs">
      <uiTabsTab uiTabsTabIndex="0" uiTabsTabName="n.a." uiTabsTabContentBackgroundColour="ff2762b8"
                 uiTabsTabBackgroundColour="ff2762b8" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="1" uiTabsTabName="Reverb" uiTabsTabContentBackgroundColour="ff2762b8"
                 uiTabsTabBackgroundColour="ff2762b8" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="2" uiTabsTabName="Plates" uiTabsTabContentBackgroundColour="ff2762b8"
                 uiTabsTabBackgroundColour="ff2762b8" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="3" uiTabsTabName="Chorus1" uiTabsTabContentBackgroundColour="ff2762b8"
                 uiTabsTabBackgroundColour="ff2762b8" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="4" uiTabsTabName="Delay2" uiTabsTabContentBackgroundColour="ff2762b8"
                 uiTabsTabBackgroundColour="ff2762b8" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="5" uiTabsTabName="Chorus2" uiTabsTabContentBackgroundColour="ff2762b8"
                 uiTabsTabBackgroundColour="ff2762b8" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="6" uiTabsTabName="Inverse" uiTabsTabContentBackgroundColour="ff2762b8"
                 uiTabsTabBackgroundColour="ff2762b8" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="7" uiTabsTabName="Gate" uiTabsTabContentBackgroundColour="ff2762b8"
                 uiTabsTabBackgroundColour="ff2762b8" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="8" uiTabsTabName="Delay1" uiTabsTabContentBackgroundColour="ff2762b8"
                 uiTabsTabBackgroundColour="ff2762b8" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
    </component>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="LcdAlgorithm" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Algorithm"
               componentMouseCursor="2" componentGroupName="modulator-2" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="ff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="ff000000"
               uiLabelTextColour="ffc1ff00" uiLabelOutline="1" uiLabelOutlineColour="ff2f51ce"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="5by7;20;0;0;0;0;1;1"
               uiLabelText="Chorus" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="752 40 241 57" componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="16" vstIndex="25" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="04" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="RevHighFreqCutoff" modulatorMin="0" modulatorValue="16">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High Freq Cutoff"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="16" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="321 Hz=32768&#10;1,16 kHz=33792&#10;2,01 kHz=34816&#10;2,85 kHz=35840&#10;3,69 kHz=36864&#10;4,53 kHz=37888&#10;5,38 kHz=38912&#10;6,22 kHz=39936&#10;7,06 kHz=40960&#10;7,9 kHz=41984&#10;8,75 kHz=43008&#10;9,59 kHz=44032&#10;10,43 kHz=45056&#10;11,27 kHz=46080&#10;12,12 kHz=47104&#10;12,96 kHz=48128&#10;13,8 kHz=49152"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="448 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="26" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="05" modulatorCustomName="" modulatorCustomIndexGroup="256"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="RevSize" modulatorMin="0" modulatorValue="15">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Size"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="32" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="8 m=32768&#10;9 m=33024&#10;10 m=33280&#10;11 m=33536&#10;12 m=33792&#10;13 m=34048&#10;14 m=34304&#10;15 m=34560&#10;16 m=34816&#10;17 m=35072&#10;18 m=35328&#10;19 m=35584&#10;20 m=35840&#10;21 m=36096&#10;22 m=36352&#10;23 m=36608&#10;24 m=36864&#10;25 m=37120&#10;26 m=37376&#10;27 m=37632&#10;28 m=37888&#10;29 m=38144&#10;30 m=38400&#10;31 m=38656&#10;32 m=38912&#10;33 m=39168&#10;34 m=39424&#10;35 m=39680&#10;36 m=39936&#10;37 m=40192&#10;38 m=40448&#10;39 m=40704&#10;40 m=40960&#10;41 m=41216&#10;42 m=41472&#10;43 m=41728&#10;44 m=41984&#10;45 m=42240&#10;46 m=42496&#10;47 m=42752&#10;48 m=43008&#10;49 m=43264&#10;50 m=43520&#10;51 m=43776&#10;52 m=44032&#10;53 m=44288&#10;54 m=44544&#10;55 m=44800&#10;56 m=45056&#10;57 m=45312&#10;58 m=45568&#10;59 m=45824&#10;60 m=46080&#10;61 m=46336&#10;62 m=46592&#10;63 m=46848&#10;64 m=47104&#10;65 m=47360&#10;66 m=47616&#10;67 m=47872&#10;68 m=48128&#10;69 m=48384&#10;70 m=48640&#10;71 m=48896"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="552 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="255" vstIndex="27" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="07" modulatorCustomName="" modulatorCustomIndexGroup="64"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="RevDiffusion" modulatorMin="0" modulatorValue="196">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Diffusion"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="128" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0=32768&#10;0=32832&#10;1=32896&#10;1=32960&#10;2=33024&#10;2=33088&#10;2=33152&#10;3=33216&#10;3=33280&#10;4=33344&#10;4=33408&#10;4=33472&#10;5=33536&#10;5=33600&#10;5=33664&#10;6=33728&#10;6=33792&#10;7=33856&#10;7=33920&#10;7=33984&#10;8=34048&#10;8=34112&#10;9=34176&#10;9=34240&#10;9=34304&#10;10=34368&#10;10=34432&#10;11=34496&#10;11=34560&#10;11=34624&#10;12=34688&#10;12=34752&#10;13=34816&#10;13=34880&#10;13=34944&#10;14=35008&#10;14=35072&#10;15=35136&#10;15=35200&#10;15=35264&#10;16=35328&#10;16=35392&#10;16=35456&#10;17=35520&#10;17=35584&#10;18=35648&#10;18=35712&#10;18=35776&#10;19=35840&#10;19=35904&#10;20=35968&#10;20=36032&#10;20=36096&#10;21=36160&#10;21=36224&#10;22=36288&#10;22=36352&#10;22=36416&#10;23=36480&#10;23=36544&#10;24=36608&#10;24=36672&#10;24=36736&#10;25=36800&#10;25=36864&#10;25=36928&#10;26=36992&#10;26=37056&#10;27=37120&#10;27=37184&#10;27=37248&#10;28=37312&#10;28=37376&#10;29=37440&#10;29=37504&#10;29=37568&#10;30=37632&#10;30=37696&#10;31=37760&#10;31=37824&#10;31=37888&#10;32=37952&#10;32=38016&#10;33=38080&#10;33=38144&#10;33=38208&#10;34=38272&#10;34=38336&#10;35=38400&#10;35=38464&#10;35=38528&#10;36=38592&#10;36=38656&#10;36=38720&#10;37=38784&#10;37=38848&#10;38=38912&#10;38=38976&#10;38=39040&#10;39=39104&#10;39=39168&#10;40=39232&#10;40=39296&#10;40=39360&#10;41=39424&#10;41=39488&#10;42=39552&#10;42=39616&#10;42=39680&#10;43=39744&#10;43=39808&#10;44=39872&#10;44=39936&#10;44=40000&#10;45=40064&#10;45=40128&#10;45=40192&#10;46=40256&#10;46=40320&#10;47=40384&#10;47=40448&#10;47=40512&#10;48=40576&#10;48=40640&#10;49=40704&#10;49=40768&#10;49=40832&#10;50=40896&#10;50=40960&#10;51=41024&#10;51=41088&#10;51=41152&#10;52=41216&#10;52=41280&#10;53=41344&#10;53=41408&#10;53=41472&#10;54=41536&#10;54=41600&#10;55=41664&#10;55=41728&#10;55=41792&#10;56=41856&#10;56=41920&#10;56=41984&#10;57=42048&#10;57=42112&#10;58=42176&#10;58=42240&#10;58=42304&#10;59=42368&#10;59=42432&#10;60=42496&#10;60=42560&#10;60=42624&#10;61=42688&#10;61=42752&#10;62=42816&#10;62=42880&#10;62=42944&#10;63=43008&#10;63=43072&#10;64=43136&#10;64=43200&#10;64=43264&#10;65=43328&#10;65=43392&#10;65=43456&#10;66=43520&#10;66=43584&#10;67=43648&#10;67=43712&#10;67=43776&#10;68=43840&#10;68=43904&#10;69=43968&#10;69=44032&#10;69=44096&#10;70=44160&#10;70=44224&#10;71=44288&#10;71=44352&#10;71=44416&#10;72=44480&#10;72=44544&#10;73=44608&#10;73=44672&#10;73=44736&#10;74=44800&#10;74=44864&#10;75=44928&#10;75=44992&#10;75=45056&#10;76=45120&#10;76=45184&#10;76=45248&#10;77=45312&#10;77=45376&#10;78=45440&#10;78=45504&#10;78=45568&#10;79=45632&#10;79=45696&#10;80=45760&#10;80=45824&#10;80=45888&#10;81=45952&#10;81=46016&#10;82=46080&#10;82=46144&#10;82=46208&#10;83=46272&#10;83=46336&#10;84=46400&#10;84=46464&#10;84=46528&#10;85=46592&#10;85=46656&#10;85=46720&#10;86=46784&#10;86=46848&#10;87=46912&#10;87=46976&#10;87=47040&#10;88=47104&#10;88=47168&#10;89=47232&#10;89=47296&#10;89=47360&#10;90=47424&#10;90=47488&#10;91=47552&#10;91=47616&#10;91=47680&#10;92=47744&#10;92=47808&#10;93=47872&#10;93=47936&#10;93=48000&#10;94=48064&#10;94=48128&#10;95=48192&#10;95=48256&#10;95=48320&#10;96=48384&#10;96=48448&#10;96=48512&#10;97=48576&#10;97=48640&#10;98=48704&#10;98=48768&#10;98=48832&#10;99=48896&#10;99=48960&#10;100=49024&#10;100=49088"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="1" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="760 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="262" vstIndex="28" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="01" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="RevPredelay" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Predelay"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0 ms=32768&#10;1 ms=32832&#10;2 ms=32896&#10;3 ms=32960&#10;4 ms=33024&#10;5 ms=33088&#10;6 ms=33152&#10;7 ms=33216&#10;8 ms=33280&#10;9 ms=33344&#10;10 ms=33408&#10;11 ms=33472&#10;12 ms=33536&#10;13 ms=33600&#10;14 ms=33664&#10;15 ms=33728&#10;16 ms=33792&#10;17 ms=33856&#10;18 ms=33920&#10;19 ms=33984&#10;20 ms=34048&#10;21 ms=34112&#10;22 ms=34176&#10;23 ms=34240&#10;24 ms=34304&#10;25 ms=34368&#10;26 ms=34432&#10;27 ms=34496&#10;28 ms=34560&#10;29 ms=34624&#10;30 ms=34688&#10;31 ms=34752&#10;32 ms=34816&#10;33 ms=34880&#10;34 ms=34944&#10;35 ms=35008&#10;36 ms=35072&#10;37 ms=35136&#10;38 ms=35200&#10;39 ms=35264&#10;40 ms=35328&#10;41 ms=35392&#10;42 ms=35456&#10;43 ms=35520&#10;44 ms=35584&#10;45 ms=35648&#10;46 ms=35712&#10;47 ms=35776&#10;48 ms=35840&#10;49 ms=35904&#10;50 ms=35968&#10;51 ms=36032&#10;52 ms=36096&#10;53 ms=36160&#10;54 ms=36224&#10;55 ms=36288&#10;56 ms=36352&#10;57 ms=36416&#10;58 ms=36480&#10;59 ms=36544&#10;60 ms=36608&#10;61 ms=36672&#10;62 ms=36736&#10;63 ms=36800&#10;64 ms=36864&#10;65 ms=36928&#10;66 ms=36992&#10;67 ms=37056&#10;68 ms=37120&#10;69 ms=37184&#10;70 ms=37248&#10;71 ms=37312&#10;72 ms=37376&#10;73 ms=37440&#10;74 ms=37504&#10;75 ms=37568&#10;76 ms=37632&#10;77 ms=37696&#10;78 ms=37760&#10;79 ms=37824&#10;80 ms=37888&#10;81 ms=37952&#10;82 ms=38016&#10;83 ms=38080&#10;84 ms=38144&#10;85 ms=38208&#10;86 ms=38272&#10;87 ms=38336&#10;88 ms=38400&#10;89 ms=38464&#10;90 ms=38528&#10;91 ms=38592&#10;92 ms=38656&#10;93 ms=38720&#10;94 ms=38784&#10;95 ms=38848&#10;96 ms=38912&#10;97 ms=38976&#10;98 ms=39040&#10;99 ms=39104&#10;100 ms=39168&#10;101 ms=39232&#10;102 ms=39296&#10;103 ms=39360&#10;104 ms=39424&#10;105 ms=39488&#10;106 ms=39552&#10;107 ms=39616&#10;108 ms=39680&#10;109 ms=39744&#10;110 ms=39808&#10;111 ms=39872&#10;112 ms=39936&#10;113 ms=40000&#10;114 ms=40064&#10;115 ms=40128&#10;116 ms=40192&#10;117 ms=40256&#10;118 ms=40320&#10;119 ms=40384&#10;120 ms=40448&#10;121 ms=40512&#10;122 ms=40576&#10;123 ms=40640&#10;124 ms=40704&#10;125 ms=40768&#10;126 ms=40832&#10;127 ms=40896&#10;128 ms=40960&#10;129 ms=41024&#10;130 ms=41088&#10;131 ms=41152&#10;132 ms=41216&#10;133 ms=41280&#10;134 ms=41344&#10;135 ms=41408&#10;136 ms=41472&#10;137 ms=41536&#10;138 ms=41600&#10;139 ms=41664&#10;140 ms=41728&#10;141 ms=41792&#10;142 ms=41856&#10;143 ms=41920&#10;144 ms=41984&#10;145 ms=42048&#10;146 ms=42112&#10;147 ms=42176&#10;148 ms=42240&#10;149 ms=42304&#10;150 ms=42368&#10;151 ms=42432&#10;152 ms=42496&#10;153 ms=42560&#10;154 ms=42624&#10;155 ms=42688&#10;156 ms=42752&#10;157 ms=42816&#10;158 ms=42880&#10;159 ms=42944&#10;160 ms=43008&#10;161 ms=43072&#10;162 ms=43136&#10;163 ms=43200&#10;164 ms=43264&#10;165 ms=43328&#10;166 ms=43392&#10;167 ms=43456&#10;168 ms=43520&#10;169 ms=43584&#10;170 ms=43648&#10;171 ms=43712&#10;172 ms=43776&#10;173 ms=43840&#10;174 ms=43904&#10;175 ms=43968&#10;176 ms=44032&#10;177 ms=44096&#10;178 ms=44160&#10;179 ms=44224&#10;180 ms=44288&#10;181 ms=44352&#10;182 ms=44416&#10;183 ms=44480&#10;184 ms=44544&#10;185 ms=44608&#10;186 ms=44672&#10;187 ms=44736&#10;188 ms=44800&#10;189 ms=44864&#10;190 ms=44928&#10;191 ms=44992&#10;192 ms=45056&#10;193 ms=45120&#10;194 ms=45184&#10;195 ms=45248&#10;196 ms=45312&#10;197 ms=45376&#10;198 ms=45440&#10;199 ms=45504&#10;200 ms=45568&#10;201 ms=45632&#10;202 ms=45696&#10;203 ms=45760&#10;204 ms=45824&#10;205 ms=45888&#10;206 ms=45952&#10;207 ms=46016&#10;208 ms=46080&#10;209 ms=46144&#10;210 ms=46208&#10;211 ms=46272&#10;212 ms=46336&#10;213 ms=46400&#10;214 ms=46464&#10;215 ms=46528&#10;216 ms=46592&#10;217 ms=46656&#10;218 ms=46720&#10;219 ms=46784&#10;220 ms=46848&#10;221 ms=46912&#10;222 ms=46976&#10;223 ms=47040&#10;224 ms=47104&#10;225 ms=47168&#10;226 ms=47232&#10;227 ms=47296&#10;228 ms=47360&#10;229 ms=47424&#10;230 ms=47488&#10;231 ms=47552&#10;232 ms=47616&#10;233 ms=47680&#10;234 ms=47744&#10;235 ms=47808&#10;236 ms=47872&#10;237 ms=47936&#10;238 ms=48000&#10;239 ms=48064&#10;240 ms=48128&#10;241 ms=48192&#10;242 ms=48256&#10;243 ms=48320&#10;244 ms=48384&#10;245 ms=48448&#10;246 ms=48512&#10;247 ms=48576&#10;248 ms=48640&#10;249 ms=48704&#10;250 ms=48768&#10;251 ms=48832&#10;252 ms=48896&#10;253 ms=48960&#10;254 ms=49024&#10;255 ms=49088&#10;256 ms=49152&#10;257 ms=49216&#10;258 ms=49280&#10;259 ms=49344&#10;260 ms=49408&#10;261 ms=49472&#10;262 ms=49536"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="136 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="15" vstIndex="29" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="00" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="PlateMidReverbDecay" modulatorMin="0" modulatorValue="6">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Mid Reverb Decay     "
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="6" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0,6 s=32768&#10;1,2 s=33792&#10;1,7 s=34816&#10;2,3 s=35840&#10;2,8 s=36864&#10;3,4 s=37888&#10;4,0 s=38912&#10;4,5 s=39936&#10;5,1 s=40960&#10;5,6 s=41984&#10;6,2 s=43008&#10;6,8 s=44032&#10;7,3 s=45056&#10;7,9 s=46080&#10;8,4 s=47104&#10;9,0 s=48128"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="32 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="262" vstIndex="30" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="01" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="PlatePredelay" modulatorMin="0" modulatorValue="6">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Predelay"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="6" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0 ms=32768&#10;1 ms=32832&#10;2 ms=32896&#10;3 ms=32960&#10;4 ms=33024&#10;5 ms=33088&#10;6 ms=33152&#10;7 ms=33216&#10;8 ms=33280&#10;9 ms=33344&#10;10 ms=33408&#10;11 ms=33472&#10;12 ms=33536&#10;13 ms=33600&#10;14 ms=33664&#10;15 ms=33728&#10;16 ms=33792&#10;17 ms=33856&#10;18 ms=33920&#10;19 ms=33984&#10;20 ms=34048&#10;21 ms=34112&#10;22 ms=34176&#10;23 ms=34240&#10;24 ms=34304&#10;25 ms=34368&#10;26 ms=34432&#10;27 ms=34496&#10;28 ms=34560&#10;29 ms=34624&#10;30 ms=34688&#10;31 ms=34752&#10;32 ms=34816&#10;33 ms=34880&#10;34 ms=34944&#10;35 ms=35008&#10;36 ms=35072&#10;37 ms=35136&#10;38 ms=35200&#10;39 ms=35264&#10;40 ms=35328&#10;41 ms=35392&#10;42 ms=35456&#10;43 ms=35520&#10;44 ms=35584&#10;45 ms=35648&#10;46 ms=35712&#10;47 ms=35776&#10;48 ms=35840&#10;49 ms=35904&#10;50 ms=35968&#10;51 ms=36032&#10;52 ms=36096&#10;53 ms=36160&#10;54 ms=36224&#10;55 ms=36288&#10;56 ms=36352&#10;57 ms=36416&#10;58 ms=36480&#10;59 ms=36544&#10;60 ms=36608&#10;61 ms=36672&#10;62 ms=36736&#10;63 ms=36800&#10;64 ms=36864&#10;65 ms=36928&#10;66 ms=36992&#10;67 ms=37056&#10;68 ms=37120&#10;69 ms=37184&#10;70 ms=37248&#10;71 ms=37312&#10;72 ms=37376&#10;73 ms=37440&#10;74 ms=37504&#10;75 ms=37568&#10;76 ms=37632&#10;77 ms=37696&#10;78 ms=37760&#10;79 ms=37824&#10;80 ms=37888&#10;81 ms=37952&#10;82 ms=38016&#10;83 ms=38080&#10;84 ms=38144&#10;85 ms=38208&#10;86 ms=38272&#10;87 ms=38336&#10;88 ms=38400&#10;89 ms=38464&#10;90 ms=38528&#10;91 ms=38592&#10;92 ms=38656&#10;93 ms=38720&#10;94 ms=38784&#10;95 ms=38848&#10;96 ms=38912&#10;97 ms=38976&#10;98 ms=39040&#10;99 ms=39104&#10;100 ms=39168&#10;101 ms=39232&#10;102 ms=39296&#10;103 ms=39360&#10;104 ms=39424&#10;105 ms=39488&#10;106 ms=39552&#10;107 ms=39616&#10;108 ms=39680&#10;109 ms=39744&#10;110 ms=39808&#10;111 ms=39872&#10;112 ms=39936&#10;113 ms=40000&#10;114 ms=40064&#10;115 ms=40128&#10;116 ms=40192&#10;117 ms=40256&#10;118 ms=40320&#10;119 ms=40384&#10;120 ms=40448&#10;121 ms=40512&#10;122 ms=40576&#10;123 ms=40640&#10;124 ms=40704&#10;125 ms=40768&#10;126 ms=40832&#10;127 ms=40896&#10;128 ms=40960&#10;129 ms=41024&#10;130 ms=41088&#10;131 ms=41152&#10;132 ms=41216&#10;133 ms=41280&#10;134 ms=41344&#10;135 ms=41408&#10;136 ms=41472&#10;137 ms=41536&#10;138 ms=41600&#10;139 ms=41664&#10;140 ms=41728&#10;141 ms=41792&#10;142 ms=41856&#10;143 ms=41920&#10;144 ms=41984&#10;145 ms=42048&#10;146 ms=42112&#10;147 ms=42176&#10;148 ms=42240&#10;149 ms=42304&#10;150 ms=42368&#10;151 ms=42432&#10;152 ms=42496&#10;153 ms=42560&#10;154 ms=42624&#10;155 ms=42688&#10;156 ms=42752&#10;157 ms=42816&#10;158 ms=42880&#10;159 ms=42944&#10;160 ms=43008&#10;161 ms=43072&#10;162 ms=43136&#10;163 ms=43200&#10;164 ms=43264&#10;165 ms=43328&#10;166 ms=43392&#10;167 ms=43456&#10;168 ms=43520&#10;169 ms=43584&#10;170 ms=43648&#10;171 ms=43712&#10;172 ms=43776&#10;173 ms=43840&#10;174 ms=43904&#10;175 ms=43968&#10;176 ms=44032&#10;177 ms=44096&#10;178 ms=44160&#10;179 ms=44224&#10;180 ms=44288&#10;181 ms=44352&#10;182 ms=44416&#10;183 ms=44480&#10;184 ms=44544&#10;185 ms=44608&#10;186 ms=44672&#10;187 ms=44736&#10;188 ms=44800&#10;189 ms=44864&#10;190 ms=44928&#10;191 ms=44992&#10;192 ms=45056&#10;193 ms=45120&#10;194 ms=45184&#10;195 ms=45248&#10;196 ms=45312&#10;197 ms=45376&#10;198 ms=45440&#10;199 ms=45504&#10;200 ms=45568&#10;201 ms=45632&#10;202 ms=45696&#10;203 ms=45760&#10;204 ms=45824&#10;205 ms=45888&#10;206 ms=45952&#10;207 ms=46016&#10;208 ms=46080&#10;209 ms=46144&#10;210 ms=46208&#10;211 ms=46272&#10;212 ms=46336&#10;213 ms=46400&#10;214 ms=46464&#10;215 ms=46528&#10;216 ms=46592&#10;217 ms=46656&#10;218 ms=46720&#10;219 ms=46784&#10;220 ms=46848&#10;221 ms=46912&#10;222 ms=46976&#10;223 ms=47040&#10;224 ms=47104&#10;225 ms=47168&#10;226 ms=47232&#10;227 ms=47296&#10;228 ms=47360&#10;229 ms=47424&#10;230 ms=47488&#10;231 ms=47552&#10;232 ms=47616&#10;233 ms=47680&#10;234 ms=47744&#10;235 ms=47808&#10;236 ms=47872&#10;237 ms=47936&#10;238 ms=48000&#10;239 ms=48064&#10;240 ms=48128&#10;241 ms=48192&#10;242 ms=48256&#10;243 ms=48320&#10;244 ms=48384&#10;245 ms=48448&#10;246 ms=48512&#10;247 ms=48576&#10;248 ms=48640&#10;249 ms=48704&#10;250 ms=48768&#10;251 ms=48832&#10;252 ms=48896&#10;253 ms=48960&#10;254 ms=49024&#10;255 ms=49088&#10;256 ms=49152&#10;257 ms=49216&#10;258 ms=49280&#10;259 ms=49344&#10;260 ms=49408&#10;261 ms=49472&#10;262 ms=49536"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="2" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="136 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="31" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="02" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="BIDIR" modulatorVstNameFormat="%n"
             luaModulatorValueChange="chMod_Uni_ValByName" name="PlateEffectsLevel"
             modulatorMin="0" modulatorValue="100">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="EffectsLevel1"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="54.400000000000006"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="-15" uiSliderMax="16" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="100" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0%=32768&#10;1%=32932&#10;2%=33096&#10;3%=33259&#10;4%=33423&#10;5%=33587&#10;6%=33751&#10;7%=33915&#10;8%=34079&#10;9%=34242&#10;10%=34406&#10;11%=34570&#10;12%=34734&#10;13%=34898&#10;14%=35062&#10;15%=35225&#10;16%=35389&#10;17%=35553&#10;18%=35717&#10;19%=35881&#10;20%=36045&#10;21%=36208&#10;22%=36372&#10;23%=36536&#10;24%=36700&#10;25%=36864&#10;26%=37028&#10;27%=37191&#10;28%=37355&#10;29%=37519&#10;30%=37683&#10;31%=37847&#10;32%=38011&#10;33%=38174&#10;34%=38338&#10;35%=38502&#10;36%=38666&#10;37%=38830&#10;38%=38994&#10;39%=39157&#10;40%=39321&#10;41%=39485&#10;42%=39649&#10;43%=39813&#10;44%=39977&#10;45%=40140&#10;46%=40304&#10;47%=40468&#10;48%=40632&#10;49%=40796&#10;50%=40960&#10;51%=41123&#10;52%=41287&#10;53%=41451&#10;54%=41615&#10;55%=41779&#10;56%=41942&#10;57%=42106&#10;58%=42270&#10;59%=42434&#10;60%=42598&#10;61%=42762&#10;62%=42925&#10;63%=43089&#10;64%=43253&#10;65%=43417&#10;66%=43581&#10;67%=43745&#10;68%=43908&#10;69%=44072&#10;70%=44236&#10;71%=44400&#10;72%=44564&#10;73%=44728&#10;74%=44891&#10;75%=45055&#10;76%=45219&#10;77%=45383&#10;78%=45547&#10;79%=45711&#10;80%=45874&#10;81%=46038&#10;82%=46202&#10;83%=46366&#10;84%=46530&#10;85%=46694&#10;86%=46857&#10;87%=47021&#10;88%=47185&#10;89%=47349&#10;90%=47513&#10;91%=47677&#10;92%=47840&#10;93%=48004&#10;94%=48168&#10;95%=48332&#10;96%=48496&#10;97%=48660&#10;98%=48823&#10;99%=48987&#10;100%=49150"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="240 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="31" vstIndex="32" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="03" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="BI" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="PlateBassMultiply" modulatorMin="0" modulatorValue="10">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Bass Multiply"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="-15" uiSliderMax="16" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="10" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0,3=16384&#10;0,4=17408&#10;0,4=18432&#10;0,5=19456&#10;0,6=20480&#10;0,7=21504&#10;0,7=22528&#10;0,8=23552&#10;0,9=24576&#10;0,9=25600&#10;1=26624&#10;1,1=27648&#10;1,1=28672&#10;1,2=29696&#10;1,3=30720&#10;1,4=31744&#10;1,4=32768&#10;1,5=33792&#10;1,6=34816&#10;1,6=35840&#10;1,7=36864&#10;1,8=37888&#10;1,8=38912&#10;1,9=39936&#10;2=40960&#10;2,1=41984&#10;2,1=43008&#10;2,2=44032&#10;2,3=45056&#10;2,3=46080&#10;2,4=47104&#10;2,5=48128"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="2df24869af040000feffffffffffffff"
               componentRectangle="344 16 100 70" uiType="uiFixedImageSlider"
               componentTabName="AlgoTab" componentTabId="2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="16" vstIndex="33" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="04" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="PlateHighFreqCutoff" modulatorMin="0" modulatorValue="16">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High Freq Cutoff"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="16" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="321 Hz=32768&#10;1,16 kHz=33792&#10;2,01 kHz=34816&#10;2,85 kHz=35840&#10;3,69 kHz=36864&#10;4,53 kHz=37888&#10;5,38 kHz=38912&#10;6,22 kHz=39936&#10;7,06 kHz=40960&#10;7,9 kHz=41984&#10;8,75 kHz=43008&#10;9,59 kHz=44032&#10;10,43 kHz=45056&#10;11,27 kHz=46080&#10;12,12 kHz=47104&#10;12,96 kHz=48128&#10;13,8 kHz=49152"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="2" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="448 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="34" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="05" modulatorCustomName="" modulatorCustomIndexGroup="256"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="PlateSize" modulatorMin="0" modulatorValue="32">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Size"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="32" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="8 m=32768&#10;9 m=33024&#10;10 m=33280&#10;11 m=33536&#10;12 m=33792&#10;13 m=34048&#10;14 m=34304&#10;15 m=34560&#10;16 m=34816&#10;17 m=35072&#10;18 m=35328&#10;19 m=35584&#10;20 m=35840&#10;21 m=36096&#10;22 m=36352&#10;23 m=36608&#10;24 m=36864&#10;25 m=37120&#10;26 m=37376&#10;27 m=37632&#10;28 m=37888&#10;29 m=38144&#10;30 m=38400&#10;31 m=38656&#10;32 m=38912&#10;33 m=39168&#10;34 m=39424&#10;35 m=39680&#10;36 m=39936&#10;37 m=40192&#10;38 m=40448&#10;39 m=40704&#10;40 m=40960&#10;41 m=41216&#10;42 m=41472&#10;43 m=41728&#10;44 m=41984&#10;45 m=42240&#10;46 m=42496&#10;47 m=42752&#10;48 m=43008&#10;49 m=43264&#10;50 m=43520&#10;51 m=43776&#10;52 m=44032&#10;53 m=44288&#10;54 m=44544&#10;55 m=44800&#10;56 m=45056&#10;57 m=45312&#10;58 m=45568&#10;59 m=45824&#10;60 m=46080&#10;61 m=46336&#10;62 m=46592&#10;63 m=46848&#10;64 m=47104&#10;65 m=47360&#10;66 m=47616&#10;67 m=47872&#10;68 m=48128&#10;69 m=48384&#10;70 m=48640&#10;71 m=48896"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="2" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="552 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="254" vstIndex="35" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="06" modulatorCustomName="" modulatorCustomIndexGroup="1680"
             modulatorCustomNameGroup="BIDIR" modulatorVstNameFormat="%n"
             luaModulatorValueChange="chMod_Uni_ValByName" name="PlatePredelayFeedback"
             modulatorMin="0" modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Predelay Feedback"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="54.400000000000006"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="-15" uiSliderMax="16" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="127" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="-100%=16385&#10;-99%=16514&#10;-98%=16643&#10;-98%=16772&#10;-97%=16901&#10;-96%=17030&#10;-95%=17159&#10;-94%=17288&#10;-94%=17417&#10;-93%=17546&#10;-92%=17675&#10;-91%=17804&#10;-91%=17933&#10;-90%=18062&#10;-89%=18191&#10;-88%=18320&#10;-87%=18449&#10;-87%=18578&#10;-86%=18707&#10;-85%=18836&#10;-84%=18965&#10;-83%=19094&#10;-83%=19223&#10;-82%=19352&#10;-81%=19481&#10;-80%=19610&#10;-80%=19739&#10;-79%=19868&#10;-78%=19997&#10;-77%=20126&#10;-76%=20255&#10;-76%=20384&#10;-75%=20513&#10;-74%=20642&#10;-73%=20771&#10;-72%=20900&#10;-72%=21029&#10;-71%=21158&#10;-70%=21287&#10;-69%=21416&#10;-69%=21545&#10;-68%=21674&#10;-67%=21803&#10;-66%=21932&#10;-65%=22061&#10;-65%=22190&#10;-64%=22319&#10;-63%=22448&#10;-62%=22577&#10;-61%=22706&#10;-61%=22835&#10;-60%=22964&#10;-59%=23093&#10;-58%=23222&#10;-57%=23351&#10;-57%=23480&#10;-56%=23609&#10;-55%=23738&#10;-54%=23867&#10;-54%=23996&#10;-53%=24125&#10;-52%=24254&#10;-51%=24383&#10;-50%=24512&#10;-50%=24641&#10;-49%=24770&#10;-48%=24899&#10;-47%=25028&#10;-46%=25157&#10;-46%=25286&#10;-45%=25415&#10;-44%=25544&#10;-43%=25673&#10;-43%=25802&#10;-42%=25931&#10;-41%=26060&#10;-40%=26189&#10;-39%=26318&#10;-39%=26447&#10;-38%=26576&#10;-37%=26705&#10;-36%=26834&#10;-35%=26963&#10;-35%=27092&#10;-34%=27221&#10;-33%=27350&#10;-32%=27479&#10;-31%=27608&#10;-31%=27737&#10;-30%=27866&#10;-29%=27995&#10;-28%=28124&#10;-28%=28253&#10;-27%=28382&#10;-26%=28511&#10;-25%=28640&#10;-24%=28769&#10;-24%=28898&#10;-23%=29027&#10;-22%=29156&#10;-21%=29285&#10;-20%=29414&#10;-20%=29543&#10;-19%=29672&#10;-18%=29801&#10;-17%=29930&#10;-17%=30059&#10;-16%=30188&#10;-15%=30317&#10;-14%=30446&#10;-13%=30575&#10;-13%=30704&#10;-12%=30833&#10;-11%=30962&#10;-10%=31091&#10;-9%=31220&#10;-9%=31349&#10;-8%=31478&#10;-7%=31607&#10;-6%=31736&#10;-6%=31865&#10;-5%=31994&#10;-4%=32123&#10;-3%=32252&#10;-2%=32381&#10;-2%=32510&#10;-1%=32639&#10;0%=32768&#10;1%=32897&#10;2%=33026&#10;2%=33155&#10;3%=33284&#10;4%=33413&#10;5%=33542&#10;6%=33671&#10;6%=33800&#10;7%=33929&#10;8%=34058&#10;9%=34187&#10;9%=34316&#10;10%=34445&#10;11%=34574&#10;12%=34703&#10;13%=34832&#10;13%=34961&#10;14%=35090&#10;15%=35219&#10;16%=35348&#10;17%=35477&#10;17%=35606&#10;18%=35735&#10;19%=35864&#10;20%=35993&#10;20%=36122&#10;21%=36251&#10;22%=36380&#10;23%=36509&#10;24%=36638&#10;24%=36767&#10;25%=36896&#10;26%=37025&#10;27%=37154&#10;28%=37283&#10;28%=37412&#10;29%=37541&#10;30%=37670&#10;31%=37799&#10;31%=37928&#10;32%=38057&#10;33%=38186&#10;34%=38315&#10;35%=38444&#10;35%=38573&#10;36%=38702&#10;37%=38831&#10;38%=38960&#10;39%=39089&#10;39%=39218&#10;40%=39347&#10;41%=39476&#10;42%=39605&#10;43%=39734&#10;43%=39863&#10;44%=39992&#10;45%=40121&#10;46%=40250&#10;46%=40379&#10;47%=40508&#10;48%=40637&#10;49%=40766&#10;50%=40895&#10;50%=41024&#10;51%=41153&#10;52%=41282&#10;53%=41411&#10;54%=41540&#10;54%=41669&#10;55%=41798&#10;56%=41927&#10;57%=42056&#10;57%=42185&#10;58%=42314&#10;59%=42443&#10;60%=42572&#10;61%=42701&#10;61%=42830&#10;62%=42959&#10;63%=43088&#10;64%=43217&#10;65%=43346&#10;65%=43475&#10;66%=43604&#10;67%=43733&#10;68%=43862&#10;69%=43991&#10;69%=44120&#10;70%=44249&#10;71%=44378&#10;72%=44507&#10;72%=44636&#10;73%=44765&#10;74%=44894&#10;75%=45023&#10;76%=45152&#10;76%=45281&#10;77%=45410&#10;78%=45539&#10;79%=45668&#10;80%=45797&#10;80%=45926&#10;81%=46055&#10;82%=46184&#10;83%=46313&#10;83%=46442&#10;84%=46571&#10;85%=46700&#10;86%=46829&#10;87%=46958&#10;87%=47087&#10;88%=47216&#10;89%=47345&#10;90%=47474&#10;91%=47603&#10;91%=47732&#10;92%=47861&#10;93%=47990&#10;94%=48119&#10;94%=48248&#10;95%=48377&#10;96%=48506&#10;97%=48635&#10;98%=48764&#10;98%=48893&#10;99%=49022&#10;100%=49151"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="2df24869af040000feffffffffffffff"
               componentRectangle="656 16 100 70" uiType="uiFixedImageSlider"
               componentTabName="AlgoTab" componentTabId="2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="255" vstIndex="36" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="07" modulatorCustomName="" modulatorCustomIndexGroup="64"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="PlateDiffusion" modulatorMin="0" modulatorValue="128">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Diffusion"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="128" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0=32768&#10;0=32832&#10;1=32896&#10;1=32960&#10;2=33024&#10;2=33088&#10;2=33152&#10;3=33216&#10;3=33280&#10;4=33344&#10;4=33408&#10;4=33472&#10;5=33536&#10;5=33600&#10;5=33664&#10;6=33728&#10;6=33792&#10;7=33856&#10;7=33920&#10;7=33984&#10;8=34048&#10;8=34112&#10;9=34176&#10;9=34240&#10;9=34304&#10;10=34368&#10;10=34432&#10;11=34496&#10;11=34560&#10;11=34624&#10;12=34688&#10;12=34752&#10;13=34816&#10;13=34880&#10;13=34944&#10;14=35008&#10;14=35072&#10;15=35136&#10;15=35200&#10;15=35264&#10;16=35328&#10;16=35392&#10;16=35456&#10;17=35520&#10;17=35584&#10;18=35648&#10;18=35712&#10;18=35776&#10;19=35840&#10;19=35904&#10;20=35968&#10;20=36032&#10;20=36096&#10;21=36160&#10;21=36224&#10;22=36288&#10;22=36352&#10;22=36416&#10;23=36480&#10;23=36544&#10;24=36608&#10;24=36672&#10;24=36736&#10;25=36800&#10;25=36864&#10;25=36928&#10;26=36992&#10;26=37056&#10;27=37120&#10;27=37184&#10;27=37248&#10;28=37312&#10;28=37376&#10;29=37440&#10;29=37504&#10;29=37568&#10;30=37632&#10;30=37696&#10;31=37760&#10;31=37824&#10;31=37888&#10;32=37952&#10;32=38016&#10;33=38080&#10;33=38144&#10;33=38208&#10;34=38272&#10;34=38336&#10;35=38400&#10;35=38464&#10;35=38528&#10;36=38592&#10;36=38656&#10;36=38720&#10;37=38784&#10;37=38848&#10;38=38912&#10;38=38976&#10;38=39040&#10;39=39104&#10;39=39168&#10;40=39232&#10;40=39296&#10;40=39360&#10;41=39424&#10;41=39488&#10;42=39552&#10;42=39616&#10;42=39680&#10;43=39744&#10;43=39808&#10;44=39872&#10;44=39936&#10;44=40000&#10;45=40064&#10;45=40128&#10;45=40192&#10;46=40256&#10;46=40320&#10;47=40384&#10;47=40448&#10;47=40512&#10;48=40576&#10;48=40640&#10;49=40704&#10;49=40768&#10;49=40832&#10;50=40896&#10;50=40960&#10;51=41024&#10;51=41088&#10;51=41152&#10;52=41216&#10;52=41280&#10;53=41344&#10;53=41408&#10;53=41472&#10;54=41536&#10;54=41600&#10;55=41664&#10;55=41728&#10;55=41792&#10;56=41856&#10;56=41920&#10;56=41984&#10;57=42048&#10;57=42112&#10;58=42176&#10;58=42240&#10;58=42304&#10;59=42368&#10;59=42432&#10;60=42496&#10;60=42560&#10;60=42624&#10;61=42688&#10;61=42752&#10;62=42816&#10;62=42880&#10;62=42944&#10;63=43008&#10;63=43072&#10;64=43136&#10;64=43200&#10;64=43264&#10;65=43328&#10;65=43392&#10;65=43456&#10;66=43520&#10;66=43584&#10;67=43648&#10;67=43712&#10;67=43776&#10;68=43840&#10;68=43904&#10;69=43968&#10;69=44032&#10;69=44096&#10;70=44160&#10;70=44224&#10;71=44288&#10;71=44352&#10;71=44416&#10;72=44480&#10;72=44544&#10;73=44608&#10;73=44672&#10;73=44736&#10;74=44800&#10;74=44864&#10;75=44928&#10;75=44992&#10;75=45056&#10;76=45120&#10;76=45184&#10;76=45248&#10;77=45312&#10;77=45376&#10;78=45440&#10;78=45504&#10;78=45568&#10;79=45632&#10;79=45696&#10;80=45760&#10;80=45824&#10;80=45888&#10;81=45952&#10;81=46016&#10;82=46080&#10;82=46144&#10;82=46208&#10;83=46272&#10;83=46336&#10;84=46400&#10;84=46464&#10;84=46528&#10;85=46592&#10;85=46656&#10;85=46720&#10;86=46784&#10;86=46848&#10;87=46912&#10;87=46976&#10;87=47040&#10;88=47104&#10;88=47168&#10;89=47232&#10;89=47296&#10;89=47360&#10;90=47424&#10;90=47488&#10;91=47552&#10;91=47616&#10;91=47680&#10;92=47744&#10;92=47808&#10;93=47872&#10;93=47936&#10;93=48000&#10;94=48064&#10;94=48128&#10;95=48192&#10;95=48256&#10;95=48320&#10;96=48384&#10;96=48448&#10;96=48512&#10;97=48576&#10;97=48640&#10;98=48704&#10;98=48768&#10;98=48832&#10;99=48896&#10;99=48960&#10;100=49024&#10;100=49088"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="760 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="37" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="00" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Chorus1NegativFeedback" modulatorMin="0" modulatorValue="-1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Negativ Feedback"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0%=32768&#10;1%=32932&#10;2%=33096&#10;3%=33259&#10;4%=33423&#10;5%=33587&#10;6%=33751&#10;7%=33915&#10;8%=34079&#10;9%=34242&#10;10%=34406&#10;11%=34570&#10;12%=34734&#10;13%=34898&#10;14%=35062&#10;15%=35225&#10;16%=35389&#10;17%=35553&#10;18%=35717&#10;19%=35881&#10;20%=36045&#10;21%=36208&#10;22%=36372&#10;23%=36536&#10;24%=36700&#10;25%=36864&#10;26%=37028&#10;27%=37191&#10;28%=37355&#10;29%=37519&#10;30%=37683&#10;31%=37847&#10;32%=38011&#10;33%=38174&#10;34%=38338&#10;35%=38502&#10;36%=38666&#10;37%=38830&#10;38%=38994&#10;39%=39157&#10;40%=39321&#10;41%=39485&#10;42%=39649&#10;43%=39813&#10;44%=39977&#10;45%=40140&#10;46%=40304&#10;47%=40468&#10;48%=40632&#10;49%=40796&#10;50%=40960&#10;51%=41123&#10;52%=41287&#10;53%=41451&#10;54%=41615&#10;55%=41779&#10;56%=41942&#10;57%=42106&#10;58%=42270&#10;59%=42434&#10;60%=42598&#10;61%=42762&#10;62%=42925&#10;63%=43089&#10;64%=43253&#10;65%=43417&#10;66%=43581&#10;67%=43745&#10;68%=43908&#10;69%=44072&#10;70%=44236&#10;71%=44400&#10;72%=44564&#10;73%=44728&#10;74%=44891&#10;75%=45055&#10;76%=45219&#10;77%=45383&#10;78%=45547&#10;79%=45711&#10;80%=45874&#10;81%=46038&#10;82%=46202&#10;83%=46366&#10;84%=46530&#10;85%=46694&#10;86%=46857&#10;87%=47021&#10;88%=47185&#10;89%=47349&#10;90%=47513&#10;91%=47677&#10;92%=47840&#10;93%=48004&#10;94%=48168&#10;95%=48332&#10;96%=48496&#10;97%=48660&#10;98%=48823&#10;99%=48987&#10;100%=49151"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="3" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="32 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="124" vstIndex="38" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="01" modulatorCustomName="" modulatorCustomIndexGroup="64"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Chorus1Depht" modulatorMin="0" modulatorValue="24">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Depht"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="60" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0,25ms=33280&#10;0,31ms=33408&#10;0,38ms=33536&#10;0,44ms=33664&#10;0,5ms=33792&#10;0,56ms=33920&#10;0,63ms=34048&#10;0,69ms=34176&#10;0,75ms=34304&#10;0,81ms=34432&#10;0,88ms=34560&#10;0,94ms=34688&#10;1ms=34816&#10;1,06ms=34944&#10;1,13ms=35072&#10;1,19ms=35200&#10;1,25ms=35328&#10;1,31ms=35456&#10;1,38ms=35584&#10;1,44ms=35712&#10;1,5ms=35840&#10;1,56ms=35968&#10;1,63ms=36096&#10;1,69ms=36224&#10;1,75ms=36352&#10;1,81ms=36480&#10;1,88ms=36608&#10;1,94ms=36736&#10;2ms=36864&#10;2,06ms=36992&#10;2,13ms=37120&#10;2,19ms=37248&#10;2,25ms=37376&#10;2,31ms=37504&#10;2,38ms=37632&#10;2,44ms=37760&#10;2,5ms=37888&#10;2,56ms=38016&#10;2,63ms=38144&#10;2,69ms=38272&#10;2,75ms=38400&#10;2,81ms=38528&#10;2,88ms=38656&#10;2,94ms=38784&#10;3ms=38912&#10;3,06ms=39040&#10;3,13ms=39168&#10;3,19ms=39296&#10;3,25ms=39424&#10;3,31ms=39552&#10;3,38ms=39680&#10;3,44ms=39808&#10;3,5ms=39936&#10;3,56ms=40064&#10;3,63ms=40192&#10;3,69ms=40320&#10;3,75ms=40448&#10;3,81ms=40576&#10;3,88ms=40704&#10;3,94ms=40832&#10;4ms=40960&#10;4,06ms=41088&#10;4,13ms=41216&#10;4,19ms=41344&#10;4,25ms=41472&#10;4,31ms=41600&#10;4,38ms=41728&#10;4,44ms=41856&#10;4,5ms=41984&#10;4,56ms=42112&#10;4,63ms=42240&#10;4,69ms=42368&#10;4,75ms=42496&#10;4,81ms=42624&#10;4,88ms=42752&#10;4,94ms=42880&#10;5ms=43008&#10;5,06ms=43136&#10;5,13ms=43264&#10;5,19ms=43392&#10;5,25ms=43520&#10;5,31ms=43648&#10;5,38ms=43776&#10;5,44ms=43904&#10;5,5ms=44032&#10;5,56ms=44160&#10;5,63ms=44288&#10;5,69ms=44416&#10;5,75ms=44544&#10;5,81ms=44672&#10;5,88ms=44800&#10;5,94ms=44928&#10;6ms=45056&#10;6,06ms=45184&#10;6,13ms=45312&#10;6,19ms=45440&#10;6,25ms=45568&#10;6,31ms=45696&#10;6,38ms=45824&#10;6,44ms=45952&#10;6,5ms=46080&#10;6,56ms=46208&#10;6,63ms=46336&#10;6,69ms=46464&#10;6,75ms=46592&#10;6,81ms=46720&#10;6,88ms=46848&#10;6,94ms=46976&#10;7ms=47104&#10;7,06ms=47232&#10;7,13ms=47360&#10;7,19ms=47488&#10;7,25ms=47616&#10;7,31ms=47744&#10;7,38ms=47872&#10;7,44ms=48000&#10;7,5ms=48128&#10;7,56ms=48256&#10;7,63ms=48384&#10;7,69ms=48512&#10;7,75ms=48640&#10;7,81ms=48768&#10;7,88ms=48896&#10;7,94ms=49024&#10;8ms=49152"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="136 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="3"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="7" vstIndex="39" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="05" modulatorCustomName="" modulatorCustomIndexGroup="2048"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Chorus1Shape" modulatorMin="0" modulatorValue="6">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Shape"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="4" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0=32768&#10;1=34816&#10;2=36864&#10;3=38912&#10;4=40960&#10;5=43008&#10;6=45056&#10;7=47104"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="3" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="552 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="125" vstIndex="40" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="04" modulatorCustomName="" modulatorCustomIndexGroup="128"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Chorus1RightDelay" modulatorMin="0" modulatorValue="5">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Right Delay"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0ms=32768&#10;8ms=32896&#10;16ms=33024&#10;24ms=33152&#10;32ms=33280&#10;40ms=33408&#10;48ms=33536&#10;56ms=33664&#10;64ms=33792&#10;72ms=33920&#10;80ms=34048&#10;88ms=34176&#10;96ms=34304&#10;104ms=34432&#10;112ms=34560&#10;120ms=34688&#10;128ms=34816&#10;136ms=34944&#10;144ms=35072&#10;152ms=35200&#10;160ms=35328&#10;168ms=35456&#10;176ms=35584&#10;184ms=35712&#10;192ms=35840&#10;200ms=35968&#10;208ms=36096&#10;216ms=36224&#10;224ms=36352&#10;232ms=36480&#10;240ms=36608&#10;248ms=36736&#10;256ms=36864&#10;264ms=36992&#10;272ms=37120&#10;280ms=37248&#10;288ms=37376&#10;296ms=37504&#10;304ms=37632&#10;312ms=37760&#10;320ms=37888&#10;328ms=38016&#10;336ms=38144&#10;344ms=38272&#10;352ms=38400&#10;360ms=38528&#10;368ms=38656&#10;376ms=38784&#10;384ms=38912&#10;392ms=39040&#10;400ms=39168&#10;408ms=39296&#10;416ms=39424&#10;424ms=39552&#10;432ms=39680&#10;440ms=39808&#10;448ms=39936&#10;456ms=40064&#10;464ms=40192&#10;472ms=40320&#10;480ms=40448&#10;488ms=40576&#10;496ms=40704&#10;504ms=40832&#10;512ms=40960&#10;520ms=41088&#10;528ms=41216&#10;536ms=41344&#10;544ms=41472&#10;552ms=41600&#10;560ms=41728&#10;568ms=41856&#10;576ms=41984&#10;584ms=42112&#10;592ms=42240&#10;600ms=42368&#10;608ms=42496&#10;616ms=42624&#10;624ms=42752&#10;632ms=42880&#10;640ms=43008&#10;648ms=43136&#10;656ms=43264&#10;664ms=43392&#10;672ms=43520&#10;680ms=43648&#10;688ms=43776&#10;696ms=43904&#10;704ms=44032&#10;712ms=44160&#10;720ms=44288&#10;728ms=44416&#10;736ms=44544&#10;744ms=44672&#10;752ms=44800&#10;760ms=44928&#10;768ms=45056&#10;776ms=45184&#10;784ms=45312&#10;792ms=45440&#10;800ms=45568&#10;808ms=45696&#10;816ms=45824&#10;824ms=45952&#10;832ms=46080&#10;840ms=46208&#10;848ms=46336&#10;856ms=46464&#10;864ms=46592&#10;872ms=46720&#10;880ms=46848&#10;888ms=46976&#10;896ms=47104&#10;904ms=47232&#10;912ms=47360&#10;920ms=47488&#10;928ms=47616&#10;936ms=47744&#10;944ms=47872&#10;952ms=48000&#10;960ms=48128&#10;968ms=48256&#10;976ms=48384&#10;984ms=48512&#10;992ms=48640&#10;1000ms=48768"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="3" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="448 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="30" vstIndex="41" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="08" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Chorus1Rate" modulatorMin="0" modulatorValue="22">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Rate"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="1.0=32768&#10;1.1=32800&#10;1.2=32832&#10;1.3=32864&#10;1.4=32896&#10;1.5=32928&#10;1.6=32960&#10;1.7=32992&#10;1.8=33024&#10;1.9=33056&#10;1.10=33088&#10;1.11=33120&#10;1.12=33152&#10;1.13=33184&#10;1.14=33216&#10;1.15=33248&#10;2=33280&#10;3=33792&#10;4=34304&#10;5=34816&#10;6=35328&#10;7=35840&#10;8=36352&#10;9=36864&#10;10=37376&#10;11=37888&#10;12=38400&#10;13=38912&#10;14=39424&#10;15=39936&#10;16=40448"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="3" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="864 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="125" vstIndex="42" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="07" modulatorCustomName="" modulatorCustomIndexGroup="128"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Chorus1LeftDelay" modulatorMin="0" modulatorValue="4">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Left Delay"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0ms=32768&#10;8ms=32896&#10;16ms=33024&#10;24ms=33152&#10;32ms=33280&#10;40ms=33408&#10;48ms=33536&#10;56ms=33664&#10;64ms=33792&#10;72ms=33920&#10;80ms=34048&#10;88ms=34176&#10;96ms=34304&#10;104ms=34432&#10;112ms=34560&#10;120ms=34688&#10;128ms=34816&#10;136ms=34944&#10;144ms=35072&#10;152ms=35200&#10;160ms=35328&#10;168ms=35456&#10;176ms=35584&#10;184ms=35712&#10;192ms=35840&#10;200ms=35968&#10;208ms=36096&#10;216ms=36224&#10;224ms=36352&#10;232ms=36480&#10;240ms=36608&#10;248ms=36736&#10;256ms=36864&#10;264ms=36992&#10;272ms=37120&#10;280ms=37248&#10;288ms=37376&#10;296ms=37504&#10;304ms=37632&#10;312ms=37760&#10;320ms=37888&#10;328ms=38016&#10;336ms=38144&#10;344ms=38272&#10;352ms=38400&#10;360ms=38528&#10;368ms=38656&#10;376ms=38784&#10;384ms=38912&#10;392ms=39040&#10;400ms=39168&#10;408ms=39296&#10;416ms=39424&#10;424ms=39552&#10;432ms=39680&#10;440ms=39808&#10;448ms=39936&#10;456ms=40064&#10;464ms=40192&#10;472ms=40320&#10;480ms=40448&#10;488ms=40576&#10;496ms=40704&#10;504ms=40832&#10;512ms=40960&#10;520ms=41088&#10;528ms=41216&#10;536ms=41344&#10;544ms=41472&#10;552ms=41600&#10;560ms=41728&#10;568ms=41856&#10;576ms=41984&#10;584ms=42112&#10;592ms=42240&#10;600ms=42368&#10;608ms=42496&#10;616ms=42624&#10;624ms=42752&#10;632ms=42880&#10;640ms=43008&#10;648ms=43136&#10;656ms=43264&#10;664ms=43392&#10;672ms=43520&#10;680ms=43648&#10;688ms=43776&#10;696ms=43904&#10;704ms=44032&#10;712ms=44160&#10;720ms=44288&#10;728ms=44416&#10;736ms=44544&#10;744ms=44672&#10;752ms=44800&#10;760ms=44928&#10;768ms=45056&#10;776ms=45184&#10;784ms=45312&#10;792ms=45440&#10;800ms=45568&#10;808ms=45696&#10;816ms=45824&#10;824ms=45952&#10;832ms=46080&#10;840ms=46208&#10;848ms=46336&#10;856ms=46464&#10;864ms=46592&#10;872ms=46720&#10;880ms=46848&#10;888ms=46976&#10;896ms=47104&#10;904ms=47232&#10;912ms=47360&#10;920ms=47488&#10;928ms=47616&#10;936ms=47744&#10;944ms=47872&#10;952ms=48000&#10;960ms=48128&#10;968ms=48256&#10;976ms=48384&#10;984ms=48512&#10;992ms=48640&#10;1000ms=48768"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="760 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="3"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="43" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="02" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="BIDIR" modulatorVstNameFormat="%n"
             luaModulatorValueChange="chMod_Uni_ValByName" name="Chorus1EffectsLevel"
             modulatorMin="0" modulatorValue="100">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="EffectsLevel1"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="54.400000000000006"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="-15" uiSliderMax="16" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="100" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0%=32768&#10;1%=32932&#10;2%=33096&#10;3%=33259&#10;4%=33423&#10;5%=33587&#10;6%=33751&#10;7%=33915&#10;8%=34079&#10;9%=34242&#10;10%=34406&#10;11%=34570&#10;12%=34734&#10;13%=34898&#10;14%=35062&#10;15%=35225&#10;16%=35389&#10;17%=35553&#10;18%=35717&#10;19%=35881&#10;20%=36045&#10;21%=36208&#10;22%=36372&#10;23%=36536&#10;24%=36700&#10;25%=36864&#10;26%=37028&#10;27%=37191&#10;28%=37355&#10;29%=37519&#10;30%=37683&#10;31%=37847&#10;32%=38011&#10;33%=38174&#10;34%=38338&#10;35%=38502&#10;36%=38666&#10;37%=38830&#10;38%=38994&#10;39%=39157&#10;40%=39321&#10;41%=39485&#10;42%=39649&#10;43%=39813&#10;44%=39977&#10;45%=40140&#10;46%=40304&#10;47%=40468&#10;48%=40632&#10;49%=40796&#10;50%=40960&#10;51%=41123&#10;52%=41287&#10;53%=41451&#10;54%=41615&#10;55%=41779&#10;56%=41942&#10;57%=42106&#10;58%=42270&#10;59%=42434&#10;60%=42598&#10;61%=42762&#10;62%=42925&#10;63%=43089&#10;64%=43253&#10;65%=43417&#10;66%=43581&#10;67%=43745&#10;68%=43908&#10;69%=44072&#10;70%=44236&#10;71%=44400&#10;72%=44564&#10;73%=44728&#10;74%=44891&#10;75%=45055&#10;76%=45219&#10;77%=45383&#10;78%=45547&#10;79%=45711&#10;80%=45874&#10;81%=46038&#10;82%=46202&#10;83%=46366&#10;84%=46530&#10;85%=46694&#10;86%=46857&#10;87%=47021&#10;88%=47185&#10;89%=47349&#10;90%=47513&#10;91%=47677&#10;92%=47840&#10;93%=48004&#10;94%=48168&#10;95%=48332&#10;96%=48496&#10;97%=48660&#10;98%=48823&#10;99%=48987&#10;100%=49151"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="240 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="3"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="254" vstIndex="44" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="03" modulatorCustomName="" modulatorCustomIndexGroup="32"
             modulatorCustomNameGroup="BIDIR" modulatorVstNameFormat="%n"
             luaModulatorValueChange="chMod_Uni_ValByName" name="Chorus1RightFeedback"
             modulatorMin="0" modulatorValue="183">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Right Feedback"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="54.400000000000006"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="-15" uiSliderMax="16" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="190" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="-100%=16385&#10;-99%=16514&#10;-98%=16643&#10;-98%=16772&#10;-97%=16901&#10;-96%=17030&#10;-95%=17159&#10;-94%=17288&#10;-94%=17417&#10;-93%=17546&#10;-92%=17675&#10;-91%=17804&#10;-91%=17933&#10;-90%=18062&#10;-89%=18191&#10;-88%=18320&#10;-87%=18449&#10;-87%=18578&#10;-86%=18707&#10;-85%=18836&#10;-84%=18965&#10;-83%=19094&#10;-83%=19223&#10;-82%=19352&#10;-81%=19481&#10;-80%=19610&#10;-80%=19739&#10;-79%=19868&#10;-78%=19997&#10;-77%=20126&#10;-76%=20255&#10;-76%=20384&#10;-75%=20513&#10;-74%=20642&#10;-73%=20771&#10;-72%=20900&#10;-72%=21029&#10;-71%=21158&#10;-70%=21287&#10;-69%=21416&#10;-69%=21545&#10;-68%=21674&#10;-67%=21803&#10;-66%=21932&#10;-65%=22061&#10;-65%=22190&#10;-64%=22319&#10;-63%=22448&#10;-62%=22577&#10;-61%=22706&#10;-61%=22835&#10;-60%=22964&#10;-59%=23093&#10;-58%=23222&#10;-57%=23351&#10;-57%=23480&#10;-56%=23609&#10;-55%=23738&#10;-54%=23867&#10;-54%=23996&#10;-53%=24125&#10;-52%=24254&#10;-51%=24383&#10;-50%=24512&#10;-50%=24641&#10;-49%=24770&#10;-48%=24899&#10;-47%=25028&#10;-46%=25157&#10;-46%=25286&#10;-45%=25415&#10;-44%=25544&#10;-43%=25673&#10;-43%=25802&#10;-42%=25931&#10;-41%=26060&#10;-40%=26189&#10;-39%=26318&#10;-39%=26447&#10;-38%=26576&#10;-37%=26705&#10;-36%=26834&#10;-35%=26963&#10;-35%=27092&#10;-34%=27221&#10;-33%=27350&#10;-32%=27479&#10;-31%=27608&#10;-31%=27737&#10;-30%=27866&#10;-29%=27995&#10;-28%=28124&#10;-28%=28253&#10;-27%=28382&#10;-26%=28511&#10;-25%=28640&#10;-24%=28769&#10;-24%=28898&#10;-23%=29027&#10;-22%=29156&#10;-21%=29285&#10;-20%=29414&#10;-20%=29543&#10;-19%=29672&#10;-18%=29801&#10;-17%=29930&#10;-17%=30059&#10;-16%=30188&#10;-15%=30317&#10;-14%=30446&#10;-13%=30575&#10;-13%=30704&#10;-12%=30833&#10;-11%=30962&#10;-10%=31091&#10;-9%=31220&#10;-9%=31349&#10;-8%=31478&#10;-7%=31607&#10;-6%=31736&#10;-6%=31865&#10;-5%=31994&#10;-4%=32123&#10;-3%=32252&#10;-2%=32381&#10;-2%=32510&#10;-1%=32639&#10;0%=32768&#10;1%=32897&#10;2%=33026&#10;2%=33155&#10;3%=33284&#10;4%=33413&#10;5%=33542&#10;6%=33671&#10;6%=33800&#10;7%=33929&#10;8%=34058&#10;9%=34187&#10;9%=34316&#10;10%=34445&#10;11%=34574&#10;12%=34703&#10;13%=34832&#10;13%=34961&#10;14%=35090&#10;15%=35219&#10;16%=35348&#10;17%=35477&#10;17%=35606&#10;18%=35735&#10;19%=35864&#10;20%=35993&#10;20%=36122&#10;21%=36251&#10;22%=36380&#10;23%=36509&#10;24%=36638&#10;24%=36767&#10;25%=36896&#10;26%=37025&#10;27%=37154&#10;28%=37283&#10;28%=37412&#10;29%=37541&#10;30%=37670&#10;31%=37799&#10;31%=37928&#10;32%=38057&#10;33%=38186&#10;34%=38315&#10;35%=38444&#10;35%=38573&#10;36%=38702&#10;37%=38831&#10;38%=38960&#10;39%=39089&#10;39%=39218&#10;40%=39347&#10;41%=39476&#10;42%=39605&#10;43%=39734&#10;43%=39863&#10;44%=39992&#10;45%=40121&#10;46%=40250&#10;46%=40379&#10;47%=40508&#10;48%=40637&#10;49%=40766&#10;50%=40895&#10;50%=41024&#10;51%=41153&#10;52%=41282&#10;53%=41411&#10;54%=41540&#10;54%=41669&#10;55%=41798&#10;56%=41927&#10;57%=42056&#10;57%=42185&#10;58%=42314&#10;59%=42443&#10;60%=42572&#10;61%=42701&#10;61%=42830&#10;62%=42959&#10;63%=43088&#10;64%=43217&#10;65%=43346&#10;65%=43475&#10;66%=43604&#10;67%=43733&#10;68%=43862&#10;69%=43991&#10;69%=44120&#10;70%=44249&#10;71%=44378&#10;72%=44507&#10;72%=44636&#10;73%=44765&#10;74%=44894&#10;75%=45023&#10;76%=45152&#10;76%=45281&#10;77%=45410&#10;78%=45539&#10;79%=45668&#10;80%=45797&#10;80%=45926&#10;81%=46055&#10;82%=46184&#10;83%=46313&#10;83%=46442&#10;84%=46571&#10;85%=46700&#10;86%=46829&#10;87%=46958&#10;87%=47087&#10;88%=47216&#10;89%=47345&#10;90%=47474&#10;91%=47603&#10;91%=47732&#10;92%=47861&#10;93%=47990&#10;94%=48119&#10;94%=48248&#10;95%=48377&#10;96%=48506&#10;97%=48635&#10;98%=48764&#10;98%=48893&#10;99%=49022&#10;100%=49151"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="3" componentTabName="AlgoTab"
               uiType="uiFixedImageSlider" componentRectangle="344 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="254" vstIndex="45" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="06" modulatorCustomName="" modulatorCustomIndexGroup="32"
             modulatorCustomNameGroup="BIDIR" modulatorVstNameFormat="%n"
             luaModulatorValueChange="chMod_Uni_ValByName" name="Chorus1LeftFeedback"
             modulatorMin="0" modulatorValue="83">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Left Feedback"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="54.400000000000006"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="-15" uiSliderMax="16" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="190" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="-100%=16385&#10;-99%=16514&#10;-98%=16643&#10;-98%=16772&#10;-97%=16901&#10;-96%=17030&#10;-95%=17159&#10;-94%=17288&#10;-94%=17417&#10;-93%=17546&#10;-92%=17675&#10;-91%=17804&#10;-91%=17933&#10;-90%=18062&#10;-89%=18191&#10;-88%=18320&#10;-87%=18449&#10;-87%=18578&#10;-86%=18707&#10;-85%=18836&#10;-84%=18965&#10;-83%=19094&#10;-83%=19223&#10;-82%=19352&#10;-81%=19481&#10;-80%=19610&#10;-80%=19739&#10;-79%=19868&#10;-78%=19997&#10;-77%=20126&#10;-76%=20255&#10;-76%=20384&#10;-75%=20513&#10;-74%=20642&#10;-73%=20771&#10;-72%=20900&#10;-72%=21029&#10;-71%=21158&#10;-70%=21287&#10;-69%=21416&#10;-69%=21545&#10;-68%=21674&#10;-67%=21803&#10;-66%=21932&#10;-65%=22061&#10;-65%=22190&#10;-64%=22319&#10;-63%=22448&#10;-62%=22577&#10;-61%=22706&#10;-61%=22835&#10;-60%=22964&#10;-59%=23093&#10;-58%=23222&#10;-57%=23351&#10;-57%=23480&#10;-56%=23609&#10;-55%=23738&#10;-54%=23867&#10;-54%=23996&#10;-53%=24125&#10;-52%=24254&#10;-51%=24383&#10;-50%=24512&#10;-50%=24641&#10;-49%=24770&#10;-48%=24899&#10;-47%=25028&#10;-46%=25157&#10;-46%=25286&#10;-45%=25415&#10;-44%=25544&#10;-43%=25673&#10;-43%=25802&#10;-42%=25931&#10;-41%=26060&#10;-40%=26189&#10;-39%=26318&#10;-39%=26447&#10;-38%=26576&#10;-37%=26705&#10;-36%=26834&#10;-35%=26963&#10;-35%=27092&#10;-34%=27221&#10;-33%=27350&#10;-32%=27479&#10;-31%=27608&#10;-31%=27737&#10;-30%=27866&#10;-29%=27995&#10;-28%=28124&#10;-28%=28253&#10;-27%=28382&#10;-26%=28511&#10;-25%=28640&#10;-24%=28769&#10;-24%=28898&#10;-23%=29027&#10;-22%=29156&#10;-21%=29285&#10;-20%=29414&#10;-20%=29543&#10;-19%=29672&#10;-18%=29801&#10;-17%=29930&#10;-17%=30059&#10;-16%=30188&#10;-15%=30317&#10;-14%=30446&#10;-13%=30575&#10;-13%=30704&#10;-12%=30833&#10;-11%=30962&#10;-10%=31091&#10;-9%=31220&#10;-9%=31349&#10;-8%=31478&#10;-7%=31607&#10;-6%=31736&#10;-6%=31865&#10;-5%=31994&#10;-4%=32123&#10;-3%=32252&#10;-2%=32381&#10;-2%=32510&#10;-1%=32639&#10;0%=32768&#10;1%=32897&#10;2%=33026&#10;2%=33155&#10;3%=33284&#10;4%=33413&#10;5%=33542&#10;6%=33671&#10;6%=33800&#10;7%=33929&#10;8%=34058&#10;9%=34187&#10;9%=34316&#10;10%=34445&#10;11%=34574&#10;12%=34703&#10;13%=34832&#10;13%=34961&#10;14%=35090&#10;15%=35219&#10;16%=35348&#10;17%=35477&#10;17%=35606&#10;18%=35735&#10;19%=35864&#10;20%=35993&#10;20%=36122&#10;21%=36251&#10;22%=36380&#10;23%=36509&#10;24%=36638&#10;24%=36767&#10;25%=36896&#10;26%=37025&#10;27%=37154&#10;28%=37283&#10;28%=37412&#10;29%=37541&#10;30%=37670&#10;31%=37799&#10;31%=37928&#10;32%=38057&#10;33%=38186&#10;34%=38315&#10;35%=38444&#10;35%=38573&#10;36%=38702&#10;37%=38831&#10;38%=38960&#10;39%=39089&#10;39%=39218&#10;40%=39347&#10;41%=39476&#10;42%=39605&#10;43%=39734&#10;43%=39863&#10;44%=39992&#10;45%=40121&#10;46%=40250&#10;46%=40379&#10;47%=40508&#10;48%=40637&#10;49%=40766&#10;50%=40895&#10;50%=41024&#10;51%=41153&#10;52%=41282&#10;53%=41411&#10;54%=41540&#10;54%=41669&#10;55%=41798&#10;56%=41927&#10;57%=42056&#10;57%=42185&#10;58%=42314&#10;59%=42443&#10;60%=42572&#10;61%=42701&#10;61%=42830&#10;62%=42959&#10;63%=43088&#10;64%=43217&#10;65%=43346&#10;65%=43475&#10;66%=43604&#10;67%=43733&#10;68%=43862&#10;69%=43991&#10;69%=44120&#10;70%=44249&#10;71%=44378&#10;72%=44507&#10;72%=44636&#10;73%=44765&#10;74%=44894&#10;75%=45023&#10;76%=45152&#10;76%=45281&#10;77%=45410&#10;78%=45539&#10;79%=45668&#10;80%=45797&#10;80%=45926&#10;81%=46055&#10;82%=46184&#10;83%=46313&#10;83%=46442&#10;84%=46571&#10;85%=46700&#10;86%=46829&#10;87%=46958&#10;87%=47087&#10;88%=47216&#10;89%=47345&#10;90%=47474&#10;91%=47603&#10;91%=47732&#10;92%=47861&#10;93%=47990&#10;94%=48119&#10;94%=48248&#10;95%=48377&#10;96%=48506&#10;97%=48635&#10;98%=48764&#10;98%=48893&#10;99%=49022&#10;100%=49151"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="3" componentTabName="AlgoTab"
               uiType="uiFixedImageSlider" componentRectangle="656 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="46" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="00" modulatorCustomName="" modulatorCustomIndexGroup="64"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Delay2PositivFeedback" modulatorMin="0" modulatorValue="-1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Positiv Feedback"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0%=32768&#10;1%=32932&#10;2%=33096&#10;3%=33259&#10;4%=33423&#10;5%=33587&#10;6%=33751&#10;7%=33915&#10;8%=34079&#10;9%=34242&#10;10%=34406&#10;11%=34570&#10;12%=34734&#10;13%=34898&#10;14%=35062&#10;15%=35225&#10;16%=35389&#10;17%=35553&#10;18%=35717&#10;19%=35881&#10;20%=36045&#10;21%=36208&#10;22%=36372&#10;23%=36536&#10;24%=36700&#10;25%=36864&#10;26%=37028&#10;27%=37191&#10;28%=37355&#10;29%=37519&#10;30%=37683&#10;31%=37847&#10;32%=38011&#10;33%=38174&#10;34%=38338&#10;35%=38502&#10;36%=38666&#10;37%=38830&#10;38%=38994&#10;39%=39157&#10;40%=39321&#10;41%=39485&#10;42%=39649&#10;43%=39813&#10;44%=39977&#10;45%=40140&#10;46%=40304&#10;47%=40468&#10;48%=40632&#10;49%=40796&#10;50%=40960&#10;51%=41123&#10;52%=41287&#10;53%=41451&#10;54%=41615&#10;55%=41779&#10;56%=41942&#10;57%=42106&#10;58%=42270&#10;59%=42434&#10;60%=42598&#10;61%=42762&#10;62%=42925&#10;63%=43089&#10;64%=43253&#10;65%=43417&#10;66%=43581&#10;67%=43745&#10;68%=43908&#10;69%=44072&#10;70%=44236&#10;71%=44400&#10;72%=44564&#10;73%=44728&#10;74%=44891&#10;75%=45055&#10;76%=45219&#10;77%=45383&#10;78%=45547&#10;79%=45711&#10;80%=45874&#10;81%=46038&#10;82%=46202&#10;83%=46366&#10;84%=46530&#10;85%=46694&#10;86%=46857&#10;87%=47021&#10;88%=47185&#10;89%=47349&#10;90%=47513&#10;91%=47677&#10;92%=47840&#10;93%=48004&#10;94%=48168&#10;95%=48332&#10;96%=48496&#10;97%=48660&#10;98%=48823&#10;99%=48987&#10;100%=49151"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="32 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="4"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="128" vstIndex="47" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="01" modulatorCustomName="" modulatorCustomIndexGroup="64"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Delay2GangedDelay" modulatorMin="0" modulatorValue="29">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Ganged Delay"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0,9 ms=32768&#10;0,9 ms=32896&#10;1 ms=33024&#10;1 ms=33152&#10;1,1 ms=33280&#10;1,1 ms=33408&#10;1,2 ms=33536&#10;1,2 ms=33664&#10;1,3 ms=33792&#10;1,4 ms=33920&#10;1,4 ms=34048&#10;1,5 ms=34176&#10;1,6 ms=34304&#10;1,7 ms=34432&#10;1,8 ms=34560&#10;1,9 ms=34688&#10;2 ms=34816&#10;2,1 ms=34944&#10;2,2 ms=35072&#10;2,3 ms=35200&#10;2,4 ms=35328&#10;2,5 ms=35456&#10;2,6 ms=35584&#10;2,8 ms=35712&#10;2,9 ms=35840&#10;3,1 ms=35968&#10;3,2 ms=36096&#10;3,4 ms=36224&#10;3,6 ms=36352&#10;3,8 ms=36480&#10;4 ms=36608&#10;4,2 ms=36736&#10;4,4 ms=36864&#10;4,6 ms=36992&#10;4,9 ms=37120&#10;5,1 ms=37248&#10;5,4 ms=37376&#10;5,7 ms=37504&#10;6 ms=37632&#10;6,3 ms=37760&#10;6,6 ms=37888&#10;6,9 ms=38016&#10;7,3 ms=38144&#10;7,7 ms=38272&#10;8,1 ms=38400&#10;8,5 ms=38528&#10;8,9 ms=38656&#10;9,4 ms=38784&#10;9,9 ms=38912&#10;10,4 ms=39040&#10;10,9 ms=39168&#10;11,5 ms=39296&#10;12,1 ms=39424&#10;12,7 ms=39552&#10;13,4 ms=39680&#10;14,1 ms=39808&#10;14,8 ms=39936&#10;15,6 ms=40064&#10;16,4 ms=40192&#10;17,2 ms=40320&#10;18,1 ms=40448&#10;19,1 ms=40576&#10;20 ms=40704&#10;21,1 ms=40832&#10;22,2 ms=40960&#10;23,3 ms=41088&#10;24,5 ms=41216&#10;25,8 ms=41344&#10;27,2 ms=41472&#10;28,6 ms=41600&#10;30 ms=41728&#10;31,6 ms=41856&#10;33,2 ms=41984&#10;35 ms=42112&#10;36,8 ms=42240&#10;38,7 ms=42368&#10;40,7 ms=42496&#10;42,8 ms=42624&#10;45 ms=42752&#10;47,4 ms=42880&#10;49,8 ms=43008&#10;52,4 ms=43136&#10;55,1 ms=43264&#10;58 ms=43392&#10;61 ms=43520&#10;64,2 ms=43648&#10;67,5 ms=43776&#10;71 ms=43904&#10;74,7 ms=44032&#10;78,6 ms=44160&#10;82,7 ms=44288&#10;86,9 ms=44416&#10;91,5 ms=44544&#10;96,2 ms=44672&#10;101,2 ms=44800&#10;106,4 ms=44928&#10;112 ms=45056&#10;117,8 ms=45184&#10;123,9 ms=45312&#10;130,3 ms=45440&#10;137,1 ms=45568&#10;144,2 ms=45696&#10;151,7 ms=45824&#10;159,6 ms=45952&#10;168 ms=46080&#10;172,8 ms=46208&#10;177,5 ms=46336&#10;182,3 ms=46464&#10;187 ms=46592&#10;191,8 ms=46720&#10;196,5 ms=46848&#10;201,3 ms=46976&#10;206 ms=47104&#10;211,8 ms=47232&#10;217,5 ms=47360&#10;223,3 ms=47488&#10;229 ms=47616&#10;234,8 ms=47744&#10;240,5 ms=47872&#10;246,3 ms=48000&#10;252 ms=48128&#10;258,6 ms=48256&#10;265,3 ms=48384&#10;271,9 ms=48512&#10;278,5 ms=48640&#10;285,1 ms=48768&#10;291,8 ms=48896&#10;298,4 ms=49024&#10;305 ms=49152"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="4" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="136 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="48" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="02" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="BIDIR" modulatorVstNameFormat="%n"
             luaModulatorValueChange="chMod_Uni_ValByName" name="Delay2EffectsLevel"
             modulatorMin="0" modulatorValue="80">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Effects Level"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="54.400000000000006"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="-15" uiSliderMax="16" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="100" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0%=32768&#10;1%=32932&#10;2%=33096&#10;3%=33259&#10;4%=33423&#10;5%=33587&#10;6%=33751&#10;7%=33915&#10;8%=34079&#10;9%=34242&#10;10%=34406&#10;11%=34570&#10;12%=34734&#10;13%=34898&#10;14%=35062&#10;15%=35225&#10;16%=35389&#10;17%=35553&#10;18%=35717&#10;19%=35881&#10;20%=36045&#10;21%=36208&#10;22%=36372&#10;23%=36536&#10;24%=36700&#10;25%=36864&#10;26%=37028&#10;27%=37191&#10;28%=37355&#10;29%=37519&#10;30%=37683&#10;31%=37847&#10;32%=38011&#10;33%=38174&#10;34%=38338&#10;35%=38502&#10;36%=38666&#10;37%=38830&#10;38%=38994&#10;39%=39157&#10;40%=39321&#10;41%=39485&#10;42%=39649&#10;43%=39813&#10;44%=39977&#10;45%=40140&#10;46%=40304&#10;47%=40468&#10;48%=40632&#10;49%=40796&#10;50%=40960&#10;51%=41123&#10;52%=41287&#10;53%=41451&#10;54%=41615&#10;55%=41779&#10;56%=41942&#10;57%=42106&#10;58%=42270&#10;59%=42434&#10;60%=42598&#10;61%=42762&#10;62%=42925&#10;63%=43089&#10;64%=43253&#10;65%=43417&#10;66%=43581&#10;67%=43745&#10;68%=43908&#10;69%=44072&#10;70%=44236&#10;71%=44400&#10;72%=44564&#10;73%=44728&#10;74%=44891&#10;75%=45055&#10;76%=45219&#10;77%=45383&#10;78%=45547&#10;79%=45711&#10;80%=45874&#10;81%=46038&#10;82%=46202&#10;83%=46366&#10;84%=46530&#10;85%=46694&#10;86%=46857&#10;87%=47021&#10;88%=47185&#10;89%=47349&#10;90%=47513&#10;91%=47677&#10;92%=47840&#10;93%=48004&#10;94%=48168&#10;95%=48332&#10;96%=48496&#10;97%=48660&#10;98%=48823&#10;99%=48987&#10;100%=49150"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="4" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="240 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="511" vstIndex="49" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="03" modulatorCustomName="" modulatorCustomIndexGroup="32"
             modulatorCustomNameGroup="BIDIR" modulatorVstNameFormat="%n"
             luaModulatorValueChange="chMod_Uni_ValByName" name="Delay2Feedback"
             modulatorMin="0" modulatorValue="-1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Feedback"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="54.400000000000006"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="-15" uiSliderMax="16" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="256" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="-99 %=24608&#10;-99 %=24640&#10;-98 %=24672&#10;-98 %=24704&#10;-97 %=24736&#10;-97 %=24768&#10;-97 %=24800&#10;-96 %=24832&#10;-96 %=24864&#10;-96 %=24896&#10;-95 %=24928&#10;-95 %=24960&#10;-94 %=24992&#10;-94 %=25024&#10;-94 %=25056&#10;-93 %=25088&#10;-93 %=25120&#10;-92 %=25152&#10;-92 %=25184&#10;-92 %=25216&#10;-91 %=25248&#10;-91 %=25280&#10;-90 %=25312&#10;-90 %=25344&#10;-90 %=25376&#10;-89 %=25408&#10;-89 %=25440&#10;-89 %=25472&#10;-88 %=25504&#10;-88 %=25536&#10;-87 %=25568&#10;-87 %=25600&#10;-87 %=25632&#10;-86 %=25664&#10;-86 %=25696&#10;-85 %=25728&#10;-85 %=25760&#10;-85 %=25792&#10;-84 %=25824&#10;-84 %=25856&#10;-83 %=25888&#10;-83 %=25920&#10;-83 %=25952&#10;-82 %=25984&#10;-82 %=26016&#10;-82 %=26048&#10;-81 %=26080&#10;-81 %=26112&#10;-80 %=26144&#10;-80 %=26176&#10;-80 %=26208&#10;-79 %=26240&#10;-79 %=26272&#10;-78 %=26304&#10;-78 %=26336&#10;-78 %=26368&#10;-77 %=26400&#10;-77 %=26432&#10;-76 %=26464&#10;-76 %=26496&#10;-76 %=26528&#10;-75 %=26560&#10;-75 %=26592&#10;-75 %=26624&#10;-74 %=26656&#10;-74 %=26688&#10;-73 %=26720&#10;-73 %=26752&#10;-73 %=26784&#10;-72 %=26816&#10;-72 %=26848&#10;-71 %=26880&#10;-71 %=26912&#10;-71 %=26944&#10;-70 %=26976&#10;-70 %=27008&#10;-69 %=27040&#10;-69 %=27072&#10;-69 %=27104&#10;-68 %=27136&#10;-68 %=27168&#10;-68 %=27200&#10;-67 %=27232&#10;-67 %=27264&#10;-66 %=27296&#10;-66 %=27328&#10;-66 %=27360&#10;-65 %=27392&#10;-65 %=27424&#10;-64 %=27456&#10;-64 %=27488&#10;-64 %=27520&#10;-63 %=27552&#10;-63 %=27584&#10;-62 %=27616&#10;-62 %=27648&#10;-62 %=27680&#10;-61 %=27712&#10;-61 %=27744&#10;-61 %=27776&#10;-60 %=27808&#10;-60 %=27840&#10;-59 %=27872&#10;-59 %=27904&#10;-59 %=27936&#10;-58 %=27968&#10;-58 %=28000&#10;-57 %=28032&#10;-57 %=28064&#10;-57 %=28096&#10;-56 %=28128&#10;-56 %=28160&#10;-55 %=28192&#10;-55 %=28224&#10;-55 %=28256&#10;-54 %=28288&#10;-54 %=28320&#10;-54 %=28352&#10;-53 %=28384&#10;-53 %=28416&#10;-52 %=28448&#10;-52 %=28480&#10;-52 %=28512&#10;-51 %=28544&#10;-51 %=28576&#10;-50 %=28608&#10;-50 %=28640&#10;-50 %=28672&#10;-49 %=28704&#10;-49 %=28736&#10;-48 %=28768&#10;-48 %=28800&#10;-48 %=28832&#10;-47 %=28864&#10;-47 %=28896&#10;-47 %=28928&#10;-46 %=28960&#10;-46 %=28992&#10;-45 %=29024&#10;-45 %=29056&#10;-45 %=29088&#10;-44 %=29120&#10;-44 %=29152&#10;-43 %=29184&#10;-43 %=29216&#10;-43 %=29248&#10;-42 %=29280&#10;-42 %=29312&#10;-41 %=29344&#10;-41 %=29376&#10;-41 %=29408&#10;-40 %=29440&#10;-40 %=29472&#10;-40 %=29504&#10;-39 %=29536&#10;-39 %=29568&#10;-38 %=29600&#10;-38 %=29632&#10;-38 %=29664&#10;-37 %=29696&#10;-37 %=29728&#10;-36 %=29760&#10;-36 %=29792&#10;-36 %=29824&#10;-35 %=29856&#10;-35 %=29888&#10;-34 %=29920&#10;-34 %=29952&#10;-34 %=29984&#10;-33 %=30016&#10;-33 %=30048&#10;-33 %=30080&#10;-32 %=30112&#10;-32 %=30144&#10;-31 %=30176&#10;-31 %=30208&#10;-31 %=30240&#10;-30 %=30272&#10;-30 %=30304&#10;-29 %=30336&#10;-29 %=30368&#10;-29 %=30400&#10;-28 %=30432&#10;-28 %=30464&#10;-27 %=30496&#10;-27 %=30528&#10;-27 %=30560&#10;-26 %=30592&#10;-26 %=30624&#10;-26 %=30656&#10;-25 %=30688&#10;-25 %=30720&#10;-24 %=30752&#10;-24 %=30784&#10;-24 %=30816&#10;-23 %=30848&#10;-23 %=30880&#10;-22 %=30912&#10;-22 %=30944&#10;-22 %=30976&#10;-21 %=31008&#10;-21 %=31040&#10;-20 %=31072&#10;-20 %=31104&#10;-20 %=31136&#10;-19 %=31168&#10;-19 %=31200&#10;-19 %=31232&#10;-18 %=31264&#10;-18 %=31296&#10;-17 %=31328&#10;-17 %=31360&#10;-17 %=31392&#10;-16 %=31424&#10;-16 %=31456&#10;-15 %=31488&#10;-15 %=31520&#10;-15 %=31552&#10;-14 %=31584&#10;-14 %=31616&#10;-13 %=31648&#10;-13 %=31680&#10;-13 %=31712&#10;-12 %=31744&#10;-12 %=31776&#10;-12 %=31808&#10;-11 %=31840&#10;-11 %=31872&#10;-10 %=31904&#10;-10 %=31936&#10;-10 %=31968&#10;-9 %=32000&#10;-9 %=32032&#10;-8 %=32064&#10;-8 %=32096&#10;-8 %=32128&#10;-7 %=32160&#10;-7 %=32192&#10;-6 %=32224&#10;-6 %=32256&#10;-6 %=32288&#10;-5 %=32320&#10;-5 %=32352&#10;-5 %=32384&#10;-4 %=32416&#10;-4 %=32448&#10;-3 %=32480&#10;-3 %=32512&#10;-3 %=32544&#10;-2 %=32576&#10;-2 %=32608&#10;-1 %=32640&#10;-1 %=32672&#10;-1 %=32704&#10;0 %=32736&#10;0 %=32768&#10;1 %=32800&#10;1 %=32832&#10;1 %=32864&#10;2 %=32896&#10;2 %=32928&#10;2 %=32960&#10;3 %=32992&#10;3 %=33024&#10;4 %=33056&#10;4 %=33088&#10;4 %=33120&#10;5 %=33152&#10;5 %=33184&#10;6 %=33216&#10;6 %=33248&#10;6 %=33280&#10;7 %=33312&#10;7 %=33344&#10;7 %=33376&#10;8 %=33408&#10;8 %=33440&#10;9 %=33472&#10;9 %=33504&#10;9 %=33536&#10;10 %=33568&#10;10 %=33600&#10;11 %=33632&#10;11 %=33664&#10;11 %=33696&#10;12 %=33728&#10;12 %=33760&#10;13 %=33792&#10;13 %=33824&#10;13 %=33856&#10;14 %=33888&#10;14 %=33920&#10;14 %=33952&#10;15 %=33984&#10;15 %=34016&#10;16 %=34048&#10;16 %=34080&#10;16 %=34112&#10;17 %=34144&#10;17 %=34176&#10;18 %=34208&#10;18 %=34240&#10;18 %=34272&#10;19 %=34304&#10;19 %=34336&#10;20 %=34368&#10;20 %=34400&#10;20 %=34432&#10;21 %=34464&#10;21 %=34496&#10;21 %=34528&#10;22 %=34560&#10;22 %=34592&#10;23 %=34624&#10;23 %=34656&#10;23 %=34688&#10;24 %=34720&#10;24 %=34752&#10;25 %=34784&#10;25 %=34816&#10;25 %=34848&#10;26 %=34880&#10;26 %=34912&#10;27 %=34944&#10;27 %=34976&#10;27 %=35008&#10;28 %=35040&#10;28 %=35072&#10;28 %=35104&#10;29 %=35136&#10;29 %=35168&#10;30 %=35200&#10;30 %=35232&#10;30 %=35264&#10;31 %=35296&#10;31 %=35328&#10;32 %=35360&#10;32 %=35392&#10;32 %=35424&#10;33 %=35456&#10;33 %=35488&#10;34 %=35520&#10;34 %=35552&#10;34 %=35584&#10;35 %=35616&#10;35 %=35648&#10;35 %=35680&#10;36 %=35712&#10;36 %=35744&#10;37 %=35776&#10;37 %=35808&#10;37 %=35840&#10;38 %=35872&#10;38 %=35904&#10;39 %=35936&#10;39 %=35968&#10;39 %=36000&#10;40 %=36032&#10;40 %=36064&#10;41 %=36096&#10;41 %=36128&#10;41 %=36160&#10;42 %=36192&#10;42 %=36224&#10;42 %=36256&#10;43 %=36288&#10;43 %=36320&#10;44 %=36352&#10;44 %=36384&#10;44 %=36416&#10;45 %=36448&#10;45 %=36480&#10;46 %=36512&#10;46 %=36544&#10;46 %=36576&#10;47 %=36608&#10;47 %=36640&#10;48 %=36672&#10;48 %=36704&#10;48 %=36736&#10;49 %=36768&#10;49 %=36800&#10;49 %=36832&#10;50 %=36864&#10;50 %=36896&#10;51 %=36928&#10;51 %=36960&#10;51 %=36992&#10;52 %=37024&#10;52 %=37056&#10;53 %=37088&#10;53 %=37120&#10;53 %=37152&#10;54 %=37184&#10;54 %=37216&#10;55 %=37248&#10;55 %=37280&#10;55 %=37312&#10;56 %=37344&#10;56 %=37376&#10;56 %=37408&#10;57 %=37440&#10;57 %=37472&#10;58 %=37504&#10;58 %=37536&#10;58 %=37568&#10;59 %=37600&#10;59 %=37632&#10;60 %=37664&#10;60 %=37696&#10;60 %=37728&#10;61 %=37760&#10;61 %=37792&#10;62 %=37824&#10;62 %=37856&#10;62 %=37888&#10;63 %=37920&#10;63 %=37952&#10;63 %=37984&#10;64 %=38016&#10;64 %=38048&#10;65 %=38080&#10;65 %=38112&#10;65 %=38144&#10;66 %=38176&#10;66 %=38208&#10;67 %=38240&#10;67 %=38272&#10;67 %=38304&#10;68 %=38336&#10;68 %=38368&#10;69 %=38400&#10;69 %=38432&#10;69 %=38464&#10;70 %=38496&#10;70 %=38528&#10;70 %=38560&#10;71 %=38592&#10;71 %=38624&#10;72 %=38656&#10;72 %=38688&#10;72 %=38720&#10;73 %=38752&#10;73 %=38784&#10;74 %=38816&#10;74 %=38848&#10;74 %=38880&#10;75 %=38912&#10;75 %=38944&#10;76 %=38976&#10;76 %=39008&#10;76 %=39040&#10;77 %=39072&#10;77 %=39104&#10;77 %=39136&#10;78 %=39168&#10;78 %=39200&#10;79 %=39232&#10;79 %=39264&#10;79 %=39296&#10;80 %=39328&#10;80 %=39360&#10;81 %=39392&#10;81 %=39424&#10;81 %=39456&#10;82 %=39488&#10;82 %=39520&#10;83 %=39552&#10;83 %=39584&#10;83 %=39616&#10;84 %=39648&#10;84 %=39680&#10;84 %=39712&#10;85 %=39744&#10;85 %=39776&#10;86 %=39808&#10;86 %=39840&#10;86 %=39872&#10;87 %=39904&#10;87 %=39936&#10;88 %=39968&#10;88 %=40000&#10;88 %=40032&#10;89 %=40064&#10;89 %=40096&#10;90 %=40128&#10;90 %=40160&#10;90 %=40192&#10;91 %=40224&#10;91 %=40256&#10;91 %=40288&#10;92 %=40320&#10;92 %=40352&#10;93 %=40384&#10;93 %=40416&#10;93 %=40448&#10;94 %=40480&#10;94 %=40512&#10;95 %=40544&#10;95 %=40576&#10;95 %=40608&#10;96 %=40640&#10;96 %=40672&#10;97 %=40704&#10;97 %=40736&#10;97 %=40768&#10;98 %=40800&#10;98 %=40832&#10;98 %=40864&#10;99 %=40896&#10;99 %=40928&#10;99 %=40960"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="2df24869af040000feffffffffffffff"
               componentRectangle="344 16 100 70" uiType="uiFixedImageSlider"
               componentTabName="AlgoTab" componentTabId="4"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="128" vstIndex="50" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="04" modulatorCustomName="" modulatorCustomIndexGroup="64"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Delay2LeftDelay" modulatorMin="0" modulatorValue="14">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Left Delay"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0 ms=32768&#10;8 ms=32896&#10;16 ms=33024&#10;24 ms=33152&#10;32 ms=33280&#10;40 ms=33408&#10;48 ms=33536&#10;56 ms=33664&#10;64 ms=33792&#10;72 ms=33920&#10;80 ms=34048&#10;88 ms=34176&#10;96 ms=34304&#10;104 ms=34432&#10;112 ms=34560&#10;120 ms=34688&#10;128 ms=34816&#10;136 ms=34944&#10;144 ms=35072&#10;152 ms=35200&#10;160 ms=35328&#10;168 ms=35456&#10;176 ms=35584&#10;184 ms=35712&#10;192 ms=35840&#10;200 ms=35968&#10;208 ms=36096&#10;216 ms=36224&#10;224 ms=36352&#10;232 ms=36480&#10;240 ms=36608&#10;248 ms=36736&#10;256 ms=36864&#10;264 ms=36992&#10;272 ms=37120&#10;280 ms=37248&#10;288 ms=37376&#10;296 ms=37504&#10;304 ms=37632&#10;312 ms=37760&#10;320 ms=37888&#10;328 ms=38016&#10;336 ms=38144&#10;344 ms=38272&#10;352 ms=38400&#10;360 ms=38528&#10;368 ms=38656&#10;376 ms=38784&#10;384 ms=38912&#10;392 ms=39040&#10;400 ms=39168&#10;408 ms=39296&#10;416 ms=39424&#10;424 ms=39552&#10;432 ms=39680&#10;440 ms=39808&#10;448 ms=39936&#10;456 ms=40064&#10;464 ms=40192&#10;472 ms=40320&#10;480 ms=40448&#10;488 ms=40576&#10;496 ms=40704&#10;504 ms=40832&#10;512 ms=40960&#10;520 ms=41088&#10;528 ms=41216&#10;536 ms=41344&#10;544 ms=41472&#10;552 ms=41600&#10;560 ms=41728&#10;568 ms=41856&#10;576 ms=41984&#10;584 ms=42112&#10;592 ms=42240&#10;600 ms=42368&#10;608 ms=42496&#10;616 ms=42624&#10;624 ms=42752&#10;632 ms=42880&#10;640 ms=43008&#10;648 ms=43136&#10;656 ms=43264&#10;664 ms=43392&#10;672 ms=43520&#10;680 ms=43648&#10;688 ms=43776&#10;696 ms=43904&#10;704 ms=44032&#10;712 ms=44160&#10;720 ms=44288&#10;728 ms=44416&#10;736 ms=44544&#10;744 ms=44672&#10;752 ms=44800&#10;760 ms=44928&#10;768 ms=45056&#10;776 ms=45184&#10;784 ms=45312&#10;792 ms=45440&#10;800 ms=45568&#10;808 ms=45696&#10;816 ms=45824&#10;824 ms=45952&#10;832 ms=46080&#10;840 ms=46208&#10;848 ms=46336&#10;856 ms=46464&#10;864 ms=46592&#10;872 ms=46720&#10;880 ms=46848&#10;888 ms=46976&#10;896 ms=47104&#10;904 ms=47232&#10;912 ms=47360&#10;920 ms=47488&#10;928 ms=47616&#10;936 ms=47744&#10;944 ms=47872&#10;952 ms=48000&#10;960 ms=48128&#10;968 ms=48256&#10;976 ms=48384&#10;984 ms=48512&#10;992 ms=48640&#10;1000 ms=48768&#10;1008 ms=48896&#10;1016 ms=49024&#10;1024 ms=49152"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="4" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="448 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="128" vstIndex="51" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="05" modulatorCustomName="" modulatorCustomIndexGroup="64"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Delay2RightDelay" modulatorMin="0" modulatorValue="20">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Right Delay"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0 ms=32768&#10;8 ms=32896&#10;16 ms=33024&#10;24 ms=33152&#10;32 ms=33280&#10;40 ms=33408&#10;48 ms=33536&#10;56 ms=33664&#10;64 ms=33792&#10;72 ms=33920&#10;80 ms=34048&#10;88 ms=34176&#10;96 ms=34304&#10;104 ms=34432&#10;112 ms=34560&#10;120 ms=34688&#10;128 ms=34816&#10;136 ms=34944&#10;144 ms=35072&#10;152 ms=35200&#10;160 ms=35328&#10;168 ms=35456&#10;176 ms=35584&#10;184 ms=35712&#10;192 ms=35840&#10;200 ms=35968&#10;208 ms=36096&#10;216 ms=36224&#10;224 ms=36352&#10;232 ms=36480&#10;240 ms=36608&#10;248 ms=36736&#10;256 ms=36864&#10;264 ms=36992&#10;272 ms=37120&#10;280 ms=37248&#10;288 ms=37376&#10;296 ms=37504&#10;304 ms=37632&#10;312 ms=37760&#10;320 ms=37888&#10;328 ms=38016&#10;336 ms=38144&#10;344 ms=38272&#10;352 ms=38400&#10;360 ms=38528&#10;368 ms=38656&#10;376 ms=38784&#10;384 ms=38912&#10;392 ms=39040&#10;400 ms=39168&#10;408 ms=39296&#10;416 ms=39424&#10;424 ms=39552&#10;432 ms=39680&#10;440 ms=39808&#10;448 ms=39936&#10;456 ms=40064&#10;464 ms=40192&#10;472 ms=40320&#10;480 ms=40448&#10;488 ms=40576&#10;496 ms=40704&#10;504 ms=40832&#10;512 ms=40960&#10;520 ms=41088&#10;528 ms=41216&#10;536 ms=41344&#10;544 ms=41472&#10;552 ms=41600&#10;560 ms=41728&#10;568 ms=41856&#10;576 ms=41984&#10;584 ms=42112&#10;592 ms=42240&#10;600 ms=42368&#10;608 ms=42496&#10;616 ms=42624&#10;624 ms=42752&#10;632 ms=42880&#10;640 ms=43008&#10;648 ms=43136&#10;656 ms=43264&#10;664 ms=43392&#10;672 ms=43520&#10;680 ms=43648&#10;688 ms=43776&#10;696 ms=43904&#10;704 ms=44032&#10;712 ms=44160&#10;720 ms=44288&#10;728 ms=44416&#10;736 ms=44544&#10;744 ms=44672&#10;752 ms=44800&#10;760 ms=44928&#10;768 ms=45056&#10;776 ms=45184&#10;784 ms=45312&#10;792 ms=45440&#10;800 ms=45568&#10;808 ms=45696&#10;816 ms=45824&#10;824 ms=45952&#10;832 ms=46080&#10;840 ms=46208&#10;848 ms=46336&#10;856 ms=46464&#10;864 ms=46592&#10;872 ms=46720&#10;880 ms=46848&#10;888 ms=46976&#10;896 ms=47104&#10;904 ms=47232&#10;912 ms=47360&#10;920 ms=47488&#10;928 ms=47616&#10;936 ms=47744&#10;944 ms=47872&#10;952 ms=48000&#10;960 ms=48128&#10;968 ms=48256&#10;976 ms=48384&#10;984 ms=48512&#10;992 ms=48640&#10;1000 ms=48768&#10;1008 ms=48896&#10;1016 ms=49024&#10;1024 ms=49152"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="4" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="552 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="16" vstIndex="52" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="07" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Delay2HiFreqCut" modulatorMin="0" modulatorValue="-1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Hi Freq Cut"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="16" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="321 Hz=32768&#10;1,16 kHz=33792&#10;2,01 kHz=34816&#10;2,85 kHz=35840&#10;3,69 kHz=36864&#10;4,53 kHz=37888&#10;5,38 kHz=38912&#10;6,22 kHz=39936&#10;7,06 kHz=40960&#10;7,9 kHz=41984&#10;8,75 kHz=43008&#10;9,59 kHz=44032&#10;10,43 kHz=45056&#10;11,27 kHz=46080&#10;12,12 kHz=47104&#10;12,96 kHz=48128&#10;13,8 kHz=49152"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="656 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="4"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="128" vstIndex="53" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="08" modulatorCustomName="" modulatorCustomIndexGroup="64"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Delay2Diffusion" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Diffusion"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="64" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0=32768&#10;1=32896&#10;2=33024&#10;2=33152&#10;3=33280&#10;4=33408&#10;5=33536&#10;5=33664&#10;6=33792&#10;7=33920&#10;8=34048&#10;9=34176&#10;9=34304&#10;10=34432&#10;11=34560&#10;12=34688&#10;13=34816&#10;13=34944&#10;14=35072&#10;15=35200&#10;16=35328&#10;16=35456&#10;17=35584&#10;18=35712&#10;19=35840&#10;20=35968&#10;20=36096&#10;21=36224&#10;22=36352&#10;23=36480&#10;23=36608&#10;24=36736&#10;25=36864&#10;26=36992&#10;27=37120&#10;27=37248&#10;28=37376&#10;29=37504&#10;30=37632&#10;30=37760&#10;31=37888&#10;32=38016&#10;33=38144&#10;34=38272&#10;34=38400&#10;35=38528&#10;36=38656&#10;37=38784&#10;38=38912&#10;38=39040&#10;39=39168&#10;40=39296&#10;41=39424&#10;41=39552&#10;42=39680&#10;43=39808&#10;44=39936&#10;45=40064&#10;45=40192&#10;46=40320&#10;47=40448&#10;48=40576&#10;48=40704&#10;49=40832&#10;50=40960&#10;51=41088&#10;52=41216&#10;52=41344&#10;53=41472&#10;54=41600&#10;55=41728&#10;55=41856&#10;56=41984&#10;57=42112&#10;58=42240&#10;59=42368&#10;59=42496&#10;60=42624&#10;61=42752&#10;62=42880&#10;63=43008&#10;63=43136&#10;64=43264&#10;65=43392&#10;66=43520&#10;66=43648&#10;67=43776&#10;68=43904&#10;69=44032&#10;70=44160&#10;70=44288&#10;71=44416&#10;72=44544&#10;73=44672&#10;73=44800&#10;74=44928&#10;75=45056&#10;76=45184&#10;77=45312&#10;77=45440&#10;78=45568&#10;79=45696&#10;80=45824&#10;80=45952&#10;81=46080&#10;82=46208&#10;83=46336&#10;84=46464&#10;84=46592&#10;85=46720&#10;86=46848&#10;87=46976&#10;88=47104&#10;88=47232&#10;89=47360&#10;90=47488&#10;91=47616&#10;91=47744&#10;92=47872&#10;93=48000&#10;94=48128&#10;95=48256&#10;95=48384&#10;96=48512&#10;97=48640&#10;98=48768&#10;98=48896&#10;99=49024&#10;100=49152"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="760 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="4"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="54" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="02" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="BIDIR" modulatorVstNameFormat="%n"
             luaModulatorValueChange="chMod_Uni_ValByName" name="Chorus2EffectsLevel"
             modulatorMin="0" modulatorValue="80">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Effects Level"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="54.400000000000006"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="-15" uiSliderMax="16" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="100" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0%=32768&#10;1%=32932&#10;2%=33096&#10;3%=33259&#10;4%=33423&#10;5%=33587&#10;6%=33751&#10;7%=33915&#10;8%=34079&#10;9%=34242&#10;10%=34406&#10;11%=34570&#10;12%=34734&#10;13%=34898&#10;14%=35062&#10;15%=35225&#10;16%=35389&#10;17%=35553&#10;18%=35717&#10;19%=35881&#10;20%=36045&#10;21%=36208&#10;22%=36372&#10;23%=36536&#10;24%=36700&#10;25%=36864&#10;26%=37028&#10;27%=37191&#10;28%=37355&#10;29%=37519&#10;30%=37683&#10;31%=37847&#10;32%=38011&#10;33%=38174&#10;34%=38338&#10;35%=38502&#10;36%=38666&#10;37%=38830&#10;38%=38994&#10;39%=39157&#10;40%=39321&#10;41%=39485&#10;42%=39649&#10;43%=39813&#10;44%=39977&#10;45%=40140&#10;46%=40304&#10;47%=40468&#10;48%=40632&#10;49%=40796&#10;50%=40960&#10;51%=41123&#10;52%=41287&#10;53%=41451&#10;54%=41615&#10;55%=41779&#10;56%=41942&#10;57%=42106&#10;58%=42270&#10;59%=42434&#10;60%=42598&#10;61%=42762&#10;62%=42925&#10;63%=43089&#10;64%=43253&#10;65%=43417&#10;66%=43581&#10;67%=43745&#10;68%=43908&#10;69%=44072&#10;70%=44236&#10;71%=44400&#10;72%=44564&#10;73%=44728&#10;74%=44891&#10;75%=45055&#10;76%=45219&#10;77%=45383&#10;78%=45547&#10;79%=45711&#10;80%=45874&#10;81%=46038&#10;82%=46202&#10;83%=46366&#10;84%=46530&#10;85%=46694&#10;86%=46857&#10;87%=47021&#10;88%=47185&#10;89%=47349&#10;90%=47513&#10;91%=47677&#10;92%=47840&#10;93%=48004&#10;94%=48168&#10;95%=48332&#10;96%=48496&#10;97%=48660&#10;98%=48823&#10;99%=48987&#10;100%=49151"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="32 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="5"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="255" vstIndex="55" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="03" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Chorus2Predelay" modulatorMin="0" modulatorValue="-1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Predelay"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0 ms=32768&#10;2 ms=32832&#10;4 ms=32896&#10;6 ms=32960&#10;8 ms=33024&#10;10 ms=33088&#10;12 ms=33152&#10;14 ms=33216&#10;16 ms=33280&#10;18 ms=33344&#10;21 ms=33408&#10;23 ms=33472&#10;25 ms=33536&#10;27 ms=33600&#10;29 ms=33664&#10;31 ms=33728&#10;33 ms=33792&#10;35 ms=33856&#10;37 ms=33920&#10;39 ms=33984&#10;41 ms=34048&#10;43 ms=34112&#10;45 ms=34176&#10;47 ms=34240&#10;49 ms=34304&#10;51 ms=34368&#10;53 ms=34432&#10;55 ms=34496&#10;58 ms=34560&#10;60 ms=34624&#10;62 ms=34688&#10;64 ms=34752&#10;66 ms=34816&#10;68 ms=34880&#10;70 ms=34944&#10;72 ms=35008&#10;74 ms=35072&#10;76 ms=35136&#10;78 ms=35200&#10;80 ms=35264&#10;82 ms=35328&#10;84 ms=35392&#10;86 ms=35456&#10;88 ms=35520&#10;90 ms=35584&#10;92 ms=35648&#10;95 ms=35712&#10;97 ms=35776&#10;99 ms=35840&#10;101 ms=35904&#10;103 ms=35968&#10;105 ms=36032&#10;107 ms=36096&#10;109 ms=36160&#10;111 ms=36224&#10;113 ms=36288&#10;115 ms=36352&#10;117 ms=36416&#10;119 ms=36480&#10;121 ms=36544&#10;123 ms=36608&#10;125 ms=36672&#10;127 ms=36736&#10;129 ms=36800&#10;132 ms=36864&#10;134 ms=36928&#10;136 ms=36992&#10;138 ms=37056&#10;140 ms=37120&#10;142 ms=37184&#10;144 ms=37248&#10;146 ms=37312&#10;148 ms=37376&#10;150 ms=37440&#10;152 ms=37504&#10;154 ms=37568&#10;156 ms=37632&#10;158 ms=37696&#10;160 ms=37760&#10;162 ms=37824&#10;164 ms=37888&#10;166 ms=37952&#10;169 ms=38016&#10;171 ms=38080&#10;173 ms=38144&#10;175 ms=38208&#10;177 ms=38272&#10;179 ms=38336&#10;181 ms=38400&#10;183 ms=38464&#10;185 ms=38528&#10;187 ms=38592&#10;189 ms=38656&#10;191 ms=38720&#10;193 ms=38784&#10;195 ms=38848&#10;197 ms=38912&#10;199 ms=38976&#10;201 ms=39040&#10;203 ms=39104&#10;205 ms=39168&#10;208 ms=39232&#10;210 ms=39296&#10;212 ms=39360&#10;214 ms=39424&#10;216 ms=39488&#10;218 ms=39552&#10;220 ms=39616&#10;222 ms=39680&#10;224 ms=39744&#10;226 ms=39808&#10;228 ms=39872&#10;230 ms=39936&#10;232 ms=40000&#10;234 ms=40064&#10;236 ms=40128&#10;238 ms=40192&#10;240 ms=40256&#10;242 ms=40320&#10;245 ms=40384&#10;247 ms=40448&#10;249 ms=40512&#10;251 ms=40576&#10;253 ms=40640&#10;255 ms=40704&#10;257 ms=40768&#10;259 ms=40832&#10;261 ms=40896&#10;263 ms=40960&#10;265 ms=41024&#10;267 ms=41088&#10;269 ms=41152&#10;271 ms=41216&#10;273 ms=41280&#10;275 ms=41344&#10;277 ms=41408&#10;279 ms=41472&#10;282 ms=41536&#10;284 ms=41600&#10;286 ms=41664&#10;288 ms=41728&#10;290 ms=41792&#10;292 ms=41856&#10;294 ms=41920&#10;296 ms=41984&#10;298 ms=42048&#10;300 ms=42112&#10;302 ms=42176&#10;304 ms=42240&#10;306 ms=42304&#10;308 ms=42368&#10;310 ms=42432&#10;312 ms=42496&#10;314 ms=42560&#10;316 ms=42624&#10;319 ms=42688&#10;321 ms=42752&#10;323 ms=42816&#10;325 ms=42880&#10;327 ms=42944&#10;329 ms=43008&#10;331 ms=43072&#10;333 ms=43136&#10;335 ms=43200&#10;337 ms=43264&#10;339 ms=43328&#10;341 ms=43392&#10;343 ms=43456&#10;345 ms=43520&#10;347 ms=43584&#10;349 ms=43648&#10;351 ms=43712&#10;353 ms=43776&#10;355 ms=43840&#10;358 ms=43904&#10;360 ms=43968&#10;362 ms=44032&#10;364 ms=44096&#10;366 ms=44160&#10;368 ms=44224&#10;370 ms=44288&#10;372 ms=44352&#10;374 ms=44416&#10;376 ms=44480&#10;378 ms=44544&#10;380 ms=44608&#10;382 ms=44672&#10;384 ms=44736&#10;386 ms=44800&#10;388 ms=44864&#10;390 ms=44928&#10;392 ms=44992&#10;395 ms=45056&#10;397 ms=45120&#10;399 ms=45184&#10;401 ms=45248&#10;403 ms=45312&#10;405 ms=45376&#10;407 ms=45440&#10;409 ms=45504&#10;411 ms=45568&#10;413 ms=45632&#10;415 ms=45696&#10;417 ms=45760&#10;419 ms=45824&#10;421 ms=45888&#10;423 ms=45952&#10;425 ms=46016&#10;427 ms=46080&#10;429 ms=46144&#10;432 ms=46208&#10;434 ms=46272&#10;436 ms=46336&#10;438 ms=46400&#10;440 ms=46464&#10;442 ms=46528&#10;444 ms=46592&#10;446 ms=46656&#10;448 ms=46720&#10;450 ms=46784&#10;452 ms=46848&#10;454 ms=46912&#10;456 ms=46976&#10;458 ms=47040&#10;460 ms=47104&#10;462 ms=47168&#10;464 ms=47232&#10;466 ms=47296&#10;469 ms=47360&#10;471 ms=47424&#10;473 ms=47488&#10;475 ms=47552&#10;477 ms=47616&#10;479 ms=47680&#10;481 ms=47744&#10;483 ms=47808&#10;485 ms=47872&#10;487 ms=47936&#10;489 ms=48000&#10;491 ms=48064&#10;493 ms=48128&#10;495 ms=48192&#10;497 ms=48256&#10;499 ms=48320&#10;501 ms=48384&#10;503 ms=48448&#10;506 ms=48512&#10;508 ms=48576&#10;510 ms=48640&#10;512 ms=48704&#10;514 ms=48768&#10;516 ms=48832&#10;518 ms=48896&#10;520 ms=48960&#10;522 ms=49024&#10;524 ms=49088"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="136 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="5"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="128" vstIndex="56" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="04" modulatorCustomName="" modulatorCustomIndexGroup="64"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Chorus2LoFreqCut" modulatorMin="0" modulatorValue="27">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Lo Freq Cut"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="128" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="20 Hz=32768&#10;125 Hz=32896&#10;230 Hz=33024&#10;335 Hz=33152&#10;441 Hz=33280&#10;546 Hz=33408&#10;651 Hz=33536&#10;757 Hz=33664&#10;862 Hz=33792&#10;967 Hz=33920&#10;1,1 kHz=34048&#10;1,2 kHz=34176&#10;1,3 kHz=34304&#10;1,4 kHz=34432&#10;1,5 kHz=34560&#10;1,6 kHz=34688&#10;1,7 kHz=34816&#10;1,8 kHz=34944&#10;1,9 kHz=35072&#10;2 kHz=35200&#10;2,1 kHz=35328&#10;2,2 kHz=35456&#10;2,3 kHz=35584&#10;2,4 kHz=35712&#10;2,5 kHz=35840&#10;2,7 kHz=35968&#10;2,8 kHz=36096&#10;2,9 kHz=36224&#10;3 kHz=36352&#10;3,1 kHz=36480&#10;3,2 kHz=36608&#10;3,3 kHz=36736&#10;3,4 kHz=36864&#10;3,5 kHz=36992&#10;3,6 kHz=37120&#10;3,7 kHz=37248&#10;3,8 kHz=37376&#10;3,9 kHz=37504&#10;4 kHz=37632&#10;4,1 kHz=37760&#10;4,2 kHz=37888&#10;4,3 kHz=38016&#10;4,4 kHz=38144&#10;4,5 kHz=38272&#10;4,7 kHz=38400&#10;4,8 kHz=38528&#10;4,9 kHz=38656&#10;5 kHz=38784&#10;5,1 kHz=38912&#10;5,2 kHz=39040&#10;5,3 kHz=39168&#10;5,4 kHz=39296&#10;5,5 kHz=39424&#10;5,6 kHz=39552&#10;5,7 kHz=39680&#10;5,8 kHz=39808&#10;5,9 kHz=39936&#10;6 kHz=40064&#10;6,1 kHz=40192&#10;6,2 kHz=40320&#10;6,3 kHz=40448&#10;6,4 kHz=40576&#10;6,5 kHz=40704&#10;6,7 kHz=40832&#10;6,8 kHz=40960&#10;6,9 kHz=41088&#10;7 kHz=41216&#10;7,1 kHz=41344&#10;7,2 kHz=41472&#10;7,3 kHz=41600&#10;7,4 kHz=41728&#10;7,5 kHz=41856&#10;7,6 kHz=41984&#10;7,7 kHz=42112&#10;7,8 kHz=42240&#10;7,9 kHz=42368&#10;8 kHz=42496&#10;8,1 kHz=42624&#10;8,2 kHz=42752&#10;8,3 kHz=42880&#10;8,4 kHz=43008&#10;8,6 kHz=43136&#10;8,7 kHz=43264&#10;8,8 kHz=43392&#10;8,9 kHz=43520&#10;9 kHz=43648&#10;9,1 kHz=43776&#10;9,2 kHz=43904&#10;9,3 kHz=44032&#10;9,4 kHz=44160&#10;9,5 kHz=44288&#10;9,6 kHz=44416&#10;9,7 kHz=44544&#10;9,8 kHz=44672&#10;9,9 kHz=44800&#10;10 kHz=44928&#10;10,1 kHz=45056&#10;10,2 kHz=45184&#10;10,3 kHz=45312&#10;10,4 kHz=45440&#10;10,6 kHz=45568&#10;10,7 kHz=45696&#10;10,8 kHz=45824&#10;10,9 kHz=45952&#10;11 kHz=46080&#10;11,1 kHz=46208&#10;11,2 kHz=46336&#10;11,3 kHz=46464&#10;11,4 kHz=46592&#10;11,5 kHz=46720&#10;11,6 kHz=46848&#10;11,7 kHz=46976&#10;11,8 kHz=47104&#10;11,9 kHz=47232&#10;12 kHz=47360&#10;12,1 kHz=47488&#10;12,2 kHz=47616&#10;12,3 kHz=47744&#10;12,4 kHz=47872&#10;12,6 kHz=48000&#10;12,7 kHz=48128&#10;12,8 kHz=48256&#10;12,9 kHz=48384&#10;13 kHz=48512&#10;13,1 kHz=48640&#10;13,2 kHz=48768&#10;13,3 kHz=48896&#10;13,4 kHz=49024&#10;13,5 kHz=49152"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="5" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="240 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="16" vstIndex="57" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="05" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Chorus2Shimmer" modulatorMin="0" modulatorValue="-1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Shimmer"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0,12 s=32768&#10;0,24 s=33792&#10;0,36 s=34816&#10;0,48 s=35840&#10;0,6 s=36864&#10;0,72 s=37888&#10;0,84 s=38912&#10;0,96 s=39936&#10;1,08 s=40960&#10;1,2 s=41984&#10;1,32 s=43008&#10;1,44 s=44032&#10;1,56 s=45056&#10;1,68 s=46080&#10;1,8 s=47104&#10;1,92 s=48128&#10;2,04 s=49152"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="5" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="344 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="58" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="06" modulatorCustomName="" modulatorCustomIndexGroup="1680"
             modulatorCustomNameGroup="BIDIR" modulatorVstNameFormat="%n"
             luaModulatorValueChange="chMod_Uni_ValByName" name="Chorus2MstrResonance"
             modulatorMin="0" modulatorValue="-1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Mstr Resonance"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="54.400000000000006"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="-15" uiSliderMax="16" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="31" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="-31=16896&#10;-30=17408&#10;-29=17920&#10;-28=18432&#10;-27=18944&#10;-26=19456&#10;-25=19968&#10;-24=20480&#10;-23=20992&#10;-22=21504&#10;-21=22016&#10;-20=22528&#10;-19=23040&#10;-18=23552&#10;-17=24064&#10;-16=24576&#10;-15=25088&#10;-14=25600&#10;-13=26112&#10;-12=26624&#10;-11=27136&#10;-10=27648&#10;-9=28160&#10;-8=28672&#10;-7=29184&#10;-6=29696&#10;-5=30208&#10;-4=30720&#10;-3=31232&#10;-2=31744&#10;-1=32256&#10;0=32768&#10;1=33280&#10;2=33792&#10;3=34304&#10;4=34816&#10;5=35328&#10;6=35840&#10;7=36352&#10;8=36864&#10;9=37376&#10;10=37888&#10;11=38400&#10;12=38912&#10;13=39424&#10;14=39936&#10;15=40448&#10;16=40960&#10;17=41472&#10;18=41984&#10;19=42496&#10;20=43008&#10;21=43520&#10;22=44032&#10;23=44544&#10;24=45056&#10;25=45568&#10;26=46080&#10;27=46592&#10;28=47104&#10;29=47616&#10;30=48128&#10;31=48640&#10;32=49152"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="5" componentTabName="AlgoTab"
               uiType="uiFixedImageSlider" componentRectangle="448 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="16" vstIndex="59" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="07" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Chorus2Richness" modulatorMin="0" modulatorValue="-1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Richness"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0 cents=32768&#10;8 cents=33792&#10;16 cents=34816&#10;24 cents=35840&#10;32 cents=36864&#10;40 cents=37888&#10;48 cents=38912&#10;56 cents=39936&#10;64 cents=40960&#10;72 cents=41984&#10;80 cents=43008&#10;88 cents=44032&#10;96 cents=45056&#10;104 cents=46080&#10;112 cents=47104&#10;120 cents=48128&#10;128 cents=49152"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="5" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="552 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="30" vstIndex="60" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="08" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Chorus2Slope" modulatorMin="0" modulatorValue="10">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Slope"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="15" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="-15=32768&#10;-14=33280&#10;-13=33792&#10;-12=34304&#10;-11=34816&#10;-10=35328&#10;-9=35840&#10;-8=36352&#10;-7=36864&#10;-6=37376&#10;-5=37888&#10;-4=38400&#10;-3=38912&#10;-2=39424&#10;-1=39936&#10;0=40448&#10;1=40960&#10;2=41472&#10;3=41984&#10;4=42496&#10;5=43008&#10;6=43520&#10;7=44032&#10;8=44544&#10;9=45056&#10;10=45568&#10;11=46080&#10;12=46592&#10;13=47104&#10;14=47616&#10;15=48128"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="5" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="656 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="61" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="09" modulatorCustomName="" modulatorCustomIndexGroup="1680"
             modulatorCustomNameGroup="BIDIR" modulatorVstNameFormat="%n"
             luaModulatorValueChange="chMod_Uni_ValByName" name="Chorus2Tuning"
             modulatorMin="0" modulatorValue="-1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Tuning"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="54.400000000000006"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="-15" uiSliderMax="16" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="64" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="-8 semitones=16384&#10;-7,875 semitones=16640&#10;-7,75 semitones=16896&#10;-7,625 semitones=17152&#10;-7,5 semitones=17408&#10;-7,375 semitones=17664&#10;-7,25 semitones=17920&#10;-7,125 semitones=18176&#10;-7 semitones=18432&#10;-6,875 semitones=18688&#10;-6,75 semitones=18944&#10;-6,625 semitones=19200&#10;-6,5 semitones=19456&#10;-6,375 semitones=19712&#10;-6,25 semitones=19968&#10;-6,125 semitones=20224&#10;-6 semitones=20480&#10;-5,875 semitones=20736&#10;-5,75 semitones=20992&#10;-5,625 semitones=21248&#10;-5,5 semitones=21504&#10;-5,375 semitones=21760&#10;-5,25 semitones=22016&#10;-5,125 semitones=22272&#10;-5 semitones=22528&#10;-4,875 semitones=22784&#10;-4,75 semitones=23040&#10;-4,625 semitones=23296&#10;-4,5 semitones=23552&#10;-4,375 semitones=23808&#10;-4,25 semitones=24064&#10;-4,125 semitones=24320&#10;-4 semitones=24576&#10;-3,875 semitones=24832&#10;-3,75 semitones=25088&#10;-3,625 semitones=25344&#10;-3,5 semitones=25600&#10;-3,375 semitones=25856&#10;-3,25 semitones=26112&#10;-3,125 semitones=26368&#10;-3 semitones=26624&#10;-2,875 semitones=26880&#10;-2,75 semitones=27136&#10;-2,625 semitones=27392&#10;-2,5 semitones=27648&#10;-2,375 semitones=27904&#10;-2,25 semitones=28160&#10;-2,125 semitones=28416&#10;-2 semitones=28672&#10;-1,875 semitones=28928&#10;-1,75 semitones=29184&#10;-1,625 semitones=29440&#10;-1,5 semitones=29696&#10;-1,375 semitones=29952&#10;-1,25 semitones=30208&#10;-1,125 semitones=30464&#10;-1 semitones=30720&#10;-0,875 semitones=30976&#10;-0,75 semitones=31232&#10;-0,625 semitones=31488&#10;-0,5 semitones=31744&#10;-0,375 semitones=32000&#10;-0,25 semitones=32256&#10;-0,125 semitones=32512&#10;0 semitones=32768&#10;0,125 semitones=33024&#10;0,25 semitones=33280&#10;0,375 semitones=33536&#10;0,5 semitones=33792&#10;0,625 semitones=34048&#10;0,75 semitones=34304&#10;0,875 semitones=34560&#10;1 semitones=34816&#10;1,125 semitones=35072&#10;1,25 semitones=35328&#10;1,375 semitones=35584&#10;1,5 semitones=35840&#10;1,625 semitones=36096&#10;1,75 semitones=36352&#10;1,875 semitones=36608&#10;2 semitones=36864&#10;2,125 semitones=37120&#10;2,25 semitones=37376&#10;2,375 semitones=37632&#10;2,5 semitones=37888&#10;2,625 semitones=38144&#10;2,75 semitones=38400&#10;2,875 semitones=38656&#10;3 semitones=38912&#10;3,125 semitones=39168&#10;3,25 semitones=39424&#10;3,375 semitones=39680&#10;3,5 semitones=39936&#10;3,625 semitones=40192&#10;3,75 semitones=40448&#10;3,875 semitones=40704&#10;4 semitones=40960&#10;4,125 semitones=41216&#10;4,25 semitones=41472&#10;4,375 semitones=41728&#10;4,5 semitones=41984&#10;4,625 semitones=42240&#10;4,75 semitones=42496&#10;4,875 semitones=42752&#10;5 semitones=43008&#10;5,125 semitones=43264&#10;5,25 semitones=43520&#10;5,375 semitones=43776&#10;5,5 semitones=44032&#10;5,625 semitones=44288&#10;5,75 semitones=44544&#10;5,875 semitones=44800&#10;6 semitones=45056&#10;6,125 semitones=45312&#10;6,25 semitones=45568&#10;6,375 semitones=45824&#10;6,5 semitones=46080&#10;6,625 semitones=46336&#10;6,75 semitones=46592&#10;6,875 semitones=46848&#10;7 semitones=47104&#10;7,125 semitones=47360&#10;7,25 semitones=47616&#10;7,375 semitones=47872&#10;7,5 semitones=48128&#10;7,625 semitones=48384&#10;7,75 semitones=48640&#10;7,875 semitones=48896"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="2df24869af040000feffffffffffffff"
               componentRectangle="760 16 100 70" uiType="uiFixedImageSlider"
               componentTabName="AlgoTab" componentTabId="5"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="31" vstIndex="62" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="00" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="InverseSize" modulatorMin="0" modulatorValue="7">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Size"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="1=32768&#10;2=33280&#10;3=33792&#10;4=34304&#10;5=34816&#10;6=35328&#10;7=35840&#10;8=36352&#10;9=36864&#10;10=37376&#10;11=37888&#10;12=38400&#10;13=38912&#10;14=39424&#10;15=39936&#10;16=40448&#10;17=40960&#10;18=41472&#10;19=41984&#10;20=42496&#10;21=43008&#10;22=43520&#10;23=44032&#10;24=44544&#10;25=45056&#10;26=45568&#10;27=46080&#10;28=46592&#10;29=47104&#10;30=47616&#10;31=48128&#10;32=48640"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="6" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="32 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="63" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="02" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="BIDIR" modulatorVstNameFormat="%n"
             luaModulatorValueChange="chMod_Uni_ValByName" name="InverseEffectsLevel"
             modulatorMin="0" modulatorValue="50">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Effects Level"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="54.400000000000006"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="-15" uiSliderMax="16" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="100" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0%=32768&#10;1%=32932&#10;2%=33096&#10;3%=33259&#10;4%=33423&#10;5%=33587&#10;6%=33751&#10;7%=33915&#10;8%=34079&#10;9%=34242&#10;10%=34406&#10;11%=34570&#10;12%=34734&#10;13%=34898&#10;14%=35062&#10;15%=35225&#10;16%=35389&#10;17%=35553&#10;18%=35717&#10;19%=35881&#10;20%=36045&#10;21%=36208&#10;22%=36372&#10;23%=36536&#10;24%=36700&#10;25%=36864&#10;26%=37028&#10;27%=37191&#10;28%=37355&#10;29%=37519&#10;30%=37683&#10;31%=37847&#10;32%=38011&#10;33%=38174&#10;34%=38338&#10;35%=38502&#10;36%=38666&#10;37%=38830&#10;38%=38994&#10;39%=39157&#10;40%=39321&#10;41%=39485&#10;42%=39649&#10;43%=39813&#10;44%=39977&#10;45%=40140&#10;46%=40304&#10;47%=40468&#10;48%=40632&#10;49%=40796&#10;50%=40960&#10;51%=41123&#10;52%=41287&#10;53%=41451&#10;54%=41615&#10;55%=41779&#10;56%=41942&#10;57%=42106&#10;58%=42270&#10;59%=42434&#10;60%=42598&#10;61%=42762&#10;62%=42925&#10;63%=43089&#10;64%=43253&#10;65%=43417&#10;66%=43581&#10;67%=43745&#10;68%=43908&#10;69%=44072&#10;70%=44236&#10;71%=44400&#10;72%=44564&#10;73%=44728&#10;74%=44891&#10;75%=45055&#10;76%=45219&#10;77%=45383&#10;78%=45547&#10;79%=45711&#10;80%=45874&#10;81%=46038&#10;82%=46202&#10;83%=46366&#10;84%=46530&#10;85%=46694&#10;86%=46857&#10;87%=47021&#10;88%=47185&#10;89%=47349&#10;90%=47513&#10;91%=47677&#10;92%=47840&#10;93%=48004&#10;94%=48168&#10;95%=48332&#10;96%=48496&#10;97%=48660&#10;98%=48823&#10;99%=48987&#10;100%=49151"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="136 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="6"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="15" vstIndex="64" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="04" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="InverseHiFreqCut" modulatorMin="0" modulatorValue="15">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Hi Freq Cut"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="15" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0,3 Hz=32768&#10;1,2 kHz=33792&#10;2,1 kHz=34816&#10;3 kHz=35840&#10;3,9 kHz=36864&#10;4,8 kHz=37888&#10;5,7 kHz=38912&#10;6,6 kHz=39936&#10;7,5 kHz=40960&#10;8,4 kHz=41984&#10;9,3 kHz=43008&#10;10,2 kHz=44032&#10;11,1 kHz=45056&#10;12 kHz=46080&#10;12,9 kHz=47104&#10;13,8 kHz=48128"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="6" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="240 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="31" vstIndex="65" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="05" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="InverseSlope" modulatorMin="0" modulatorValue="18">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Slope"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="32" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="1=32768&#10;2=33280&#10;3=33792&#10;4=34304&#10;5=34816&#10;6=35328&#10;7=35840&#10;8=36352&#10;9=36864&#10;10=37376&#10;11=37888&#10;12=38400&#10;13=38912&#10;14=39424&#10;15=39936&#10;16=40448&#10;17=40960&#10;18=41472&#10;19=41984&#10;20=42496&#10;21=43008&#10;22=43520&#10;23=44032&#10;24=44544&#10;25=45056&#10;26=45568&#10;27=46080&#10;28=46592&#10;29=47104&#10;30=47616&#10;31=48128&#10;32=48640"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="344 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="6"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="254" vstIndex="66" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="06" modulatorCustomName="" modulatorCustomIndexGroup="1680"
             modulatorCustomNameGroup="BIDIR" modulatorVstNameFormat="%n"
             luaModulatorValueChange="chMod_Uni_ValByName" name="InversePreDlyFdbk"
             modulatorMin="0" modulatorValue="165">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Pre Dly Fdbk"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="54.400000000000006"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="-15" uiSliderMax="16" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="127" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="-100%=16385&#10;-99%=16514&#10;-98%=16643&#10;-98%=16772&#10;-97%=16901&#10;-96%=17030&#10;-95%=17159&#10;-94%=17288&#10;-94%=17417&#10;-93%=17546&#10;-92%=17675&#10;-91%=17804&#10;-91%=17933&#10;-90%=18062&#10;-89%=18191&#10;-88%=18320&#10;-87%=18449&#10;-87%=18578&#10;-86%=18707&#10;-85%=18836&#10;-84%=18965&#10;-83%=19094&#10;-83%=19223&#10;-82%=19352&#10;-81%=19481&#10;-80%=19610&#10;-80%=19739&#10;-79%=19868&#10;-78%=19997&#10;-77%=20126&#10;-76%=20255&#10;-76%=20384&#10;-75%=20513&#10;-74%=20642&#10;-73%=20771&#10;-72%=20900&#10;-72%=21029&#10;-71%=21158&#10;-70%=21287&#10;-69%=21416&#10;-69%=21545&#10;-68%=21674&#10;-67%=21803&#10;-66%=21932&#10;-65%=22061&#10;-65%=22190&#10;-64%=22319&#10;-63%=22448&#10;-62%=22577&#10;-61%=22706&#10;-61%=22835&#10;-60%=22964&#10;-59%=23093&#10;-58%=23222&#10;-57%=23351&#10;-57%=23480&#10;-56%=23609&#10;-55%=23738&#10;-54%=23867&#10;-54%=23996&#10;-53%=24125&#10;-52%=24254&#10;-51%=24383&#10;-50%=24512&#10;-50%=24641&#10;-49%=24770&#10;-48%=24899&#10;-47%=25028&#10;-46%=25157&#10;-46%=25286&#10;-45%=25415&#10;-44%=25544&#10;-43%=25673&#10;-43%=25802&#10;-42%=25931&#10;-41%=26060&#10;-40%=26189&#10;-39%=26318&#10;-39%=26447&#10;-38%=26576&#10;-37%=26705&#10;-36%=26834&#10;-35%=26963&#10;-35%=27092&#10;-34%=27221&#10;-33%=27350&#10;-32%=27479&#10;-31%=27608&#10;-31%=27737&#10;-30%=27866&#10;-29%=27995&#10;-28%=28124&#10;-28%=28253&#10;-27%=28382&#10;-26%=28511&#10;-25%=28640&#10;-24%=28769&#10;-24%=28898&#10;-23%=29027&#10;-22%=29156&#10;-21%=29285&#10;-20%=29414&#10;-20%=29543&#10;-19%=29672&#10;-18%=29801&#10;-17%=29930&#10;-17%=30059&#10;-16%=30188&#10;-15%=30317&#10;-14%=30446&#10;-13%=30575&#10;-13%=30704&#10;-12%=30833&#10;-11%=30962&#10;-10%=31091&#10;-9%=31220&#10;-9%=31349&#10;-8%=31478&#10;-7%=31607&#10;-6%=31736&#10;-6%=31865&#10;-5%=31994&#10;-4%=32123&#10;-3%=32252&#10;-2%=32381&#10;-2%=32510&#10;-1%=32639&#10;0%=32768&#10;1%=32897&#10;2%=33026&#10;2%=33155&#10;3%=33284&#10;4%=33413&#10;5%=33542&#10;6%=33671&#10;6%=33800&#10;7%=33929&#10;8%=34058&#10;9%=34187&#10;9%=34316&#10;10%=34445&#10;11%=34574&#10;12%=34703&#10;13%=34832&#10;13%=34961&#10;14%=35090&#10;15%=35219&#10;16%=35348&#10;17%=35477&#10;17%=35606&#10;18%=35735&#10;19%=35864&#10;20%=35993&#10;20%=36122&#10;21%=36251&#10;22%=36380&#10;23%=36509&#10;24%=36638&#10;24%=36767&#10;25%=36896&#10;26%=37025&#10;27%=37154&#10;28%=37283&#10;28%=37412&#10;29%=37541&#10;30%=37670&#10;31%=37799&#10;31%=37928&#10;32%=38057&#10;33%=38186&#10;34%=38315&#10;35%=38444&#10;35%=38573&#10;36%=38702&#10;37%=38831&#10;38%=38960&#10;39%=39089&#10;39%=39218&#10;40%=39347&#10;41%=39476&#10;42%=39605&#10;43%=39734&#10;43%=39863&#10;44%=39992&#10;45%=40121&#10;46%=40250&#10;46%=40379&#10;47%=40508&#10;48%=40637&#10;49%=40766&#10;50%=40895&#10;50%=41024&#10;51%=41153&#10;52%=41282&#10;53%=41411&#10;54%=41540&#10;54%=41669&#10;55%=41798&#10;56%=41927&#10;57%=42056&#10;57%=42185&#10;58%=42314&#10;59%=42443&#10;60%=42572&#10;61%=42701&#10;61%=42830&#10;62%=42959&#10;63%=43088&#10;64%=43217&#10;65%=43346&#10;65%=43475&#10;66%=43604&#10;67%=43733&#10;68%=43862&#10;69%=43991&#10;69%=44120&#10;70%=44249&#10;71%=44378&#10;72%=44507&#10;72%=44636&#10;73%=44765&#10;74%=44894&#10;75%=45023&#10;76%=45152&#10;76%=45281&#10;77%=45410&#10;78%=45539&#10;79%=45668&#10;80%=45797&#10;80%=45926&#10;81%=46055&#10;82%=46184&#10;83%=46313&#10;83%=46442&#10;84%=46571&#10;85%=46700&#10;86%=46829&#10;87%=46958&#10;87%=47087&#10;88%=47216&#10;89%=47345&#10;90%=47474&#10;91%=47603&#10;91%=47732&#10;92%=47861&#10;93%=47990&#10;94%=48119&#10;94%=48248&#10;95%=48377&#10;96%=48506&#10;97%=48635&#10;98%=48764&#10;98%=48893&#10;99%=49022&#10;100%=49151"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="2df24869af040000feffffffffffffff"
               componentRectangle="448 16 100 70" uiType="uiFixedImageSlider"
               componentTabName="AlgoTab" componentTabId="6"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="262" vstIndex="67" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="08" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="InversePredelay" modulatorMin="0" modulatorValue="220">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Predelay"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0 ms=32768&#10;1 ms=32832&#10;2 ms=32896&#10;3 ms=32960&#10;4 ms=33024&#10;5 ms=33088&#10;6 ms=33152&#10;7 ms=33216&#10;8 ms=33280&#10;9 ms=33344&#10;10 ms=33408&#10;11 ms=33472&#10;12 ms=33536&#10;13 ms=33600&#10;14 ms=33664&#10;15 ms=33728&#10;16 ms=33792&#10;17 ms=33856&#10;18 ms=33920&#10;19 ms=33984&#10;20 ms=34048&#10;21 ms=34112&#10;22 ms=34176&#10;23 ms=34240&#10;24 ms=34304&#10;25 ms=34368&#10;26 ms=34432&#10;27 ms=34496&#10;28 ms=34560&#10;29 ms=34624&#10;30 ms=34688&#10;31 ms=34752&#10;32 ms=34816&#10;33 ms=34880&#10;34 ms=34944&#10;35 ms=35008&#10;36 ms=35072&#10;37 ms=35136&#10;38 ms=35200&#10;39 ms=35264&#10;40 ms=35328&#10;41 ms=35392&#10;42 ms=35456&#10;43 ms=35520&#10;44 ms=35584&#10;45 ms=35648&#10;46 ms=35712&#10;47 ms=35776&#10;48 ms=35840&#10;49 ms=35904&#10;50 ms=35968&#10;51 ms=36032&#10;52 ms=36096&#10;53 ms=36160&#10;54 ms=36224&#10;55 ms=36288&#10;56 ms=36352&#10;57 ms=36416&#10;58 ms=36480&#10;59 ms=36544&#10;60 ms=36608&#10;61 ms=36672&#10;62 ms=36736&#10;63 ms=36800&#10;64 ms=36864&#10;65 ms=36928&#10;66 ms=36992&#10;67 ms=37056&#10;68 ms=37120&#10;69 ms=37184&#10;70 ms=37248&#10;71 ms=37312&#10;72 ms=37376&#10;73 ms=37440&#10;74 ms=37504&#10;75 ms=37568&#10;76 ms=37632&#10;77 ms=37696&#10;78 ms=37760&#10;79 ms=37824&#10;80 ms=37888&#10;81 ms=37952&#10;82 ms=38016&#10;83 ms=38080&#10;84 ms=38144&#10;85 ms=38208&#10;86 ms=38272&#10;87 ms=38336&#10;88 ms=38400&#10;89 ms=38464&#10;90 ms=38528&#10;91 ms=38592&#10;92 ms=38656&#10;93 ms=38720&#10;94 ms=38784&#10;95 ms=38848&#10;96 ms=38912&#10;97 ms=38976&#10;98 ms=39040&#10;99 ms=39104&#10;100 ms=39168&#10;101 ms=39232&#10;102 ms=39296&#10;103 ms=39360&#10;104 ms=39424&#10;105 ms=39488&#10;106 ms=39552&#10;107 ms=39616&#10;108 ms=39680&#10;109 ms=39744&#10;110 ms=39808&#10;111 ms=39872&#10;112 ms=39936&#10;113 ms=40000&#10;114 ms=40064&#10;115 ms=40128&#10;116 ms=40192&#10;117 ms=40256&#10;118 ms=40320&#10;119 ms=40384&#10;120 ms=40448&#10;121 ms=40512&#10;122 ms=40576&#10;123 ms=40640&#10;124 ms=40704&#10;125 ms=40768&#10;126 ms=40832&#10;127 ms=40896&#10;128 ms=40960&#10;129 ms=41024&#10;130 ms=41088&#10;131 ms=41152&#10;132 ms=41216&#10;133 ms=41280&#10;134 ms=41344&#10;135 ms=41408&#10;136 ms=41472&#10;137 ms=41536&#10;138 ms=41600&#10;139 ms=41664&#10;140 ms=41728&#10;141 ms=41792&#10;142 ms=41856&#10;143 ms=41920&#10;144 ms=41984&#10;145 ms=42048&#10;146 ms=42112&#10;147 ms=42176&#10;148 ms=42240&#10;149 ms=42304&#10;150 ms=42368&#10;151 ms=42432&#10;152 ms=42496&#10;153 ms=42560&#10;154 ms=42624&#10;155 ms=42688&#10;156 ms=42752&#10;157 ms=42816&#10;158 ms=42880&#10;159 ms=42944&#10;160 ms=43008&#10;161 ms=43072&#10;162 ms=43136&#10;163 ms=43200&#10;164 ms=43264&#10;165 ms=43328&#10;166 ms=43392&#10;167 ms=43456&#10;168 ms=43520&#10;169 ms=43584&#10;170 ms=43648&#10;171 ms=43712&#10;172 ms=43776&#10;173 ms=43840&#10;174 ms=43904&#10;175 ms=43968&#10;176 ms=44032&#10;177 ms=44096&#10;178 ms=44160&#10;179 ms=44224&#10;180 ms=44288&#10;181 ms=44352&#10;182 ms=44416&#10;183 ms=44480&#10;184 ms=44544&#10;185 ms=44608&#10;186 ms=44672&#10;187 ms=44736&#10;188 ms=44800&#10;189 ms=44864&#10;190 ms=44928&#10;191 ms=44992&#10;192 ms=45056&#10;193 ms=45120&#10;194 ms=45184&#10;195 ms=45248&#10;196 ms=45312&#10;197 ms=45376&#10;198 ms=45440&#10;199 ms=45504&#10;200 ms=45568&#10;201 ms=45632&#10;202 ms=45696&#10;203 ms=45760&#10;204 ms=45824&#10;205 ms=45888&#10;206 ms=45952&#10;207 ms=46016&#10;208 ms=46080&#10;209 ms=46144&#10;210 ms=46208&#10;211 ms=46272&#10;212 ms=46336&#10;213 ms=46400&#10;214 ms=46464&#10;215 ms=46528&#10;216 ms=46592&#10;217 ms=46656&#10;218 ms=46720&#10;219 ms=46784&#10;220 ms=46848&#10;221 ms=46912&#10;222 ms=46976&#10;223 ms=47040&#10;224 ms=47104&#10;225 ms=47168&#10;226 ms=47232&#10;227 ms=47296&#10;228 ms=47360&#10;229 ms=47424&#10;230 ms=47488&#10;231 ms=47552&#10;232 ms=47616&#10;233 ms=47680&#10;234 ms=47744&#10;235 ms=47808&#10;236 ms=47872&#10;237 ms=47936&#10;238 ms=48000&#10;239 ms=48064&#10;240 ms=48128&#10;241 ms=48192&#10;242 ms=48256&#10;243 ms=48320&#10;244 ms=48384&#10;245 ms=48448&#10;246 ms=48512&#10;247 ms=48576&#10;248 ms=48640&#10;249 ms=48704&#10;250 ms=48768&#10;251 ms=48832&#10;252 ms=48896&#10;253 ms=48960&#10;254 ms=49024&#10;255 ms=49088&#10;256 ms=49152&#10;257 ms=49216&#10;258 ms=49280&#10;259 ms=49344&#10;260 ms=49408&#10;261 ms=49472&#10;262 ms=49536"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="6" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="656 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="128" vstIndex="68" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="07" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="InverseDiffusion" modulatorMin="0" modulatorValue="78">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Diffusion"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="64" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0=32768&#10;1=32896&#10;2=33024&#10;2=33152&#10;3=33280&#10;4=33408&#10;5=33536&#10;5=33664&#10;6=33792&#10;7=33920&#10;8=34048&#10;9=34176&#10;9=34304&#10;10=34432&#10;11=34560&#10;12=34688&#10;13=34816&#10;13=34944&#10;14=35072&#10;15=35200&#10;16=35328&#10;16=35456&#10;17=35584&#10;18=35712&#10;19=35840&#10;20=35968&#10;20=36096&#10;21=36224&#10;22=36352&#10;23=36480&#10;23=36608&#10;24=36736&#10;25=36864&#10;26=36992&#10;27=37120&#10;27=37248&#10;28=37376&#10;29=37504&#10;30=37632&#10;30=37760&#10;31=37888&#10;32=38016&#10;33=38144&#10;34=38272&#10;34=38400&#10;35=38528&#10;36=38656&#10;37=38784&#10;38=38912&#10;38=39040&#10;39=39168&#10;40=39296&#10;41=39424&#10;41=39552&#10;42=39680&#10;43=39808&#10;44=39936&#10;45=40064&#10;45=40192&#10;46=40320&#10;47=40448&#10;48=40576&#10;48=40704&#10;49=40832&#10;50=40960&#10;51=41088&#10;52=41216&#10;52=41344&#10;53=41472&#10;54=41600&#10;55=41728&#10;55=41856&#10;56=41984&#10;57=42112&#10;58=42240&#10;59=42368&#10;59=42496&#10;60=42624&#10;61=42752&#10;62=42880&#10;63=43008&#10;63=43136&#10;64=43264&#10;65=43392&#10;66=43520&#10;66=43648&#10;67=43776&#10;68=43904&#10;69=44032&#10;70=44160&#10;70=44288&#10;71=44416&#10;72=44544&#10;73=44672&#10;73=44800&#10;74=44928&#10;75=45056&#10;76=45184&#10;77=45312&#10;77=45440&#10;78=45568&#10;79=45696&#10;80=45824&#10;80=45952&#10;81=46080&#10;82=46208&#10;83=46336&#10;84=46464&#10;84=46592&#10;85=46720&#10;86=46848&#10;87=46976&#10;88=47104&#10;88=47232&#10;89=47360&#10;90=47488&#10;91=47616&#10;91=47744&#10;92=47872&#10;93=48000&#10;94=48128&#10;95=48256&#10;95=48384&#10;96=48512&#10;97=48640&#10;98=48768&#10;98=48896&#10;99=49024&#10;100=49152"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="6" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="552 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="31" vstIndex="69" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="00" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="GateGateTime" modulatorMin="0" modulatorValue="4">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Gate Time"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="150 ms=32768&#10;158 ms=33280&#10;165 ms=33792&#10;173 ms=34304&#10;181 ms=34816&#10;189 ms=35328&#10;196 ms=35840&#10;204 ms=36352&#10;212 ms=36864&#10;220 ms=37376&#10;227 ms=37888&#10;235 ms=38400&#10;243 ms=38912&#10;251 ms=39424&#10;258 ms=39936&#10;266 ms=40448&#10;274 ms=40960&#10;282 ms=41472&#10;289 ms=41984&#10;297 ms=42496&#10;305 ms=43008&#10;313 ms=43520&#10;320 ms=44032&#10;328 ms=44544&#10;336 ms=45056&#10;344 ms=45568&#10;351 ms=46080&#10;359 ms=46592&#10;367 ms=47104&#10;375 ms=47616&#10;382 ms=48128&#10;390 ms=48640"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="32 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="7"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="70" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="02" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="BIDIR" modulatorVstNameFormat="%n"
             luaModulatorValueChange="chMod_Uni_ValByName" name="GateEffectsLevel"
             modulatorMin="0" modulatorValue="100">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Effects Level"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="54.400000000000006"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="-15" uiSliderMax="16" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="100" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0%=32768&#10;1%=32932&#10;2%=33096&#10;3%=33259&#10;4%=33423&#10;5%=33587&#10;6%=33751&#10;7%=33915&#10;8%=34079&#10;9%=34242&#10;10%=34406&#10;11%=34570&#10;12%=34734&#10;13%=34898&#10;14%=35062&#10;15%=35225&#10;16%=35389&#10;17%=35553&#10;18%=35717&#10;19%=35881&#10;20%=36045&#10;21%=36208&#10;22%=36372&#10;23%=36536&#10;24%=36700&#10;25%=36864&#10;26%=37028&#10;27%=37191&#10;28%=37355&#10;29%=37519&#10;30%=37683&#10;31%=37847&#10;32%=38011&#10;33%=38174&#10;34%=38338&#10;35%=38502&#10;36%=38666&#10;37%=38830&#10;38%=38994&#10;39%=39157&#10;40%=39321&#10;41%=39485&#10;42%=39649&#10;43%=39813&#10;44%=39977&#10;45%=40140&#10;46%=40304&#10;47%=40468&#10;48%=40632&#10;49%=40796&#10;50%=40960&#10;51%=41123&#10;52%=41287&#10;53%=41451&#10;54%=41615&#10;55%=41779&#10;56%=41942&#10;57%=42106&#10;58%=42270&#10;59%=42434&#10;60%=42598&#10;61%=42762&#10;62%=42925&#10;63%=43089&#10;64%=43253&#10;65%=43417&#10;66%=43581&#10;67%=43745&#10;68%=43908&#10;69%=44072&#10;70%=44236&#10;71%=44400&#10;72%=44564&#10;73%=44728&#10;74%=44891&#10;75%=45055&#10;76%=45219&#10;77%=45383&#10;78%=45547&#10;79%=45711&#10;80%=45874&#10;81%=46038&#10;82%=46202&#10;83%=46366&#10;84%=46530&#10;85%=46694&#10;86%=46857&#10;87%=47021&#10;88%=47185&#10;89%=47349&#10;90%=47513&#10;91%=47677&#10;92%=47840&#10;93%=48004&#10;94%=48168&#10;95%=48332&#10;96%=48496&#10;97%=48660&#10;98%=48823&#10;99%=48987&#10;100%=49151"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="7" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="136 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="15" vstIndex="71" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="04" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="GateHiFreqCut" modulatorMin="0" modulatorValue="15">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Hi Freq Cut"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="15" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0,3 Hz=32768&#10;1,2 kHz=33792&#10;2,1 kHz=34816&#10;3 kHz=35840&#10;3,9 kHz=36864&#10;4,8 kHz=37888&#10;5,7 kHz=38912&#10;6,6 kHz=39936&#10;7,5 kHz=40960&#10;8,4 kHz=41984&#10;9,3 kHz=43008&#10;10,2 kHz=44032&#10;11,1 kHz=45056&#10;12 kHz=46080&#10;12,9 kHz=47104&#10;13,8 kHz=48128"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="240 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="7"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="15" vstIndex="72" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="05" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="GateSlope" modulatorMin="0" modulatorValue="15">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Slope"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="15" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="1=32768&#10;2=33792&#10;3=34816&#10;4=35840&#10;5=36864&#10;6=37888&#10;7=38912&#10;8=39936&#10;9=40960&#10;10=41984&#10;11=43008&#10;12=44032&#10;13=45056&#10;14=46080&#10;15=47104&#10;16=48128"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="7" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="344 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="254" vstIndex="73" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="06" modulatorCustomName="" modulatorCustomIndexGroup="1680"
             modulatorCustomNameGroup="BIDIR" modulatorVstNameFormat="%n"
             luaModulatorValueChange="chMod_Uni_ValByName" name="GatePreDlyFdbk"
             modulatorMin="0" modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Pre Dly Fdbk"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="54.400000000000006"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="-15" uiSliderMax="16" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="127" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="-100%=16385&#10;-99%=16514&#10;-98%=16643&#10;-98%=16772&#10;-97%=16901&#10;-96%=17030&#10;-95%=17159&#10;-94%=17288&#10;-94%=17417&#10;-93%=17546&#10;-92%=17675&#10;-91%=17804&#10;-91%=17933&#10;-90%=18062&#10;-89%=18191&#10;-88%=18320&#10;-87%=18449&#10;-87%=18578&#10;-86%=18707&#10;-85%=18836&#10;-84%=18965&#10;-83%=19094&#10;-83%=19223&#10;-82%=19352&#10;-81%=19481&#10;-80%=19610&#10;-80%=19739&#10;-79%=19868&#10;-78%=19997&#10;-77%=20126&#10;-76%=20255&#10;-76%=20384&#10;-75%=20513&#10;-74%=20642&#10;-73%=20771&#10;-72%=20900&#10;-72%=21029&#10;-71%=21158&#10;-70%=21287&#10;-69%=21416&#10;-69%=21545&#10;-68%=21674&#10;-67%=21803&#10;-66%=21932&#10;-65%=22061&#10;-65%=22190&#10;-64%=22319&#10;-63%=22448&#10;-62%=22577&#10;-61%=22706&#10;-61%=22835&#10;-60%=22964&#10;-59%=23093&#10;-58%=23222&#10;-57%=23351&#10;-57%=23480&#10;-56%=23609&#10;-55%=23738&#10;-54%=23867&#10;-54%=23996&#10;-53%=24125&#10;-52%=24254&#10;-51%=24383&#10;-50%=24512&#10;-50%=24641&#10;-49%=24770&#10;-48%=24899&#10;-47%=25028&#10;-46%=25157&#10;-46%=25286&#10;-45%=25415&#10;-44%=25544&#10;-43%=25673&#10;-43%=25802&#10;-42%=25931&#10;-41%=26060&#10;-40%=26189&#10;-39%=26318&#10;-39%=26447&#10;-38%=26576&#10;-37%=26705&#10;-36%=26834&#10;-35%=26963&#10;-35%=27092&#10;-34%=27221&#10;-33%=27350&#10;-32%=27479&#10;-31%=27608&#10;-31%=27737&#10;-30%=27866&#10;-29%=27995&#10;-28%=28124&#10;-28%=28253&#10;-27%=28382&#10;-26%=28511&#10;-25%=28640&#10;-24%=28769&#10;-24%=28898&#10;-23%=29027&#10;-22%=29156&#10;-21%=29285&#10;-20%=29414&#10;-20%=29543&#10;-19%=29672&#10;-18%=29801&#10;-17%=29930&#10;-17%=30059&#10;-16%=30188&#10;-15%=30317&#10;-14%=30446&#10;-13%=30575&#10;-13%=30704&#10;-12%=30833&#10;-11%=30962&#10;-10%=31091&#10;-9%=31220&#10;-9%=31349&#10;-8%=31478&#10;-7%=31607&#10;-6%=31736&#10;-6%=31865&#10;-5%=31994&#10;-4%=32123&#10;-3%=32252&#10;-2%=32381&#10;-2%=32510&#10;-1%=32639&#10;0%=32768&#10;1%=32897&#10;2%=33026&#10;2%=33155&#10;3%=33284&#10;4%=33413&#10;5%=33542&#10;6%=33671&#10;6%=33800&#10;7%=33929&#10;8%=34058&#10;9%=34187&#10;9%=34316&#10;10%=34445&#10;11%=34574&#10;12%=34703&#10;13%=34832&#10;13%=34961&#10;14%=35090&#10;15%=35219&#10;16%=35348&#10;17%=35477&#10;17%=35606&#10;18%=35735&#10;19%=35864&#10;20%=35993&#10;20%=36122&#10;21%=36251&#10;22%=36380&#10;23%=36509&#10;24%=36638&#10;24%=36767&#10;25%=36896&#10;26%=37025&#10;27%=37154&#10;28%=37283&#10;28%=37412&#10;29%=37541&#10;30%=37670&#10;31%=37799&#10;31%=37928&#10;32%=38057&#10;33%=38186&#10;34%=38315&#10;35%=38444&#10;35%=38573&#10;36%=38702&#10;37%=38831&#10;38%=38960&#10;39%=39089&#10;39%=39218&#10;40%=39347&#10;41%=39476&#10;42%=39605&#10;43%=39734&#10;43%=39863&#10;44%=39992&#10;45%=40121&#10;46%=40250&#10;46%=40379&#10;47%=40508&#10;48%=40637&#10;49%=40766&#10;50%=40895&#10;50%=41024&#10;51%=41153&#10;52%=41282&#10;53%=41411&#10;54%=41540&#10;54%=41669&#10;55%=41798&#10;56%=41927&#10;57%=42056&#10;57%=42185&#10;58%=42314&#10;59%=42443&#10;60%=42572&#10;61%=42701&#10;61%=42830&#10;62%=42959&#10;63%=43088&#10;64%=43217&#10;65%=43346&#10;65%=43475&#10;66%=43604&#10;67%=43733&#10;68%=43862&#10;69%=43991&#10;69%=44120&#10;70%=44249&#10;71%=44378&#10;72%=44507&#10;72%=44636&#10;73%=44765&#10;74%=44894&#10;75%=45023&#10;76%=45152&#10;76%=45281&#10;77%=45410&#10;78%=45539&#10;79%=45668&#10;80%=45797&#10;80%=45926&#10;81%=46055&#10;82%=46184&#10;83%=46313&#10;83%=46442&#10;84%=46571&#10;85%=46700&#10;86%=46829&#10;87%=46958&#10;87%=47087&#10;88%=47216&#10;89%=47345&#10;90%=47474&#10;91%=47603&#10;91%=47732&#10;92%=47861&#10;93%=47990&#10;94%=48119&#10;94%=48248&#10;95%=48377&#10;96%=48506&#10;97%=48635&#10;98%=48764&#10;98%=48893&#10;99%=49022&#10;100%=49151"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="7" componentTabName="AlgoTab"
               uiType="uiFixedImageSlider" componentRectangle="448 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="255" vstIndex="74" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="07" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="GateDiffusion" modulatorMin="0" modulatorValue="128">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Diffusion"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="128" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0=32768&#10;0,4=32832&#10;0,8=32896&#10;1,2=32960&#10;1,6=33024&#10;2=33088&#10;2,4=33152&#10;2,7=33216&#10;3,1=33280&#10;3,5=33344&#10;3,9=33408&#10;4,3=33472&#10;4,7=33536&#10;5,1=33600&#10;5,5=33664&#10;5,9=33728&#10;6,3=33792&#10;6,7=33856&#10;7,1=33920&#10;7,5=33984&#10;7,8=34048&#10;8,2=34112&#10;8,6=34176&#10;9=34240&#10;9,4=34304&#10;9,8=34368&#10;10,2=34432&#10;10,6=34496&#10;11=34560&#10;11,4=34624&#10;11,8=34688&#10;12,2=34752&#10;12,5=34816&#10;12,9=34880&#10;13,3=34944&#10;13,7=35008&#10;14,1=35072&#10;14,5=35136&#10;14,9=35200&#10;15,3=35264&#10;15,7=35328&#10;16,1=35392&#10;16,5=35456&#10;16,9=35520&#10;17,3=35584&#10;17,6=35648&#10;18=35712&#10;18,4=35776&#10;18,8=35840&#10;19,2=35904&#10;19,6=35968&#10;20=36032&#10;20,4=36096&#10;20,8=36160&#10;21,2=36224&#10;21,6=36288&#10;22=36352&#10;22,4=36416&#10;22,7=36480&#10;23,1=36544&#10;23,5=36608&#10;23,9=36672&#10;24,3=36736&#10;24,7=36800&#10;25,1=36864&#10;25,5=36928&#10;25,9=36992&#10;26,3=37056&#10;26,7=37120&#10;27,1=37184&#10;27,5=37248&#10;27,8=37312&#10;28,2=37376&#10;28,6=37440&#10;29=37504&#10;29,4=37568&#10;29,8=37632&#10;30,2=37696&#10;30,6=37760&#10;31=37824&#10;31,4=37888&#10;31,8=37952&#10;32,2=38016&#10;32,5=38080&#10;32,9=38144&#10;33,3=38208&#10;33,7=38272&#10;34,1=38336&#10;34,5=38400&#10;34,9=38464&#10;35,3=38528&#10;35,7=38592&#10;36,1=38656&#10;36,5=38720&#10;36,9=38784&#10;37,3=38848&#10;37,6=38912&#10;38=38976&#10;38,4=39040&#10;38,8=39104&#10;39,2=39168&#10;39,6=39232&#10;40=39296&#10;40,4=39360&#10;40,8=39424&#10;41,2=39488&#10;41,6=39552&#10;42=39616&#10;42,4=39680&#10;42,7=39744&#10;43,1=39808&#10;43,5=39872&#10;43,9=39936&#10;44,3=40000&#10;44,7=40064&#10;45,1=40128&#10;45,5=40192&#10;45,9=40256&#10;46,3=40320&#10;46,7=40384&#10;47,1=40448&#10;47,5=40512&#10;47,8=40576&#10;48,2=40640&#10;48,6=40704&#10;49=40768&#10;49,4=40832&#10;49,8=40896&#10;50,2=40960&#10;50,6=41024&#10;51=41088&#10;51,4=41152&#10;51,8=41216&#10;52,2=41280&#10;52,5=41344&#10;52,9=41408&#10;53,3=41472&#10;53,7=41536&#10;54,1=41600&#10;54,5=41664&#10;54,9=41728&#10;55,3=41792&#10;55,7=41856&#10;56,1=41920&#10;56,5=41984&#10;56,9=42048&#10;57,3=42112&#10;57,6=42176&#10;58=42240&#10;58,4=42304&#10;58,8=42368&#10;59,2=42432&#10;59,6=42496&#10;60=42560&#10;60,4=42624&#10;60,8=42688&#10;61,2=42752&#10;61,6=42816&#10;62=42880&#10;62,4=42944&#10;62,7=43008&#10;63,1=43072&#10;63,5=43136&#10;63,9=43200&#10;64,3=43264&#10;64,7=43328&#10;65,1=43392&#10;65,5=43456&#10;65,9=43520&#10;66,3=43584&#10;66,7=43648&#10;67,1=43712&#10;67,5=43776&#10;67,8=43840&#10;68,2=43904&#10;68,6=43968&#10;69=44032&#10;69,4=44096&#10;69,8=44160&#10;70,2=44224&#10;70,6=44288&#10;71=44352&#10;71,4=44416&#10;71,8=44480&#10;72,2=44544&#10;72,5=44608&#10;72,9=44672&#10;73,3=44736&#10;73,7=44800&#10;74,1=44864&#10;74,5=44928&#10;74,9=44992&#10;75,3=45056&#10;75,7=45120&#10;76,1=45184&#10;76,5=45248&#10;76,9=45312&#10;77,3=45376&#10;77,6=45440&#10;78=45504&#10;78,4=45568&#10;78,8=45632&#10;79,2=45696&#10;79,6=45760&#10;80=45824&#10;80,4=45888&#10;80,8=45952&#10;81,2=46016&#10;81,6=46080&#10;82=46144&#10;82,4=46208&#10;82,7=46272&#10;83,1=46336&#10;83,5=46400&#10;83,9=46464&#10;84,3=46528&#10;84,7=46592&#10;85,1=46656&#10;85,5=46720&#10;85,9=46784&#10;86,3=46848&#10;86,7=46912&#10;87,1=46976&#10;87,5=47040&#10;87,8=47104&#10;88,2=47168&#10;88,6=47232&#10;89=47296&#10;89,4=47360&#10;89,8=47424&#10;90,2=47488&#10;90,6=47552&#10;91=47616&#10;91,4=47680&#10;91,8=47744&#10;92,2=47808&#10;92,5=47872&#10;92,9=47936&#10;93,3=48000&#10;93,7=48064&#10;94,1=48128&#10;94,5=48192&#10;94,9=48256&#10;95,3=48320&#10;95,7=48384&#10;96,1=48448&#10;96,5=48512&#10;96,9=48576&#10;97,3=48640&#10;97,6=48704&#10;98=48768&#10;98,4=48832&#10;98,8=48896&#10;99,2=48960&#10;99,6=49024&#10;100=49088"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="552 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="7"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="262" vstIndex="75" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="08" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="GatePredelay" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Predelay"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0 ms=32768&#10;1 ms=32832&#10;2 ms=32896&#10;3 ms=32960&#10;4 ms=33024&#10;5 ms=33088&#10;6 ms=33152&#10;7 ms=33216&#10;8 ms=33280&#10;9 ms=33344&#10;10 ms=33408&#10;11 ms=33472&#10;12 ms=33536&#10;13 ms=33600&#10;14 ms=33664&#10;15 ms=33728&#10;16 ms=33792&#10;17 ms=33856&#10;18 ms=33920&#10;19 ms=33984&#10;20 ms=34048&#10;21 ms=34112&#10;22 ms=34176&#10;23 ms=34240&#10;24 ms=34304&#10;25 ms=34368&#10;26 ms=34432&#10;27 ms=34496&#10;28 ms=34560&#10;29 ms=34624&#10;30 ms=34688&#10;31 ms=34752&#10;32 ms=34816&#10;33 ms=34880&#10;34 ms=34944&#10;35 ms=35008&#10;36 ms=35072&#10;37 ms=35136&#10;38 ms=35200&#10;39 ms=35264&#10;40 ms=35328&#10;41 ms=35392&#10;42 ms=35456&#10;43 ms=35520&#10;44 ms=35584&#10;45 ms=35648&#10;46 ms=35712&#10;47 ms=35776&#10;48 ms=35840&#10;49 ms=35904&#10;50 ms=35968&#10;51 ms=36032&#10;52 ms=36096&#10;53 ms=36160&#10;54 ms=36224&#10;55 ms=36288&#10;56 ms=36352&#10;57 ms=36416&#10;58 ms=36480&#10;59 ms=36544&#10;60 ms=36608&#10;61 ms=36672&#10;62 ms=36736&#10;63 ms=36800&#10;64 ms=36864&#10;65 ms=36928&#10;66 ms=36992&#10;67 ms=37056&#10;68 ms=37120&#10;69 ms=37184&#10;70 ms=37248&#10;71 ms=37312&#10;72 ms=37376&#10;73 ms=37440&#10;74 ms=37504&#10;75 ms=37568&#10;76 ms=37632&#10;77 ms=37696&#10;78 ms=37760&#10;79 ms=37824&#10;80 ms=37888&#10;81 ms=37952&#10;82 ms=38016&#10;83 ms=38080&#10;84 ms=38144&#10;85 ms=38208&#10;86 ms=38272&#10;87 ms=38336&#10;88 ms=38400&#10;89 ms=38464&#10;90 ms=38528&#10;91 ms=38592&#10;92 ms=38656&#10;93 ms=38720&#10;94 ms=38784&#10;95 ms=38848&#10;96 ms=38912&#10;97 ms=38976&#10;98 ms=39040&#10;99 ms=39104&#10;100 ms=39168&#10;101 ms=39232&#10;102 ms=39296&#10;103 ms=39360&#10;104 ms=39424&#10;105 ms=39488&#10;106 ms=39552&#10;107 ms=39616&#10;108 ms=39680&#10;109 ms=39744&#10;110 ms=39808&#10;111 ms=39872&#10;112 ms=39936&#10;113 ms=40000&#10;114 ms=40064&#10;115 ms=40128&#10;116 ms=40192&#10;117 ms=40256&#10;118 ms=40320&#10;119 ms=40384&#10;120 ms=40448&#10;121 ms=40512&#10;122 ms=40576&#10;123 ms=40640&#10;124 ms=40704&#10;125 ms=40768&#10;126 ms=40832&#10;127 ms=40896&#10;128 ms=40960&#10;129 ms=41024&#10;130 ms=41088&#10;131 ms=41152&#10;132 ms=41216&#10;133 ms=41280&#10;134 ms=41344&#10;135 ms=41408&#10;136 ms=41472&#10;137 ms=41536&#10;138 ms=41600&#10;139 ms=41664&#10;140 ms=41728&#10;141 ms=41792&#10;142 ms=41856&#10;143 ms=41920&#10;144 ms=41984&#10;145 ms=42048&#10;146 ms=42112&#10;147 ms=42176&#10;148 ms=42240&#10;149 ms=42304&#10;150 ms=42368&#10;151 ms=42432&#10;152 ms=42496&#10;153 ms=42560&#10;154 ms=42624&#10;155 ms=42688&#10;156 ms=42752&#10;157 ms=42816&#10;158 ms=42880&#10;159 ms=42944&#10;160 ms=43008&#10;161 ms=43072&#10;162 ms=43136&#10;163 ms=43200&#10;164 ms=43264&#10;165 ms=43328&#10;166 ms=43392&#10;167 ms=43456&#10;168 ms=43520&#10;169 ms=43584&#10;170 ms=43648&#10;171 ms=43712&#10;172 ms=43776&#10;173 ms=43840&#10;174 ms=43904&#10;175 ms=43968&#10;176 ms=44032&#10;177 ms=44096&#10;178 ms=44160&#10;179 ms=44224&#10;180 ms=44288&#10;181 ms=44352&#10;182 ms=44416&#10;183 ms=44480&#10;184 ms=44544&#10;185 ms=44608&#10;186 ms=44672&#10;187 ms=44736&#10;188 ms=44800&#10;189 ms=44864&#10;190 ms=44928&#10;191 ms=44992&#10;192 ms=45056&#10;193 ms=45120&#10;194 ms=45184&#10;195 ms=45248&#10;196 ms=45312&#10;197 ms=45376&#10;198 ms=45440&#10;199 ms=45504&#10;200 ms=45568&#10;201 ms=45632&#10;202 ms=45696&#10;203 ms=45760&#10;204 ms=45824&#10;205 ms=45888&#10;206 ms=45952&#10;207 ms=46016&#10;208 ms=46080&#10;209 ms=46144&#10;210 ms=46208&#10;211 ms=46272&#10;212 ms=46336&#10;213 ms=46400&#10;214 ms=46464&#10;215 ms=46528&#10;216 ms=46592&#10;217 ms=46656&#10;218 ms=46720&#10;219 ms=46784&#10;220 ms=46848&#10;221 ms=46912&#10;222 ms=46976&#10;223 ms=47040&#10;224 ms=47104&#10;225 ms=47168&#10;226 ms=47232&#10;227 ms=47296&#10;228 ms=47360&#10;229 ms=47424&#10;230 ms=47488&#10;231 ms=47552&#10;232 ms=47616&#10;233 ms=47680&#10;234 ms=47744&#10;235 ms=47808&#10;236 ms=47872&#10;237 ms=47936&#10;238 ms=48000&#10;239 ms=48064&#10;240 ms=48128&#10;241 ms=48192&#10;242 ms=48256&#10;243 ms=48320&#10;244 ms=48384&#10;245 ms=48448&#10;246 ms=48512&#10;247 ms=48576&#10;248 ms=48640&#10;249 ms=48704&#10;250 ms=48768&#10;251 ms=48832&#10;252 ms=48896&#10;253 ms=48960&#10;254 ms=49024&#10;255 ms=49088&#10;256 ms=49152&#10;257 ms=49216&#10;258 ms=49280&#10;259 ms=49344&#10;260 ms=49408&#10;261 ms=49472&#10;262 ms=49536"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="656 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="7"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="125" vstIndex="76" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="01" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Delay1GroupDelay" modulatorMin="0" modulatorValue="96">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Group Delay"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0ms=32768&#10;8ms=32896&#10;16ms=33024&#10;24ms=33152&#10;32ms=33280&#10;40ms=33408&#10;48ms=33536&#10;56ms=33664&#10;64ms=33792&#10;72ms=33920&#10;80ms=34048&#10;88ms=34176&#10;96ms=34304&#10;104ms=34432&#10;112ms=34560&#10;120ms=34688&#10;128ms=34816&#10;136ms=34944&#10;144ms=35072&#10;152ms=35200&#10;160ms=35328&#10;168ms=35456&#10;176ms=35584&#10;184ms=35712&#10;192ms=35840&#10;200ms=35968&#10;208ms=36096&#10;216ms=36224&#10;224ms=36352&#10;232ms=36480&#10;240ms=36608&#10;248ms=36736&#10;256ms=36864&#10;264ms=36992&#10;272ms=37120&#10;280ms=37248&#10;288ms=37376&#10;296ms=37504&#10;304ms=37632&#10;312ms=37760&#10;320ms=37888&#10;328ms=38016&#10;336ms=38144&#10;344ms=38272&#10;352ms=38400&#10;360ms=38528&#10;368ms=38656&#10;376ms=38784&#10;384ms=38912&#10;392ms=39040&#10;400ms=39168&#10;408ms=39296&#10;416ms=39424&#10;424ms=39552&#10;432ms=39680&#10;440ms=39808&#10;448ms=39936&#10;456ms=40064&#10;464ms=40192&#10;472ms=40320&#10;480ms=40448&#10;488ms=40576&#10;496ms=40704&#10;504ms=40832&#10;512ms=40960&#10;520ms=41088&#10;528ms=41216&#10;536ms=41344&#10;544ms=41472&#10;552ms=41600&#10;560ms=41728&#10;568ms=41856&#10;576ms=41984&#10;584ms=42112&#10;592ms=42240&#10;600ms=42368&#10;608ms=42496&#10;616ms=42624&#10;624ms=42752&#10;632ms=42880&#10;640ms=43008&#10;648ms=43136&#10;656ms=43264&#10;664ms=43392&#10;672ms=43520&#10;680ms=43648&#10;688ms=43776&#10;696ms=43904&#10;704ms=44032&#10;712ms=44160&#10;720ms=44288&#10;728ms=44416&#10;736ms=44544&#10;744ms=44672&#10;752ms=44800&#10;760ms=44928&#10;768ms=45056&#10;776ms=45184&#10;784ms=45312&#10;792ms=45440&#10;800ms=45568&#10;808ms=45696&#10;816ms=45824&#10;824ms=45952&#10;832ms=46080&#10;840ms=46208&#10;848ms=46336&#10;856ms=46464&#10;864ms=46592&#10;872ms=46720&#10;880ms=46848&#10;888ms=46976&#10;896ms=47104&#10;904ms=47232&#10;912ms=47360&#10;920ms=47488&#10;928ms=47616&#10;936ms=47744&#10;944ms=47872&#10;952ms=48000&#10;960ms=48128&#10;968ms=48256&#10;976ms=48384&#10;984ms=48512&#10;992ms=48640&#10;1000ms=48768"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="32 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="8"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="77" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="02" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="BIDIR" modulatorVstNameFormat="%n"
             luaModulatorValueChange="chMod_Uni_ValByName" name="Delay1EffectsLevel"
             modulatorMin="0" modulatorValue="100">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Effects Level"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="54.400000000000006"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="-15" uiSliderMax="16" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="100" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0%=32768&#10;1%=32932&#10;2%=33096&#10;3%=33259&#10;4%=33423&#10;5%=33587&#10;6%=33751&#10;7%=33915&#10;8%=34079&#10;9%=34242&#10;10%=34406&#10;11%=34570&#10;12%=34734&#10;13%=34898&#10;14%=35062&#10;15%=35225&#10;16%=35389&#10;17%=35553&#10;18%=35717&#10;19%=35881&#10;20%=36045&#10;21%=36208&#10;22%=36372&#10;23%=36536&#10;24%=36700&#10;25%=36864&#10;26%=37028&#10;27%=37191&#10;28%=37355&#10;29%=37519&#10;30%=37683&#10;31%=37847&#10;32%=38011&#10;33%=38174&#10;34%=38338&#10;35%=38502&#10;36%=38666&#10;37%=38830&#10;38%=38994&#10;39%=39157&#10;40%=39321&#10;41%=39485&#10;42%=39649&#10;43%=39813&#10;44%=39977&#10;45%=40140&#10;46%=40304&#10;47%=40468&#10;48%=40632&#10;49%=40796&#10;50%=40960&#10;51%=41123&#10;52%=41287&#10;53%=41451&#10;54%=41615&#10;55%=41779&#10;56%=41942&#10;57%=42106&#10;58%=42270&#10;59%=42434&#10;60%=42598&#10;61%=42762&#10;62%=42925&#10;63%=43089&#10;64%=43253&#10;65%=43417&#10;66%=43581&#10;67%=43745&#10;68%=43908&#10;69%=44072&#10;70%=44236&#10;71%=44400&#10;72%=44564&#10;73%=44728&#10;74%=44891&#10;75%=45055&#10;76%=45219&#10;77%=45383&#10;78%=45547&#10;79%=45711&#10;80%=45874&#10;81%=46038&#10;82%=46202&#10;83%=46366&#10;84%=46530&#10;85%=46694&#10;86%=46857&#10;87%=47021&#10;88%=47185&#10;89%=47349&#10;90%=47513&#10;91%=47677&#10;92%=47840&#10;93%=48004&#10;94%=48168&#10;95%=48332&#10;96%=48496&#10;97%=48660&#10;98%=48823&#10;99%=48987&#10;100%=49151"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="8" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="136 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="15" vstIndex="78" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="03" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Delay1HiCut" modulatorMin="0" modulatorValue="14">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Hi Cut"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="15" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0,3 Hz=32768&#10;1,2 kHz=33792&#10;2,1 kHz=34816&#10;3 kHz=35840&#10;3,9 kHz=36864&#10;4,8 kHz=37888&#10;5,7 kHz=38912&#10;6,6 kHz=39936&#10;7,5 kHz=40960&#10;8,4 kHz=41984&#10;9,3 kHz=43008&#10;10,2 kHz=44032&#10;11,1 kHz=45056&#10;12 kHz=46080&#10;12,9 kHz=47104&#10;13,8 kHz=48128"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="240 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="8"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="125" vstIndex="79" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="04" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Delay1Delay2Spread" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Delay 2 Spread"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0ms=32768&#10;8ms=32896&#10;16ms=33024&#10;24ms=33152&#10;32ms=33280&#10;40ms=33408&#10;48ms=33536&#10;56ms=33664&#10;64ms=33792&#10;72ms=33920&#10;80ms=34048&#10;88ms=34176&#10;96ms=34304&#10;104ms=34432&#10;112ms=34560&#10;120ms=34688&#10;128ms=34816&#10;136ms=34944&#10;144ms=35072&#10;152ms=35200&#10;160ms=35328&#10;168ms=35456&#10;176ms=35584&#10;184ms=35712&#10;192ms=35840&#10;200ms=35968&#10;208ms=36096&#10;216ms=36224&#10;224ms=36352&#10;232ms=36480&#10;240ms=36608&#10;248ms=36736&#10;256ms=36864&#10;264ms=36992&#10;272ms=37120&#10;280ms=37248&#10;288ms=37376&#10;296ms=37504&#10;304ms=37632&#10;312ms=37760&#10;320ms=37888&#10;328ms=38016&#10;336ms=38144&#10;344ms=38272&#10;352ms=38400&#10;360ms=38528&#10;368ms=38656&#10;376ms=38784&#10;384ms=38912&#10;392ms=39040&#10;400ms=39168&#10;408ms=39296&#10;416ms=39424&#10;424ms=39552&#10;432ms=39680&#10;440ms=39808&#10;448ms=39936&#10;456ms=40064&#10;464ms=40192&#10;472ms=40320&#10;480ms=40448&#10;488ms=40576&#10;496ms=40704&#10;504ms=40832&#10;512ms=40960&#10;520ms=41088&#10;528ms=41216&#10;536ms=41344&#10;544ms=41472&#10;552ms=41600&#10;560ms=41728&#10;568ms=41856&#10;576ms=41984&#10;584ms=42112&#10;592ms=42240&#10;600ms=42368&#10;608ms=42496&#10;616ms=42624&#10;624ms=42752&#10;632ms=42880&#10;640ms=43008&#10;648ms=43136&#10;656ms=43264&#10;664ms=43392&#10;672ms=43520&#10;680ms=43648&#10;688ms=43776&#10;696ms=43904&#10;704ms=44032&#10;712ms=44160&#10;720ms=44288&#10;728ms=44416&#10;736ms=44544&#10;744ms=44672&#10;752ms=44800&#10;760ms=44928&#10;768ms=45056&#10;776ms=45184&#10;784ms=45312&#10;792ms=45440&#10;800ms=45568&#10;808ms=45696&#10;816ms=45824&#10;824ms=45952&#10;832ms=46080&#10;840ms=46208&#10;848ms=46336&#10;856ms=46464&#10;864ms=46592&#10;872ms=46720&#10;880ms=46848&#10;888ms=46976&#10;896ms=47104&#10;904ms=47232&#10;912ms=47360&#10;920ms=47488&#10;928ms=47616&#10;936ms=47744&#10;944ms=47872&#10;952ms=48000&#10;960ms=48128&#10;968ms=48256&#10;976ms=48384&#10;984ms=48512&#10;992ms=48640&#10;1000ms=48768"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="344 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="8"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="125" vstIndex="80" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="05" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Delay1Delay3Spread" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Delay 3 Spread"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0ms=32768&#10;8ms=32896&#10;16ms=33024&#10;24ms=33152&#10;32ms=33280&#10;40ms=33408&#10;48ms=33536&#10;56ms=33664&#10;64ms=33792&#10;72ms=33920&#10;80ms=34048&#10;88ms=34176&#10;96ms=34304&#10;104ms=34432&#10;112ms=34560&#10;120ms=34688&#10;128ms=34816&#10;136ms=34944&#10;144ms=35072&#10;152ms=35200&#10;160ms=35328&#10;168ms=35456&#10;176ms=35584&#10;184ms=35712&#10;192ms=35840&#10;200ms=35968&#10;208ms=36096&#10;216ms=36224&#10;224ms=36352&#10;232ms=36480&#10;240ms=36608&#10;248ms=36736&#10;256ms=36864&#10;264ms=36992&#10;272ms=37120&#10;280ms=37248&#10;288ms=37376&#10;296ms=37504&#10;304ms=37632&#10;312ms=37760&#10;320ms=37888&#10;328ms=38016&#10;336ms=38144&#10;344ms=38272&#10;352ms=38400&#10;360ms=38528&#10;368ms=38656&#10;376ms=38784&#10;384ms=38912&#10;392ms=39040&#10;400ms=39168&#10;408ms=39296&#10;416ms=39424&#10;424ms=39552&#10;432ms=39680&#10;440ms=39808&#10;448ms=39936&#10;456ms=40064&#10;464ms=40192&#10;472ms=40320&#10;480ms=40448&#10;488ms=40576&#10;496ms=40704&#10;504ms=40832&#10;512ms=40960&#10;520ms=41088&#10;528ms=41216&#10;536ms=41344&#10;544ms=41472&#10;552ms=41600&#10;560ms=41728&#10;568ms=41856&#10;576ms=41984&#10;584ms=42112&#10;592ms=42240&#10;600ms=42368&#10;608ms=42496&#10;616ms=42624&#10;624ms=42752&#10;632ms=42880&#10;640ms=43008&#10;648ms=43136&#10;656ms=43264&#10;664ms=43392&#10;672ms=43520&#10;680ms=43648&#10;688ms=43776&#10;696ms=43904&#10;704ms=44032&#10;712ms=44160&#10;720ms=44288&#10;728ms=44416&#10;736ms=44544&#10;744ms=44672&#10;752ms=44800&#10;760ms=44928&#10;768ms=45056&#10;776ms=45184&#10;784ms=45312&#10;792ms=45440&#10;800ms=45568&#10;808ms=45696&#10;816ms=45824&#10;824ms=45952&#10;832ms=46080&#10;840ms=46208&#10;848ms=46336&#10;856ms=46464&#10;864ms=46592&#10;872ms=46720&#10;880ms=46848&#10;888ms=46976&#10;896ms=47104&#10;904ms=47232&#10;912ms=47360&#10;920ms=47488&#10;928ms=47616&#10;936ms=47744&#10;944ms=47872&#10;952ms=48000&#10;960ms=48128&#10;968ms=48256&#10;976ms=48384&#10;984ms=48512&#10;992ms=48640&#10;1000ms=48768"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="448 16 100 70"
               componentLayerUid="2df24869af040000feffffffffffffff" componentTabName="AlgoTab"
               componentTabId="8"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="512" vstIndex="81" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="06" modulatorCustomName="" modulatorCustomIndexGroup="1680"
             modulatorCustomNameGroup="BIDIR" modulatorVstNameFormat="%n"
             luaModulatorValueChange="chMod_Uni_ValByName" name="Delay1Delay3Fdbk"
             modulatorMin="0" modulatorValue="256">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Delay 3 Fdbk"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="54.400000000000006"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="-15" uiSliderMax="16" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="256" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="-100 %=16384&#10;-99,6 %=16448&#10;-99,2 %=16512&#10;-98,8 %=16576&#10;-98,4 %=16640&#10;-98 %=16704&#10;-97,7 %=16768&#10;-97,3 %=16832&#10;-96,9 %=16896&#10;-96,5 %=16960&#10;-96,1 %=17024&#10;-95,7 %=17088&#10;-95,3 %=17152&#10;-94,9 %=17216&#10;-94,5 %=17280&#10;-94,1 %=17344&#10;-93,8 %=17408&#10;-93,4 %=17472&#10;-93 %=17536&#10;-92,6 %=17600&#10;-92,2 %=17664&#10;-91,8 %=17728&#10;-91,4 %=17792&#10;-91 %=17856&#10;-90,6 %=17920&#10;-90,2 %=17984&#10;-89,8 %=18048&#10;-89,5 %=18112&#10;-89,1 %=18176&#10;-88,7 %=18240&#10;-88,3 %=18304&#10;-87,9 %=18368&#10;-87,5 %=18432&#10;-87,1 %=18496&#10;-86,7 %=18560&#10;-86,3 %=18624&#10;-85,9 %=18688&#10;-85,5 %=18752&#10;-85,2 %=18816&#10;-84,8 %=18880&#10;-84,4 %=18944&#10;-84 %=19008&#10;-83,6 %=19072&#10;-83,2 %=19136&#10;-82,8 %=19200&#10;-82,4 %=19264&#10;-82 %=19328&#10;-81,6 %=19392&#10;-81,3 %=19456&#10;-80,9 %=19520&#10;-80,5 %=19584&#10;-80,1 %=19648&#10;-79,7 %=19712&#10;-79,3 %=19776&#10;-78,9 %=19840&#10;-78,5 %=19904&#10;-78,1 %=19968&#10;-77,7 %=20032&#10;-77,3 %=20096&#10;-77 %=20160&#10;-76,6 %=20224&#10;-76,2 %=20288&#10;-75,8 %=20352&#10;-75,4 %=20416&#10;-75 %=20480&#10;-74,6 %=20544&#10;-74,2 %=20608&#10;-73,8 %=20672&#10;-73,4 %=20736&#10;-73 %=20800&#10;-72,7 %=20864&#10;-72,3 %=20928&#10;-71,9 %=20992&#10;-71,5 %=21056&#10;-71,1 %=21120&#10;-70,7 %=21184&#10;-70,3 %=21248&#10;-69,9 %=21312&#10;-69,5 %=21376&#10;-69,1 %=21440&#10;-68,8 %=21504&#10;-68,4 %=21568&#10;-68 %=21632&#10;-67,6 %=21696&#10;-67,2 %=21760&#10;-66,8 %=21824&#10;-66,4 %=21888&#10;-66 %=21952&#10;-65,6 %=22016&#10;-65,2 %=22080&#10;-64,8 %=22144&#10;-64,5 %=22208&#10;-64,1 %=22272&#10;-63,7 %=22336&#10;-63,3 %=22400&#10;-62,9 %=22464&#10;-62,5 %=22528&#10;-62,1 %=22592&#10;-61,7 %=22656&#10;-61,3 %=22720&#10;-60,9 %=22784&#10;-60,5 %=22848&#10;-60,2 %=22912&#10;-59,8 %=22976&#10;-59,4 %=23040&#10;-59 %=23104&#10;-58,6 %=23168&#10;-58,2 %=23232&#10;-57,8 %=23296&#10;-57,4 %=23360&#10;-57 %=23424&#10;-56,6 %=23488&#10;-56,3 %=23552&#10;-55,9 %=23616&#10;-55,5 %=23680&#10;-55,1 %=23744&#10;-54,7 %=23808&#10;-54,3 %=23872&#10;-53,9 %=23936&#10;-53,5 %=24000&#10;-53,1 %=24064&#10;-52,7 %=24128&#10;-52,3 %=24192&#10;-52 %=24256&#10;-51,6 %=24320&#10;-51,2 %=24384&#10;-50,8 %=24448&#10;-50,4 %=24512&#10;-50 %=24576&#10;-49,6 %=24640&#10;-49,2 %=24704&#10;-48,8 %=24768&#10;-48,4 %=24832&#10;-48 %=24896&#10;-47,7 %=24960&#10;-47,3 %=25024&#10;-46,9 %=25088&#10;-46,5 %=25152&#10;-46,1 %=25216&#10;-45,7 %=25280&#10;-45,3 %=25344&#10;-44,9 %=25408&#10;-44,5 %=25472&#10;-44,1 %=25536&#10;-43,8 %=25600&#10;-43,4 %=25664&#10;-43 %=25728&#10;-42,6 %=25792&#10;-42,2 %=25856&#10;-41,8 %=25920&#10;-41,4 %=25984&#10;-41 %=26048&#10;-40,6 %=26112&#10;-40,2 %=26176&#10;-39,8 %=26240&#10;-39,5 %=26304&#10;-39,1 %=26368&#10;-38,7 %=26432&#10;-38,3 %=26496&#10;-37,9 %=26560&#10;-37,5 %=26624&#10;-37,1 %=26688&#10;-36,7 %=26752&#10;-36,3 %=26816&#10;-35,9 %=26880&#10;-35,5 %=26944&#10;-35,2 %=27008&#10;-34,8 %=27072&#10;-34,4 %=27136&#10;-34 %=27200&#10;-33,6 %=27264&#10;-33,2 %=27328&#10;-32,8 %=27392&#10;-32,4 %=27456&#10;-32 %=27520&#10;-31,6 %=27584&#10;-31,3 %=27648&#10;-30,9 %=27712&#10;-30,5 %=27776&#10;-30,1 %=27840&#10;-29,7 %=27904&#10;-29,3 %=27968&#10;-28,9 %=28032&#10;-28,5 %=28096&#10;-28,1 %=28160&#10;-27,7 %=28224&#10;-27,3 %=28288&#10;-27 %=28352&#10;-26,6 %=28416&#10;-26,2 %=28480&#10;-25,8 %=28544&#10;-25,4 %=28608&#10;-25 %=28672&#10;-24,6 %=28736&#10;-24,2 %=28800&#10;-23,8 %=28864&#10;-23,4 %=28928&#10;-23 %=28992&#10;-22,7 %=29056&#10;-22,3 %=29120&#10;-21,9 %=29184&#10;-21,5 %=29248&#10;-21,1 %=29312&#10;-20,7 %=29376&#10;-20,3 %=29440&#10;-19,9 %=29504&#10;-19,5 %=29568&#10;-19,1 %=29632&#10;-18,8 %=29696&#10;-18,4 %=29760&#10;-18 %=29824&#10;-17,6 %=29888&#10;-17,2 %=29952&#10;-16,8 %=30016&#10;-16,4 %=30080&#10;-16 %=30144&#10;-15,6 %=30208&#10;-15,2 %=30272&#10;-14,8 %=30336&#10;-14,5 %=30400&#10;-14,1 %=30464&#10;-13,7 %=30528&#10;-13,3 %=30592&#10;-12,9 %=30656&#10;-12,5 %=30720&#10;-12,1 %=30784&#10;-11,7 %=30848&#10;-11,3 %=30912&#10;-10,9 %=30976&#10;-10,5 %=31040&#10;-10,2 %=31104&#10;-9,8 %=31168&#10;-9,4 %=31232&#10;-9 %=31296&#10;-8,6 %=31360&#10;-8,2 %=31424&#10;-7,8 %=31488&#10;-7,4 %=31552&#10;-7 %=31616&#10;-6,6 %=31680&#10;-6,3 %=31744&#10;-5,9 %=31808&#10;-5,5 %=31872&#10;-5,1 %=31936&#10;-4,7 %=32000&#10;-4,3 %=32064&#10;-3,9 %=32128&#10;-3,5 %=32192&#10;-3,1 %=32256&#10;-2,7 %=32320&#10;-2,3 %=32384&#10;-2 %=32448&#10;-1,6 %=32512&#10;-1,2 %=32576&#10;-0,8 %=32640&#10;-0,4 %=32704&#10;0 %=32768&#10;0,4 %=32832&#10;0,8 %=32896&#10;1,2 %=32960&#10;1,6 %=33024&#10;2 %=33088&#10;2,3 %=33152&#10;2,7 %=33216&#10;3,1 %=33280&#10;3,5 %=33344&#10;3,9 %=33408&#10;4,3 %=33472&#10;4,7 %=33536&#10;5,1 %=33600&#10;5,5 %=33664&#10;5,9 %=33728&#10;6,3 %=33792&#10;6,6 %=33856&#10;7 %=33920&#10;7,4 %=33984&#10;7,8 %=34048&#10;8,2 %=34112&#10;8,6 %=34176&#10;9 %=34240&#10;9,4 %=34304&#10;9,8 %=34368&#10;10,2 %=34432&#10;10,5 %=34496&#10;10,9 %=34560&#10;11,3 %=34624&#10;11,7 %=34688&#10;12,1 %=34752&#10;12,5 %=34816&#10;12,9 %=34880&#10;13,3 %=34944&#10;13,7 %=35008&#10;14,1 %=35072&#10;14,5 %=35136&#10;14,8 %=35200&#10;15,2 %=35264&#10;15,6 %=35328&#10;16 %=35392&#10;16,4 %=35456&#10;16,8 %=35520&#10;17,2 %=35584&#10;17,6 %=35648&#10;18 %=35712&#10;18,4 %=35776&#10;18,8 %=35840&#10;19,1 %=35904&#10;19,5 %=35968&#10;19,9 %=36032&#10;20,3 %=36096&#10;20,7 %=36160&#10;21,1 %=36224&#10;21,5 %=36288&#10;21,9 %=36352&#10;22,3 %=36416&#10;22,7 %=36480&#10;23 %=36544&#10;23,4 %=36608&#10;23,8 %=36672&#10;24,2 %=36736&#10;24,6 %=36800&#10;25 %=36864&#10;25,4 %=36928&#10;25,8 %=36992&#10;26,2 %=37056&#10;26,6 %=37120&#10;27 %=37184&#10;27,3 %=37248&#10;27,7 %=37312&#10;28,1 %=37376&#10;28,5 %=37440&#10;28,9 %=37504&#10;29,3 %=37568&#10;29,7 %=37632&#10;30,1 %=37696&#10;30,5 %=37760&#10;30,9 %=37824&#10;31,3 %=37888&#10;31,6 %=37952&#10;32 %=38016&#10;32,4 %=38080&#10;32,8 %=38144&#10;33,2 %=38208&#10;33,6 %=38272&#10;34 %=38336&#10;34,4 %=38400&#10;34,8 %=38464&#10;35,2 %=38528&#10;35,5 %=38592&#10;35,9 %=38656&#10;36,3 %=38720&#10;36,7 %=38784&#10;37,1 %=38848&#10;37,5 %=38912&#10;37,9 %=38976&#10;38,3 %=39040&#10;38,7 %=39104&#10;39,1 %=39168&#10;39,5 %=39232&#10;39,8 %=39296&#10;40,2 %=39360&#10;40,6 %=39424&#10;41 %=39488&#10;41,4 %=39552&#10;41,8 %=39616&#10;42,2 %=39680&#10;42,6 %=39744&#10;43 %=39808&#10;43,4 %=39872&#10;43,8 %=39936&#10;44,1 %=40000&#10;44,5 %=40064&#10;44,9 %=40128&#10;45,3 %=40192&#10;45,7 %=40256&#10;46,1 %=40320&#10;46,5 %=40384&#10;46,9 %=40448&#10;47,3 %=40512&#10;47,7 %=40576&#10;48 %=40640&#10;48,4 %=40704&#10;48,8 %=40768&#10;49,2 %=40832&#10;49,6 %=40896&#10;50 %=40960&#10;50,4 %=41024&#10;50,8 %=41088&#10;51,2 %=41152&#10;51,6 %=41216&#10;52 %=41280&#10;52,3 %=41344&#10;52,7 %=41408&#10;53,1 %=41472&#10;53,5 %=41536&#10;53,9 %=41600&#10;54,3 %=41664&#10;54,7 %=41728&#10;55,1 %=41792&#10;55,5 %=41856&#10;55,9 %=41920&#10;56,3 %=41984&#10;56,6 %=42048&#10;57 %=42112&#10;57,4 %=42176&#10;57,8 %=42240&#10;58,2 %=42304&#10;58,6 %=42368&#10;59 %=42432&#10;59,4 %=42496&#10;59,8 %=42560&#10;60,2 %=42624&#10;60,5 %=42688&#10;60,9 %=42752&#10;61,3 %=42816&#10;61,7 %=42880&#10;62,1 %=42944&#10;62,5 %=43008&#10;62,9 %=43072&#10;63,3 %=43136&#10;63,7 %=43200&#10;64,1 %=43264&#10;64,5 %=43328&#10;64,8 %=43392&#10;65,2 %=43456&#10;65,6 %=43520&#10;66 %=43584&#10;66,4 %=43648&#10;66,8 %=43712&#10;67,2 %=43776&#10;67,6 %=43840&#10;68 %=43904&#10;68,4 %=43968&#10;68,8 %=44032&#10;69,1 %=44096&#10;69,5 %=44160&#10;69,9 %=44224&#10;70,3 %=44288&#10;70,7 %=44352&#10;71,1 %=44416&#10;71,5 %=44480&#10;71,9 %=44544&#10;72,3 %=44608&#10;72,7 %=44672&#10;73 %=44736&#10;73,4 %=44800&#10;73,8 %=44864&#10;74,2 %=44928&#10;74,6 %=44992&#10;75 %=45056&#10;75,4 %=45120&#10;75,8 %=45184&#10;76,2 %=45248&#10;76,6 %=45312&#10;77 %=45376&#10;77,3 %=45440&#10;77,7 %=45504&#10;78,1 %=45568&#10;78,5 %=45632&#10;78,9 %=45696&#10;79,3 %=45760&#10;79,7 %=45824&#10;80,1 %=45888&#10;80,5 %=45952&#10;80,9 %=46016&#10;81,3 %=46080&#10;81,6 %=46144&#10;82 %=46208&#10;82,4 %=46272&#10;82,8 %=46336&#10;83,2 %=46400&#10;83,6 %=46464&#10;84 %=46528&#10;84,4 %=46592&#10;84,8 %=46656&#10;85,2 %=46720&#10;85,5 %=46784&#10;85,9 %=46848&#10;86,3 %=46912&#10;86,7 %=46976&#10;87,1 %=47040&#10;87,5 %=47104&#10;87,9 %=47168&#10;88,3 %=47232&#10;88,7 %=47296&#10;89,1 %=47360&#10;89,5 %=47424&#10;89,8 %=47488&#10;90,2 %=47552&#10;90,6 %=47616&#10;91 %=47680&#10;91,4 %=47744&#10;91,8 %=47808&#10;92,2 %=47872&#10;92,6 %=47936&#10;93 %=48000&#10;93,4 %=48064&#10;93,8 %=48128&#10;94,1 %=48192&#10;94,5 %=48256&#10;94,9 %=48320&#10;95,3 %=48384&#10;95,7 %=48448&#10;96,1 %=48512&#10;96,5 %=48576&#10;96,9 %=48640&#10;97,3 %=48704&#10;97,7 %=48768&#10;98 %=48832&#10;98,4 %=48896&#10;98,8 %=48960&#10;99,2 %=49024&#10;99,6 %=49088&#10;100 %=49152"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="2df24869af040000feffffffffffffff"
               componentRectangle="552 16 100 70" uiType="uiFixedImageSlider"
               componentTabName="AlgoTab" componentTabId="8"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="255" vstIndex="82" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="07" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Delay1Diffusion" modulatorMin="0" modulatorValue="128">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Diffusion"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="128" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0=32768&#10;0,4=32832&#10;0,8=32896&#10;1,2=32960&#10;1,6=33024&#10;2=33088&#10;2,4=33152&#10;2,7=33216&#10;3,1=33280&#10;3,5=33344&#10;3,9=33408&#10;4,3=33472&#10;4,7=33536&#10;5,1=33600&#10;5,5=33664&#10;5,9=33728&#10;6,3=33792&#10;6,7=33856&#10;7,1=33920&#10;7,5=33984&#10;7,8=34048&#10;8,2=34112&#10;8,6=34176&#10;9=34240&#10;9,4=34304&#10;9,8=34368&#10;10,2=34432&#10;10,6=34496&#10;11=34560&#10;11,4=34624&#10;11,8=34688&#10;12,2=34752&#10;12,5=34816&#10;12,9=34880&#10;13,3=34944&#10;13,7=35008&#10;14,1=35072&#10;14,5=35136&#10;14,9=35200&#10;15,3=35264&#10;15,7=35328&#10;16,1=35392&#10;16,5=35456&#10;16,9=35520&#10;17,3=35584&#10;17,6=35648&#10;18=35712&#10;18,4=35776&#10;18,8=35840&#10;19,2=35904&#10;19,6=35968&#10;20=36032&#10;20,4=36096&#10;20,8=36160&#10;21,2=36224&#10;21,6=36288&#10;22=36352&#10;22,4=36416&#10;22,7=36480&#10;23,1=36544&#10;23,5=36608&#10;23,9=36672&#10;24,3=36736&#10;24,7=36800&#10;25,1=36864&#10;25,5=36928&#10;25,9=36992&#10;26,3=37056&#10;26,7=37120&#10;27,1=37184&#10;27,5=37248&#10;27,8=37312&#10;28,2=37376&#10;28,6=37440&#10;29=37504&#10;29,4=37568&#10;29,8=37632&#10;30,2=37696&#10;30,6=37760&#10;31=37824&#10;31,4=37888&#10;31,8=37952&#10;32,2=38016&#10;32,5=38080&#10;32,9=38144&#10;33,3=38208&#10;33,7=38272&#10;34,1=38336&#10;34,5=38400&#10;34,9=38464&#10;35,3=38528&#10;35,7=38592&#10;36,1=38656&#10;36,5=38720&#10;36,9=38784&#10;37,3=38848&#10;37,6=38912&#10;38=38976&#10;38,4=39040&#10;38,8=39104&#10;39,2=39168&#10;39,6=39232&#10;40=39296&#10;40,4=39360&#10;40,8=39424&#10;41,2=39488&#10;41,6=39552&#10;42=39616&#10;42,4=39680&#10;42,7=39744&#10;43,1=39808&#10;43,5=39872&#10;43,9=39936&#10;44,3=40000&#10;44,7=40064&#10;45,1=40128&#10;45,5=40192&#10;45,9=40256&#10;46,3=40320&#10;46,7=40384&#10;47,1=40448&#10;47,5=40512&#10;47,8=40576&#10;48,2=40640&#10;48,6=40704&#10;49=40768&#10;49,4=40832&#10;49,8=40896&#10;50,2=40960&#10;50,6=41024&#10;51=41088&#10;51,4=41152&#10;51,8=41216&#10;52,2=41280&#10;52,5=41344&#10;52,9=41408&#10;53,3=41472&#10;53,7=41536&#10;54,1=41600&#10;54,5=41664&#10;54,9=41728&#10;55,3=41792&#10;55,7=41856&#10;56,1=41920&#10;56,5=41984&#10;56,9=42048&#10;57,3=42112&#10;57,6=42176&#10;58=42240&#10;58,4=42304&#10;58,8=42368&#10;59,2=42432&#10;59,6=42496&#10;60=42560&#10;60,4=42624&#10;60,8=42688&#10;61,2=42752&#10;61,6=42816&#10;62=42880&#10;62,4=42944&#10;62,7=43008&#10;63,1=43072&#10;63,5=43136&#10;63,9=43200&#10;64,3=43264&#10;64,7=43328&#10;65,1=43392&#10;65,5=43456&#10;65,9=43520&#10;66,3=43584&#10;66,7=43648&#10;67,1=43712&#10;67,5=43776&#10;67,8=43840&#10;68,2=43904&#10;68,6=43968&#10;69=44032&#10;69,4=44096&#10;69,8=44160&#10;70,2=44224&#10;70,6=44288&#10;71=44352&#10;71,4=44416&#10;71,8=44480&#10;72,2=44544&#10;72,5=44608&#10;72,9=44672&#10;73,3=44736&#10;73,7=44800&#10;74,1=44864&#10;74,5=44928&#10;74,9=44992&#10;75,3=45056&#10;75,7=45120&#10;76,1=45184&#10;76,5=45248&#10;76,9=45312&#10;77,3=45376&#10;77,6=45440&#10;78=45504&#10;78,4=45568&#10;78,8=45632&#10;79,2=45696&#10;79,6=45760&#10;80=45824&#10;80,4=45888&#10;80,8=45952&#10;81,2=46016&#10;81,6=46080&#10;82=46144&#10;82,4=46208&#10;82,7=46272&#10;83,1=46336&#10;83,5=46400&#10;83,9=46464&#10;84,3=46528&#10;84,7=46592&#10;85,1=46656&#10;85,5=46720&#10;85,9=46784&#10;86,3=46848&#10;86,7=46912&#10;87,1=46976&#10;87,5=47040&#10;87,8=47104&#10;88,2=47168&#10;88,6=47232&#10;89=47296&#10;89,4=47360&#10;89,8=47424&#10;90,2=47488&#10;90,6=47552&#10;91=47616&#10;91,4=47680&#10;91,8=47744&#10;92,2=47808&#10;92,5=47872&#10;92,9=47936&#10;93,3=48000&#10;93,7=48064&#10;94,1=48128&#10;94,5=48192&#10;94,9=48256&#10;95,3=48320&#10;95,7=48384&#10;96,1=48448&#10;96,5=48512&#10;96,9=48576&#10;97,3=48640&#10;97,6=48704&#10;98=48768&#10;98,4=48832&#10;98,8=48896&#10;99,2=48960&#10;99,6=49024&#10;100=49088"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="8" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="656 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="15" vstIndex="83" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="08" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Delay1Rate" modulatorMin="0" modulatorValue="8">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Rate"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0=32768&#10;1=33792&#10;2=34816&#10;3=35840&#10;4=36864&#10;5=37888&#10;6=38912&#10;7=39936&#10;8=40960&#10;9=41984&#10;10=43008&#10;11=44032&#10;12=45056&#10;13=46080&#10;14=47104&#10;15=48128"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="8" componentTabName="AlgoTab"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="760 16 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="5" vstIndex="85" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="listbox1" modulatorMin="0" modulatorValue="2">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Abfrage Einzelparameter"
               componentMouseCursor="2" componentGroupName="modulator-8" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiListBoxContent="32768&#10;08 00 00 00&#10;8&#10;0&#10;0&#10;0"
               componentRectangle="152 8 79 121" uiListBoxRowHeight="16" uiListBoxBackgroundColour="ffffffff"
               uiListBoxHighlightBgColour="ffe0e0ea" uiListBoxHighlightFgColour="0xff000000"
               uiListBoxTextColour="0xff000000" uiListBoxFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiListBoxHighlightFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" uiListBoxOutline="0"
               uiListBoxOutlineColour="0xff000000" uiListBoxVScrollBgColour="ffe2d8d8"
               uiListBoxVScrollThumbColour="0xffababab" uiListBoxVScrollTrackColour="0xffff0000"
               uiListBoxHScrollBgColour="0xffffffff" uiListBoxHScrollThumbColour="0xffababab"
               uiListBoxHScrollTrackColour="0xffff0000" uiListBoxJustification="centred"
               uiListBoxMultipleSelection="0" uiListBoxItemClicked="-- None"
               uiListBoxItemDoubleClicked="-- None" uiListBoxItemDeleteKeyPressed="-- None"
               uiListBoxItemReturnKeyPressed="-- None" componentLayerUid="a84c2d78d41d0000feffffffffffffff"
               uiType="uiListBox"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="5" vstIndex="86" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="listbox2" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="listbox2"
               componentMouseCursor="2" componentGroupName="modulator-8" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiListBoxContent="5&#10;6&#10;6&#10;0&#10;0&#10;0"
               componentRectangle="232 8 61 124" uiListBoxRowHeight="16" uiListBoxBackgroundColour="0xffffffff"
               uiListBoxHighlightBgColour="ffc1c1d0" uiListBoxHighlightFgColour="0xff000000"
               uiListBoxTextColour="0xff000000" uiListBoxFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiListBoxHighlightFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" uiListBoxOutline="0"
               uiListBoxOutlineColour="0xff000000" uiListBoxVScrollBgColour="0xffffffff"
               uiListBoxVScrollThumbColour="0xffababab" uiListBoxVScrollTrackColour="0xffff0000"
               uiListBoxHScrollBgColour="0xffffffff" uiListBoxHScrollThumbColour="0xffababab"
               uiListBoxHScrollTrackColour="0xffff0000" uiListBoxJustification="centred"
               uiListBoxMultipleSelection="0" uiListBoxItemClicked="-- None"
               uiListBoxItemDoubleClicked="-- None" uiListBoxItemDeleteKeyPressed="-- None"
               uiListBoxItemReturnKeyPressed="-- None" uiType="uiListBox" componentLayerUid="a84c2d78d41d0000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="48" vstIndex="87" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="listbox3" modulatorMin="0" modulatorValue="32">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="dat"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiListBoxContent="01&#10;00&#10;b0&#10;00&#10;88&#10;fe&#10;bf&#10;00&#10;70&#10;00&#10;b0&#10;00&#10;a3&#10;00&#10;80&#10;00&#10;a7&#10;00&#10;80&#10;00&#10;80&#10;36&#10;20&#10;20&#10;20&#10;20&#10;20&#10;20&#10;20&#10;20&#10;20&#10;20&#10;20&#10;20&#10;20&#10;20&#10;20&#10;00&#10;00&#10;00&#10;00&#10;ff&#10;ff&#10;ff&#10;ff&#10;00&#10;00&#10;00&#10;00&#10;&#10;&#10;&#10;&#10;&#10;&#10;"
               componentRectangle="1056 8 45 657" uiListBoxRowHeight="12" uiListBoxBackgroundColour="0xffffffff"
               uiListBoxHighlightBgColour="ffffffff" uiListBoxHighlightFgColour="0xff000000"
               uiListBoxTextColour="0xff000000" uiListBoxFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiListBoxHighlightFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiListBoxOutline="0"
               uiListBoxOutlineColour="0xff000000" uiListBoxVScrollBgColour="0xffffffff"
               uiListBoxVScrollThumbColour="0xffababab" uiListBoxVScrollTrackColour="0xffff0000"
               uiListBoxHScrollBgColour="0xffffffff" uiListBoxHScrollThumbColour="0xffababab"
               uiListBoxHScrollTrackColour="0xffff0000" uiListBoxJustification="centred"
               uiListBoxMultipleSelection="0" uiListBoxItemClicked="-- None"
               uiListBoxItemDoubleClicked="-- None" uiListBoxItemDeleteKeyPressed="-- None"
               uiListBoxItemReturnKeyPressed="-- None" uiType="uiListBox" componentLayerUid="a84c2d78d41d0000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="0" vstIndex="88" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="listbox4" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="listbox4"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiListBoxContent="02 00 b0 00 80 fe bf 00 7c 00 ac 00 9c 00 80 80 b1 00 80 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff ff 00 00 00 00"
               componentRectangle="24 824 937 34" uiListBoxRowHeight="16" uiListBoxBackgroundColour="0xffffffff"
               uiListBoxHighlightBgColour="ffe5d9d9" uiListBoxHighlightFgColour="0xff000000"
               uiListBoxTextColour="0xff000000" uiListBoxFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiListBoxHighlightFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" uiListBoxOutline="0"
               uiListBoxOutlineColour="0xff000000" uiListBoxVScrollBgColour="0xffffffff"
               uiListBoxVScrollThumbColour="0xffababab" uiListBoxVScrollTrackColour="0xffff0000"
               uiListBoxHScrollBgColour="0xffffffff" uiListBoxHScrollThumbColour="0xffababab"
               uiListBoxHScrollTrackColour="0xffff0000" uiListBoxJustification="centred"
               uiListBoxMultipleSelection="0" uiListBoxItemClicked="-- None"
               uiListBoxItemDoubleClicked="-- None" uiListBoxItemDeleteKeyPressed="-- None"
               uiListBoxItemReturnKeyPressed="-- None" uiType="uiListBox" componentLayerUid="a84c2d78d41d0000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="48" vstIndex="89" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="listbox5" modulatorMin="0" modulatorValue="33">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="list"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiListBoxContent="01&#10;00&#10;b0&#10;00&#10;88&#10;fe&#10;bf&#10;00&#10;70&#10;00&#10;b0&#10;00&#10;a3&#10;00&#10;80&#10;00&#10;a7&#10;00&#10;80&#10;00&#10;80&#10;31&#10;32&#10;33&#10;34&#10;35&#10;36&#10;37&#10;38&#10;39&#10;3a&#10;3b&#10;3c&#10;3d&#10;3e&#10;3f&#10;40&#10;00&#10;00&#10;00&#10;00&#10;ff&#10;ff&#10;ff&#10;ff&#10;00&#10;00&#10;00&#10;00"
               componentRectangle="1016 8 43 656" uiListBoxRowHeight="12" uiListBoxBackgroundColour="0xffffffff"
               uiListBoxHighlightBgColour="ffffffff" uiListBoxHighlightFgColour="0xff000000"
               uiListBoxTextColour="0xff000000" uiListBoxFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiListBoxHighlightFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiListBoxOutline="0"
               uiListBoxOutlineColour="0xff000000" uiListBoxVScrollBgColour="0xffffffff"
               uiListBoxVScrollThumbColour="0xffababab" uiListBoxVScrollTrackColour="0xffff0000"
               uiListBoxHScrollBgColour="0xffffffff" uiListBoxHScrollThumbColour="0xffababab"
               uiListBoxHScrollTrackColour="0xffff0000" uiListBoxJustification="centred"
               uiListBoxMultipleSelection="0" uiListBoxItemClicked="-- None"
               uiListBoxItemDoubleClicked="-- None" uiListBoxItemDeleteKeyPressed="-- None"
               uiListBoxItemReturnKeyPressed="-- None" componentLayerUid="a84c2d78d41d0000feffffffffffffff"
               uiType="uiListBox"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="0" vstIndex="90" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="listbox6" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="listbox6"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiListBoxContent="abcde&#230;&#128;&#232;&#201;JK&#204;&#205;x&#207;&#208;"
               componentRectangle="344 696 149 44" uiListBoxRowHeight="16" uiListBoxBackgroundColour="0xffffffff"
               uiListBoxHighlightBgColour="ffd0d0e5" uiListBoxHighlightFgColour="0xff000000"
               uiListBoxTextColour="0xff000000" uiListBoxFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiListBoxHighlightFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" uiListBoxOutline="0"
               uiListBoxOutlineColour="0xff000000" uiListBoxVScrollBgColour="0xffffffff"
               uiListBoxVScrollThumbColour="0xffababab" uiListBoxVScrollTrackColour="0xffff0000"
               uiListBoxHScrollBgColour="0xffffffff" uiListBoxHScrollThumbColour="0xffababab"
               uiListBoxHScrollTrackColour="0xffff0000" uiListBoxJustification="centred"
               uiListBoxMultipleSelection="0" uiListBoxItemClicked="-- None"
               uiListBoxItemDoubleClicked="-- None" uiListBoxItemDeleteKeyPressed="-- None"
               uiListBoxItemReturnKeyPressed="-- None" componentLayerUid="a84c2d78d41d0000feffffffffffffff"
               uiType="uiListBox"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="254" vstIndex="91" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="06" modulatorCustomName="" modulatorCustomIndexGroup="32"
             modulatorCustomNameGroup="BIDIR" modulatorVstNameFormat="%n"
             luaModulatorValueChange="chMod_Uni_ValByName" name="RevPredelayFeedback"
             modulatorMin="0" modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Predelay Feedback"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="54.400000000000006"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="-15" uiSliderMax="16" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="127" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="-100%=16385&#10;-99%=16514&#10;-98%=16643&#10;-98%=16772&#10;-97%=16901&#10;-96%=17030&#10;-95%=17159&#10;-94%=17288&#10;-94%=17417&#10;-93%=17546&#10;-92%=17675&#10;-91%=17804&#10;-91%=17933&#10;-90%=18062&#10;-89%=18191&#10;-88%=18320&#10;-87%=18449&#10;-87%=18578&#10;-86%=18707&#10;-85%=18836&#10;-84%=18965&#10;-83%=19094&#10;-83%=19223&#10;-82%=19352&#10;-81%=19481&#10;-80%=19610&#10;-80%=19739&#10;-79%=19868&#10;-78%=19997&#10;-77%=20126&#10;-76%=20255&#10;-76%=20384&#10;-75%=20513&#10;-74%=20642&#10;-73%=20771&#10;-72%=20900&#10;-72%=21029&#10;-71%=21158&#10;-70%=21287&#10;-69%=21416&#10;-69%=21545&#10;-68%=21674&#10;-67%=21803&#10;-66%=21932&#10;-65%=22061&#10;-65%=22190&#10;-64%=22319&#10;-63%=22448&#10;-62%=22577&#10;-61%=22706&#10;-61%=22835&#10;-60%=22964&#10;-59%=23093&#10;-58%=23222&#10;-57%=23351&#10;-57%=23480&#10;-56%=23609&#10;-55%=23738&#10;-54%=23867&#10;-54%=23996&#10;-53%=24125&#10;-52%=24254&#10;-51%=24383&#10;-50%=24512&#10;-50%=24641&#10;-49%=24770&#10;-48%=24899&#10;-47%=25028&#10;-46%=25157&#10;-46%=25286&#10;-45%=25415&#10;-44%=25544&#10;-43%=25673&#10;-43%=25802&#10;-42%=25931&#10;-41%=26060&#10;-40%=26189&#10;-39%=26318&#10;-39%=26447&#10;-38%=26576&#10;-37%=26705&#10;-36%=26834&#10;-35%=26963&#10;-35%=27092&#10;-34%=27221&#10;-33%=27350&#10;-32%=27479&#10;-31%=27608&#10;-31%=27737&#10;-30%=27866&#10;-29%=27995&#10;-28%=28124&#10;-28%=28253&#10;-27%=28382&#10;-26%=28511&#10;-25%=28640&#10;-24%=28769&#10;-24%=28898&#10;-23%=29027&#10;-22%=29156&#10;-21%=29285&#10;-20%=29414&#10;-20%=29543&#10;-19%=29672&#10;-18%=29801&#10;-17%=29930&#10;-17%=30059&#10;-16%=30188&#10;-15%=30317&#10;-14%=30446&#10;-13%=30575&#10;-13%=30704&#10;-12%=30833&#10;-11%=30962&#10;-10%=31091&#10;-9%=31220&#10;-9%=31349&#10;-8%=31478&#10;-7%=31607&#10;-6%=31736&#10;-6%=31865&#10;-5%=31994&#10;-4%=32123&#10;-3%=32252&#10;-2%=32381&#10;-2%=32510&#10;-1%=32639&#10;0%=32768&#10;1%=32897&#10;2%=33026&#10;2%=33155&#10;3%=33284&#10;4%=33413&#10;5%=33542&#10;6%=33671&#10;6%=33800&#10;7%=33929&#10;8%=34058&#10;9%=34187&#10;9%=34316&#10;10%=34445&#10;11%=34574&#10;12%=34703&#10;13%=34832&#10;13%=34961&#10;14%=35090&#10;15%=35219&#10;16%=35348&#10;17%=35477&#10;17%=35606&#10;18%=35735&#10;19%=35864&#10;20%=35993&#10;20%=36122&#10;21%=36251&#10;22%=36380&#10;23%=36509&#10;24%=36638&#10;24%=36767&#10;25%=36896&#10;26%=37025&#10;27%=37154&#10;28%=37283&#10;28%=37412&#10;29%=37541&#10;30%=37670&#10;31%=37799&#10;31%=37928&#10;32%=38057&#10;33%=38186&#10;34%=38315&#10;35%=38444&#10;35%=38573&#10;36%=38702&#10;37%=38831&#10;38%=38960&#10;39%=39089&#10;39%=39218&#10;40%=39347&#10;41%=39476&#10;42%=39605&#10;43%=39734&#10;43%=39863&#10;44%=39992&#10;45%=40121&#10;46%=40250&#10;46%=40379&#10;47%=40508&#10;48%=40637&#10;49%=40766&#10;50%=40895&#10;50%=41024&#10;51%=41153&#10;52%=41282&#10;53%=41411&#10;54%=41540&#10;54%=41669&#10;55%=41798&#10;56%=41927&#10;57%=42056&#10;57%=42185&#10;58%=42314&#10;59%=42443&#10;60%=42572&#10;61%=42701&#10;61%=42830&#10;62%=42959&#10;63%=43088&#10;64%=43217&#10;65%=43346&#10;65%=43475&#10;66%=43604&#10;67%=43733&#10;68%=43862&#10;69%=43991&#10;69%=44120&#10;70%=44249&#10;71%=44378&#10;72%=44507&#10;72%=44636&#10;73%=44765&#10;74%=44894&#10;75%=45023&#10;76%=45152&#10;76%=45281&#10;77%=45410&#10;78%=45539&#10;79%=45668&#10;80%=45797&#10;80%=45926&#10;81%=46055&#10;82%=46184&#10;83%=46313&#10;83%=46442&#10;84%=46571&#10;85%=46700&#10;86%=46829&#10;87%=46958&#10;87%=47087&#10;88%=47216&#10;89%=47345&#10;90%=47474&#10;91%=47603&#10;91%=47732&#10;92%=47861&#10;93%=47990&#10;94%=48119&#10;94%=48248&#10;95%=48377&#10;96%=48506&#10;97%=48635&#10;98%=48764&#10;98%=48893&#10;99%=49022&#10;100%=49151"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="2df24869af040000feffffffffffffff"
               componentRectangle="656 16 100 70" uiType="uiFixedImageSlider"
               componentTabName="AlgoTab" componentTabId="1"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-2" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Lex-icon"
               uiGroupTextColour="ffffffff" uiGroupOutlineColour1="ff000000"
               uiGroupOutlineColour2="ff000000" uiGroupBackgroundColour1="ff000000"
               uiGroupBackgroundColour2="ff000000" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="0 0 1003 665"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="topLeft" uiGroupTextFont="&lt;Monospaced&gt;;17;1;0;0;0;1;3"
               uiGroupOutlineThickness="5" uiGroupOutlineRoundAngle="2" uiGroupTextMargin="13"
               uiType="uiGroup" componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-3" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-3"
               componentMouseCursor="2" componentGroupName="modulator-2" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="LXP-1" uiGroupTextColour="ffffffff"
               uiGroupOutlineColour1="ff235aaa" uiGroupOutlineColour2="ff2762b8"
               uiGroupBackgroundColour1="ff2762b8" uiGroupBackgroundColour2="ff2762b8"
               uiGroupOutlineGradientType="Vertical" uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage="" componentRectangle="104 8 891 28" uiGroupBackgroundImageLayout="36"
               uiGroupBackgroundImageAlpha="255" uiGroupTextPlacement="right"
               uiGroupTextFont="&lt;Monospaced&gt;;17;1;0;0;0;1;3" uiGroupOutlineThickness="2"
               uiGroupOutlineRoundAngle="0" uiGroupTextMargin="3" uiType="uiGroup"
               componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="93" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="renamePreset"
             name="renPset" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="9217" midiMessageCtrlrValue="-9216" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Rename"
               componentMouseCursor="2" componentGroupName="modulator-6" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="0.5" componentEffectColour="ff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="1"
               uiImageButtonResource="LED_Button_80x80x2knob" componentRectangle="192 88 80 50"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="ffffffff"
               uiImageButtonContent="False&#10;True" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="2df24869af040000feffffffffffffff" uiType="uiImageButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="200" vstIndex="94" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="PresetNumberCC" modulatorMin="0" modulatorValue="19">
    <midi midiMessageType="7" midiMessageChannelOverride="0" midiMessageChannel="16"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="PresetNumbercc"
               componentMouseCursor="2" componentGroupName="modulator-12" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="Black Plastic small 01" resourceImageWidth="80"
               resourceImageHeight="80" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="200" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="a84c2d78d41d0000feffffffffffffff"
               componentRectangle="24 16 64 64" uiType="uiImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="95" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="getAllPsetsDump"
             name="GetAllPsets" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="fffafafa"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="GetAllPsets"
               componentMouseCursor="2" componentGroupName="modulator-2" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="2" componentEffectColour="0xff000000"
               componentEffectOffsetX="2" componentEffectOffsetY="2" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="1"
               uiImageButtonResource="LED_Button_80x80x2knob" componentRectangle="312 40 80 50"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="False&#10;True" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiType="uiImageButton" componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="47" vstIndex="96" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="ZifferNr" modulatorMin="32" modulatorValue="47">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="16"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="ZifferNr"
               componentMouseCursor="2" componentGroupName="modulator-9" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="Black Plastic small 01" resourceImageWidth="80"
               resourceImageHeight="80" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="32" uiSliderMax="47" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiType="uiImageSlider"
               componentRectangle="16 24 64 64" componentLayerUid="a84c2d78d41d0000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="126" vstIndex="97" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="listBox_Nr_Row"
             name="Pset_ListBox" modulatorMin="0" modulatorValue="10">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Pset_ListBox"
               componentMouseCursor="2" componentGroupName="modulator-6" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="2" componentEffectColour="ff235aaa"
               componentEffectOffsetX="1" componentEffectOffsetY="1" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiListBoxContent="1  -  Tight Room      &#10;2  -  RevRepeat       &#10;3  -  Full Chorus     &#10;4  -  Image           &#10;5  -  Image Bigger    &#10;6  -  6               &#10;7  -  gb              &#10;8  -  Image Bigger    &#10;9  -  RevRepeat       &#10;10  -  12345654        &#10;11  -  gb              &#10;12  -  SoBig           &#10;13  -  Image Bigger    &#10;14  -  Image Bigger    &#10;15  -  Image Bigger    &#10;16  -                  &#10;17  -  Tight Room  1   &#10;18  -  Tight Room 22   &#10;19  -  Tight Room      &#10;20  -  Tight Room  12  &#10;21  -  Tight Room      &#10;22  -  Tight Room      &#10;23  -  Full Chorus     &#10;24  -  Image 123444444 &#10;25  -  Blubberrrrr     &#10;26  -  Test            &#10;27  -  27              &#10;28  -  Test 2          &#10;29  -  29              &#10;30  -  Tight Room      &#10;31  -  12345           &#10;32  -  Tight Room      &#10;33  -                  &#10;34  -                  &#10;35  -  RevRepeat       &#10;36  -  Full Chorus     &#10;37  -                  &#10;38  -                  &#10;39  -  Image Bigger    &#10;40  -  RevRepeat       &#10;41  -                  &#10;42  -                  &#10;43  -                  &#10;44  -                  &#10;45  -                  &#10;46  -                  &#10;47  -                  &#10;48  -                  &#10;49  -                  &#10;50  -                  &#10;51  -                  &#10;52  -                  &#10;53  -                  &#10;54  -                  &#10;55  -                  &#10;56  -                  &#10;57  -                  &#10;58  -                  &#10;59  -                  &#10;60  -                  &#10;61  -                  &#10;62  -                  &#10;63  -                  &#10;64  -                  &#10;65  -                  &#10;66  -                  &#10;67  -                  &#10;68  -                  &#10;69  -                  &#10;70  -                  &#10;71  -                  &#10;72  -                  &#10;73  -                  &#10;74  -                  &#10;75  -                  &#10;76  -                  &#10;77  -                  &#10;78  -                  &#10;79  -                  &#10;80  -                  &#10;81  -                  &#10;82  -                  &#10;83  -                  &#10;84  -                  &#10;85  -                  &#10;86  -                  &#10;87  -                  &#10;88  -                  &#10;89  -                  &#10;90  -                  &#10;91  -                  &#10;92  -                  &#10;93  -                  &#10;94  -                  &#10;95  -                  &#10;96  -                  &#10;97  -                  &#10;98  -                  &#10;99  -                  &#10;100  -                  &#10;101  -                  &#10;102  -                  &#10;103  -                  &#10;104  -                  &#10;105  -                  &#10;106  -                  &#10;107  -                  &#10;108  -                  &#10;109  -                  &#10;110  -                  &#10;111  -                  &#10;112  -                  &#10;113  -                  &#10;114  -                  &#10;115  -                  &#10;116  -                  &#10;117  -                  &#10;118  -                  &#10;119  -                  &#10;120  -                  &#10;121  -                  &#10;122  -                  &#10;123  -                  &#10;124  -                  &#10;125  -                  &#10;126  -                  &#10;127  -  123456789:;&lt;=&gt;?@"
               componentRectangle="8 24 180 364" uiListBoxRowHeight="15" uiListBoxBackgroundColour="235aaa"
               uiListBoxHighlightBgColour="ffd7dce5" uiListBoxHighlightFgColour="ff000000"
               uiListBoxTextColour="ffffffff" uiListBoxFont="&lt;Sans-Serif&gt;;15;0;0;0;0;1;3"
               uiListBoxHighlightFont="&lt;Sans-Serif&gt;;15;0;0;0;0;1;3" uiListBoxOutline="1"
               uiListBoxOutlineColour="2f51ce" uiListBoxVScrollBgColour="ff4b5c99"
               uiListBoxVScrollThumbColour="0xffababab" uiListBoxVScrollTrackColour="ff6a7d92"
               uiListBoxHScrollBgColour="0xffffffff" uiListBoxHScrollThumbColour="0xffababab"
               uiListBoxHScrollTrackColour="0xffff0000" uiListBoxJustification="centredLeft"
               uiListBoxMultipleSelection="0" uiListBoxItemClicked="-- None"
               uiListBoxItemDoubleClicked="-- None" uiListBoxItemDeleteKeyPressed="-- None"
               uiListBoxItemReturnKeyPressed="-- None" uiType="uiListBox" componentLayerUid="2df24869af040000feffffffffffffff"
               componentTabName="" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="15" vstIndex="98" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="00" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Tester0" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Tester0"
               componentMouseCursor="2" componentGroupName="modulator-12" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0,6 s=32768&#10;1,2 s=33792&#10;1,7 s=34816&#10;2,3 s=35840&#10;2,8 s=36864&#10;3,4 s=37888&#10;4,0 s=38912&#10;4,5 s=39936&#10;5,1 s=40960&#10;5,6 s=41984&#10;6,2 s=43008&#10;6,8 s=44032&#10;7,3 s=45056&#10;7,9 s=46080&#10;8,4 s=47104&#10;9,0 s=48128"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="0" componentTabName=""
               componentLayerUid="a84c2d78d41d0000feffffffffffffff" componentRectangle="8 160 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="262" vstIndex="99" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="10" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Tester1" modulatorMin="0" modulatorValue="255">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Tester1"
               componentMouseCursor="2" componentGroupName="modulator-12" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0 ms=32768&#10;1 ms=32832&#10;2 ms=32896&#10;3 ms=32960&#10;4 ms=33024&#10;5 ms=33088&#10;6 ms=33152&#10;7 ms=33216&#10;8 ms=33280&#10;9 ms=33344&#10;10 ms=33408&#10;11 ms=33472&#10;12 ms=33536&#10;13 ms=33600&#10;14 ms=33664&#10;15 ms=33728&#10;16 ms=33792&#10;17 ms=33856&#10;18 ms=33920&#10;19 ms=33984&#10;20 ms=34048&#10;21 ms=34112&#10;22 ms=34176&#10;23 ms=34240&#10;24 ms=34304&#10;25 ms=34368&#10;26 ms=34432&#10;27 ms=34496&#10;28 ms=34560&#10;29 ms=34624&#10;30 ms=34688&#10;31 ms=34752&#10;32 ms=34816&#10;33 ms=34880&#10;34 ms=34944&#10;35 ms=35008&#10;36 ms=35072&#10;37 ms=35136&#10;38 ms=35200&#10;39 ms=35264&#10;40 ms=35328&#10;41 ms=35392&#10;42 ms=35456&#10;43 ms=35520&#10;44 ms=35584&#10;45 ms=35648&#10;46 ms=35712&#10;47 ms=35776&#10;48 ms=35840&#10;49 ms=35904&#10;50 ms=35968&#10;51 ms=36032&#10;52 ms=36096&#10;53 ms=36160&#10;54 ms=36224&#10;55 ms=36288&#10;56 ms=36352&#10;57 ms=36416&#10;58 ms=36480&#10;59 ms=36544&#10;60 ms=36608&#10;61 ms=36672&#10;62 ms=36736&#10;63 ms=36800&#10;64 ms=36864&#10;65 ms=36928&#10;66 ms=36992&#10;67 ms=37056&#10;68 ms=37120&#10;69 ms=37184&#10;70 ms=37248&#10;71 ms=37312&#10;72 ms=37376&#10;73 ms=37440&#10;74 ms=37504&#10;75 ms=37568&#10;76 ms=37632&#10;77 ms=37696&#10;78 ms=37760&#10;79 ms=37824&#10;80 ms=37888&#10;81 ms=37952&#10;82 ms=38016&#10;83 ms=38080&#10;84 ms=38144&#10;85 ms=38208&#10;86 ms=38272&#10;87 ms=38336&#10;88 ms=38400&#10;89 ms=38464&#10;90 ms=38528&#10;91 ms=38592&#10;92 ms=38656&#10;93 ms=38720&#10;94 ms=38784&#10;95 ms=38848&#10;96 ms=38912&#10;97 ms=38976&#10;98 ms=39040&#10;99 ms=39104&#10;100 ms=39168&#10;101 ms=39232&#10;102 ms=39296&#10;103 ms=39360&#10;104 ms=39424&#10;105 ms=39488&#10;106 ms=39552&#10;107 ms=39616&#10;108 ms=39680&#10;109 ms=39744&#10;110 ms=39808&#10;111 ms=39872&#10;112 ms=39936&#10;113 ms=40000&#10;114 ms=40064&#10;115 ms=40128&#10;116 ms=40192&#10;117 ms=40256&#10;118 ms=40320&#10;119 ms=40384&#10;120 ms=40448&#10;121 ms=40512&#10;122 ms=40576&#10;123 ms=40640&#10;124 ms=40704&#10;125 ms=40768&#10;126 ms=40832&#10;127 ms=40896&#10;128 ms=40960&#10;129 ms=41024&#10;130 ms=41088&#10;131 ms=41152&#10;132 ms=41216&#10;133 ms=41280&#10;134 ms=41344&#10;135 ms=41408&#10;136 ms=41472&#10;137 ms=41536&#10;138 ms=41600&#10;139 ms=41664&#10;140 ms=41728&#10;141 ms=41792&#10;142 ms=41856&#10;143 ms=41920&#10;144 ms=41984&#10;145 ms=42048&#10;146 ms=42112&#10;147 ms=42176&#10;148 ms=42240&#10;149 ms=42304&#10;150 ms=42368&#10;151 ms=42432&#10;152 ms=42496&#10;153 ms=42560&#10;154 ms=42624&#10;155 ms=42688&#10;156 ms=42752&#10;157 ms=42816&#10;158 ms=42880&#10;159 ms=42944&#10;160 ms=43008&#10;161 ms=43072&#10;162 ms=43136&#10;163 ms=43200&#10;164 ms=43264&#10;165 ms=43328&#10;166 ms=43392&#10;167 ms=43456&#10;168 ms=43520&#10;169 ms=43584&#10;170 ms=43648&#10;171 ms=43712&#10;172 ms=43776&#10;173 ms=43840&#10;174 ms=43904&#10;175 ms=43968&#10;176 ms=44032&#10;177 ms=44096&#10;178 ms=44160&#10;179 ms=44224&#10;180 ms=44288&#10;181 ms=44352&#10;182 ms=44416&#10;183 ms=44480&#10;184 ms=44544&#10;185 ms=44608&#10;186 ms=44672&#10;187 ms=44736&#10;188 ms=44800&#10;189 ms=44864&#10;190 ms=44928&#10;191 ms=44992&#10;192 ms=45056&#10;193 ms=45120&#10;194 ms=45184&#10;195 ms=45248&#10;196 ms=45312&#10;197 ms=45376&#10;198 ms=45440&#10;199 ms=45504&#10;200 ms=45568&#10;201 ms=45632&#10;202 ms=45696&#10;203 ms=45760&#10;204 ms=45824&#10;205 ms=45888&#10;206 ms=45952&#10;207 ms=46016&#10;208 ms=46080&#10;209 ms=46144&#10;210 ms=46208&#10;211 ms=46272&#10;212 ms=46336&#10;213 ms=46400&#10;214 ms=46464&#10;215 ms=46528&#10;216 ms=46592&#10;217 ms=46656&#10;218 ms=46720&#10;219 ms=46784&#10;220 ms=46848&#10;221 ms=46912&#10;222 ms=46976&#10;223 ms=47040&#10;224 ms=47104&#10;225 ms=47168&#10;226 ms=47232&#10;227 ms=47296&#10;228 ms=47360&#10;229 ms=47424&#10;230 ms=47488&#10;231 ms=47552&#10;232 ms=47616&#10;233 ms=47680&#10;234 ms=47744&#10;235 ms=47808&#10;236 ms=47872&#10;237 ms=47936&#10;238 ms=48000&#10;239 ms=48064&#10;240 ms=48128&#10;241 ms=48192&#10;242 ms=48256&#10;243 ms=48320&#10;244 ms=48384&#10;245 ms=48448&#10;246 ms=48512&#10;247 ms=48576&#10;248 ms=48640&#10;249 ms=48704&#10;250 ms=48768&#10;251 ms=48832&#10;252 ms=48896&#10;253 ms=48960&#10;254 ms=49024&#10;255 ms=49088&#10;256 ms=49152&#10;257 ms=49216&#10;258 ms=49280&#10;259 ms=49344&#10;260 ms=49408&#10;261 ms=49472&#10;262 ms=49536"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="8 240 100 70"
               componentLayerUid="a84c2d78d41d0000feffffffffffffff" componentTabName=""
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="100" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="10" modulatorCustomName="" modulatorCustomIndexGroup="1680"
             modulatorCustomNameGroup="BIDIR" modulatorVstNameFormat="%n"
             luaModulatorValueChange="chMod_Uni_ValByName" name="Tester9"
             modulatorMin="0" modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Tester9"
               componentMouseCursor="2" componentGroupName="modulator-12" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="54.400000000000006"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="-15" uiSliderMax="16" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="-8 semitones=16384&#10;-7,875 semitones=16640&#10;-7,75 semitones=16896&#10;-7,625 semitones=17152&#10;-7,5 semitones=17408&#10;-7,375 semitones=17664&#10;-7,25 semitones=17920&#10;-7,125 semitones=18176&#10;-7 semitones=18432&#10;-6,875 semitones=18688&#10;-6,75 semitones=18944&#10;-6,625 semitones=19200&#10;-6,5 semitones=19456&#10;-6,375 semitones=19712&#10;-6,25 semitones=19968&#10;-6,125 semitones=20224&#10;-6 semitones=20480&#10;-5,875 semitones=20736&#10;-5,75 semitones=20992&#10;-5,625 semitones=21248&#10;-5,5 semitones=21504&#10;-5,375 semitones=21760&#10;-5,25 semitones=22016&#10;-5,125 semitones=22272&#10;-5 semitones=22528&#10;-4,875 semitones=22784&#10;-4,75 semitones=23040&#10;-4,625 semitones=23296&#10;-4,5 semitones=23552&#10;-4,375 semitones=23808&#10;-4,25 semitones=24064&#10;-4,125 semitones=24320&#10;-4 semitones=24576&#10;-3,875 semitones=24832&#10;-3,75 semitones=25088&#10;-3,625 semitones=25344&#10;-3,5 semitones=25600&#10;-3,375 semitones=25856&#10;-3,25 semitones=26112&#10;-3,125 semitones=26368&#10;-3 semitones=26624&#10;-2,875 semitones=26880&#10;-2,75 semitones=27136&#10;-2,625 semitones=27392&#10;-2,5 semitones=27648&#10;-2,375 semitones=27904&#10;-2,25 semitones=28160&#10;-2,125 semitones=28416&#10;-2 semitones=28672&#10;-1,875 semitones=28928&#10;-1,75 semitones=29184&#10;-1,625 semitones=29440&#10;-1,5 semitones=29696&#10;-1,375 semitones=29952&#10;-1,25 semitones=30208&#10;-1,125 semitones=30464&#10;-1 semitones=30720&#10;-0,875 semitones=30976&#10;-0,75 semitones=31232&#10;-0,625 semitones=31488&#10;-0,5 semitones=31744&#10;-0,375 semitones=32000&#10;-0,25 semitones=32256&#10;-0,125 semitones=32512&#10;0 semitones=32768&#10;0,125 semitones=33024&#10;0,25 semitones=33280&#10;0,375 semitones=33536&#10;0,5 semitones=33792&#10;0,625 semitones=34048&#10;0,75 semitones=34304&#10;0,875 semitones=34560&#10;1 semitones=34816&#10;1,125 semitones=35072&#10;1,25 semitones=35328&#10;1,375 semitones=35584&#10;1,5 semitones=35840&#10;1,625 semitones=36096&#10;1,75 semitones=36352&#10;1,875 semitones=36608&#10;2 semitones=36864&#10;2,125 semitones=37120&#10;2,25 semitones=37376&#10;2,375 semitones=37632&#10;2,5 semitones=37888&#10;2,625 semitones=38144&#10;2,75 semitones=38400&#10;2,875 semitones=38656&#10;3 semitones=38912&#10;3,125 semitones=39168&#10;3,25 semitones=39424&#10;3,375 semitones=39680&#10;3,5 semitones=39936&#10;3,625 semitones=40192&#10;3,75 semitones=40448&#10;3,875 semitones=40704&#10;4 semitones=40960&#10;4,125 semitones=41216&#10;4,25 semitones=41472&#10;4,375 semitones=41728&#10;4,5 semitones=41984&#10;4,625 semitones=42240&#10;4,75 semitones=42496&#10;4,875 semitones=42752&#10;5 semitones=43008&#10;5,125 semitones=43264&#10;5,25 semitones=43520&#10;5,375 semitones=43776&#10;5,5 semitones=44032&#10;5,625 semitones=44288&#10;5,75 semitones=44544&#10;5,875 semitones=44800&#10;6 semitones=45056&#10;6,125 semitones=45312&#10;6,25 semitones=45568&#10;6,375 semitones=45824&#10;6,5 semitones=46080&#10;6,625 semitones=46336&#10;6,75 semitones=46592&#10;6,875 semitones=46848&#10;7 semitones=47104&#10;7,125 semitones=47360&#10;7,25 semitones=47616&#10;7,375 semitones=47872&#10;7,5 semitones=48128&#10;7,625 semitones=48384&#10;7,75 semitones=48640&#10;7,875 semitones=48896"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="0" componentTabName=""
               uiType="uiFixedImageSlider" componentRectangle="8 472 100 70"
               componentLayerUid="a84c2d78d41d0000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="15" vstIndex="101" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="03" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Tester3" modulatorMin="0" modulatorValue="15">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Tester3"
               componentMouseCursor="2" componentGroupName="modulator-12" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0,3 Hz=32768&#10;1,2 kHz=33792&#10;2,1 kHz=34816&#10;3 kHz=35840&#10;3,9 kHz=36864&#10;4,8 kHz=37888&#10;5,7 kHz=38912&#10;6,6 kHz=39936&#10;7,5 kHz=40960&#10;8,4 kHz=41984&#10;9,3 kHz=43008&#10;10,2 kHz=44032&#10;11,1 kHz=45056&#10;12 kHz=46080&#10;12,9 kHz=47104&#10;13,8 kHz=48128"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="0" componentTabName=""
               componentLayerUid="a84c2d78d41d0000feffffffffffffff" componentRectangle="8 320 100 70"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="30" vstIndex="102" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="08" modulatorCustomName="" modulatorCustomIndexGroup="1024"
             modulatorCustomNameGroup="bla" modulatorVstNameFormat="%n" luaModulatorValueChange="chMod_Uni_ValByName"
             name="Tester8" modulatorMin="0" modulatorValue="30">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Tester8"
               componentMouseCursor="2" componentGroupName="modulator-12" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="-15=32768&#10;-14=33280&#10;-13=33792&#10;-12=34304&#10;-11=34816&#10;-10=35328&#10;-9=35840&#10;-8=36352&#10;-7=36864&#10;-6=37376&#10;-5=37888&#10;-4=38400&#10;-3=38912&#10;-2=39424&#10;-1=39936&#10;0=40448&#10;1=40960&#10;2=41472&#10;3=41984&#10;4=42496&#10;5=43008&#10;6=43520&#10;7=44032&#10;8=44544&#10;9=45056&#10;10=45568&#10;11=46080&#10;12=46592&#10;13=47104&#10;14=47616&#10;15=48128"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="8 392 100 70"
               componentLayerUid="a84c2d78d41d0000feffffffffffffff" componentTabName=""
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="69" vstIndex="103" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="48" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="ChPatch"
             name="PatchSource01" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="PatchSource01"
               componentMouseCursor="2" componentGroupName="modulator-5" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff8692a3"
               uiComboOutlineColour="ff235aaa" uiComboTextColour="ffffffff"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" uiComboButtonColour="ff235aaa"
               uiComboBgColour="ff235aaa" uiComboMenuBackgroundColour="ffd7dce5"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="None=127&#10;CC 0=0&#10;CC 1=1&#10;CC 2=2&#10;CC 3=3&#10;CC 4=4&#10;CC 5=5&#10;CC 6=6&#10;CC 7=7&#10;CC 8=8&#10;CC 9=9&#10;CC 10=10&#10;CC 11=11&#10;CC 12=12&#10;CC 13=13&#10;CC 14=14&#10;CC 15=15&#10;CC 16=16&#10;CC 17=17&#10;CC 18=18&#10;CC 19=19&#10;CC 20=20&#10;CC 21=21&#10;CC 22=22&#10;CC 23=23&#10;CC 24=24&#10;CC 25=25&#10;CC 26=26&#10;CC 27=27&#10;CC 28=28&#10;CC 29=29&#10;CC 30=30&#10;CC 31=31&#10;CC 64=32&#10;CC 65=33&#10;CC 66=34&#10;CC 67=35&#10;CC 68=36&#10;CC 69=37&#10;CC 70=38&#10;CC 71=39&#10;CC 72=40&#10;CC 73=41&#10;CC 74=42&#10;CC 75=43&#10;CC 76=44&#10;CC 77=45&#10;CC 78=46&#10;CC 79=47&#10;CC 80=48&#10;CC 81=49&#10;CC 82=50&#10;CC 83=51&#10;CC 84=52&#10;CC 85=53&#10;CC 86=54&#10;CC 87=55&#10;CC 88=56&#10;CC 89=57&#10;CC 90=58&#10;CC 91=59&#10;CC 92=60&#10;CC 93=61&#10;CC 94=62&#10;CC 95=63&#10;Last Note pl=64&#10;Last Note Vel=65&#10;Aftertouch=66&#10;Pitchbend=67&#10;Mid Tempo Val=68"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="12" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelFont="&lt;Sans-Serif&gt;;15;1;0;0;0;1;3"
               uiType="uiCombo" componentRectangle="32 40 88 32" componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="11" vstIndex="104" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="52" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="ChPatch"
             name="PatchDestination01" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="PatchDestination01"
               componentMouseCursor="2" componentGroupName="modulator-5" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff8692a3"
               uiComboOutlineColour="ff235aaa" uiComboTextColour="ffffffff"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="ff235aaa"
               uiComboBgColour="ff235aaa" uiComboMenuBackgroundColour="ffd7dce5"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="None=255&#10;Param 0=48&#10;Param 1=49&#10;Param 2=50&#10;Param 3=3&#10;Param 4=52&#10;Param 5=53&#10;Param 6=54&#10;Param 7=55&#10;Param 8=56&#10;Param 9=57&#10;None=0"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelFont="&lt;Sans-Serif&gt;;15;1;0;0;0;1;3"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="128 40 88 32"
               uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="105" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="56" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="ChPatch"
             name="PatchScale01" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="PatchScale01"
               componentMouseCursor="2" componentGroupName="modulator-5" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff8692a3"
               uiComboOutlineColour="ff235aaa" uiComboTextColour="ffffffff"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="ff235aaa"
               uiComboBgColour="ff235aaa" uiComboMenuBackgroundColour="ffd7dce5"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="-200 %=0&#10;-197 %=1&#10;-194 %=2&#10;-191 %=3&#10;-188 %=4&#10;-184 %=5&#10;-181 %=6&#10;-178 %=7&#10;-175 %=8&#10;-172 %=9&#10;-169 %=10&#10;-166 %=11&#10;-163 %=12&#10;-159 %=13&#10;-156 %=14&#10;-153 %=15&#10;-150 %=16&#10;-147 %=17&#10;-144 %=18&#10;-141 %=19&#10;-138 %=20&#10;-134 %=21&#10;-131 %=22&#10;-128 %=23&#10;-125 %=24&#10;-122 %=25&#10;-119 %=26&#10;-116 %=27&#10;-113 %=28&#10;-109 %=29&#10;-106 %=30&#10;-103 %=31&#10;-100 %=32&#10;-97 %=33&#10;-94 %=34&#10;-91 %=35&#10;-88 %=36&#10;-84 %=37&#10;-81 %=38&#10;-78 %=39&#10;-75 %=40&#10;-72 %=41&#10;-69 %=42&#10;-66 %=43&#10;-63 %=44&#10;-59 %=45&#10;-56 %=46&#10;-53 %=47&#10;-50 %=48&#10;-47 %=49&#10;-44 %=50&#10;-41 %=51&#10;-38 %=52&#10;-34 %=53&#10;-31 %=54&#10;-28 %=55&#10;-25 %=56&#10;-22 %=57&#10;-19 %=58&#10;-16 %=59&#10;-13 %=60&#10;-9 %=61&#10;-6 %=62&#10;-3 %=63&#10;0 %=64&#10;3 %=65&#10;6 %=66&#10;9 %=67&#10;13 %=68&#10;16 %=69&#10;19 %=70&#10;22 %=71&#10;25 %=72&#10;28 %=73&#10;31 %=74&#10;34 %=75&#10;38 %=76&#10;41 %=77&#10;44 %=78&#10;47 %=79&#10;50 %=80&#10;53 %=81&#10;56 %=82&#10;59 %=83&#10;63 %=84&#10;66 %=85&#10;69 %=86&#10;72 %=87&#10;75 %=88&#10;78 %=89&#10;81 %=90&#10;84 %=91&#10;88 %=92&#10;91 %=93&#10;94 %=94&#10;97 %=95&#10;100 %=96&#10;103 %=97&#10;106 %=98&#10;109 %=99&#10;113 %=100&#10;116 %=101&#10;119 %=102&#10;122 %=103&#10;125 %=104&#10;128 %=105&#10;131 %=106&#10;134 %=107&#10;138 %=108&#10;141 %=109&#10;144 %=110&#10;147 %=111&#10;150 %=112&#10;153 %=113&#10;156 %=114&#10;159 %=115&#10;163 %=116&#10;166 %=117&#10;169 %=118&#10;172 %=119&#10;175 %=120&#10;178 %=121&#10;181 %=122&#10;184 %=123&#10;188 %=124&#10;191 %=125&#10;194 %=126&#10;197 %=127"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelFont="&lt;Sans-Serif&gt;;15;1;0;0;0;1;3"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="224 40 88 32"
               uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="106" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="CC__1" modulatorMin="0" modulatorValue="127">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="CC__1"
               componentMouseCursor="2" componentGroupName="modulator-11" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="Black Plastic small 01" resourceImageWidth="80"
               resourceImageHeight="80" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="2df24869af040000feffffffffffffff"
               componentRectangle="0 8 64 64" uiType="uiImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="69" vstIndex="107" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="49" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="ChPatch"
             name="PatchSource02" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="PatchSource02"
               componentMouseCursor="2" componentGroupName="modulator-5" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff8692a3"
               uiComboOutlineColour="ff235aaa" uiComboTextColour="ffffffff"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="ff235aaa"
               uiComboBgColour="ff235aaa" uiComboMenuBackgroundColour="ffd7dce5"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="None=127&#10;CC 0=0&#10;CC 1=1&#10;CC 2=2&#10;CC 3=3&#10;CC 4=4&#10;CC 5=5&#10;CC 6=6&#10;CC 7=7&#10;CC 8=8&#10;CC 9=9&#10;CC 10=10&#10;CC 11=11&#10;CC 12=12&#10;CC 13=13&#10;CC 14=14&#10;CC 15=15&#10;CC 16=16&#10;CC 17=17&#10;CC 18=18&#10;CC 19=19&#10;CC 20=20&#10;CC 21=21&#10;CC 22=22&#10;CC 23=23&#10;CC 24=24&#10;CC 25=25&#10;CC 26=26&#10;CC 27=27&#10;CC 28=28&#10;CC 29=29&#10;CC 30=30&#10;CC 31=31&#10;CC 64=32&#10;CC 65=33&#10;CC 66=34&#10;CC 67=35&#10;CC 68=36&#10;CC 69=37&#10;CC 70=38&#10;CC 71=39&#10;CC 72=40&#10;CC 73=41&#10;CC 74=42&#10;CC 75=43&#10;CC 76=44&#10;CC 77=45&#10;CC 78=46&#10;CC 79=47&#10;CC 80=48&#10;CC 81=49&#10;CC 82=50&#10;CC 83=51&#10;CC 84=52&#10;CC 85=53&#10;CC 86=54&#10;CC 87=55&#10;CC 88=56&#10;CC 89=57&#10;CC 90=58&#10;CC 91=59&#10;CC 92=60&#10;CC 93=61&#10;CC 94=62&#10;CC 95=63&#10;Last Note pl=64&#10;Last Note Vel=65&#10;Aftertouch=66&#10;Pitchbend=67&#10;Mid Tempo Val=68"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelFont="&lt;Sans-Serif&gt;;15;1;0;0;0;1;3"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="32 80 88 32"
               uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="69" vstIndex="108" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="50" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="ChPatch"
             name="PatchSource03" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="PatchSource03"
               componentMouseCursor="2" componentGroupName="modulator-5" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff8692a3"
               uiComboOutlineColour="ff235aaa" uiComboTextColour="ffffffff"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="ff235aaa"
               uiComboBgColour="ff235aaa" uiComboMenuBackgroundColour="ffd7dce5"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="None=127&#10;CC 0=0&#10;CC 1=1&#10;CC 2=2&#10;CC 3=3&#10;CC 4=4&#10;CC 5=5&#10;CC 6=6&#10;CC 7=7&#10;CC 8=8&#10;CC 9=9&#10;CC 10=10&#10;CC 11=11&#10;CC 12=12&#10;CC 13=13&#10;CC 14=14&#10;CC 15=15&#10;CC 16=16&#10;CC 17=17&#10;CC 18=18&#10;CC 19=19&#10;CC 20=20&#10;CC 21=21&#10;CC 22=22&#10;CC 23=23&#10;CC 24=24&#10;CC 25=25&#10;CC 26=26&#10;CC 27=27&#10;CC 28=28&#10;CC 29=29&#10;CC 30=30&#10;CC 31=31&#10;CC 64=32&#10;CC 65=33&#10;CC 66=34&#10;CC 67=35&#10;CC 68=36&#10;CC 69=37&#10;CC 70=38&#10;CC 71=39&#10;CC 72=40&#10;CC 73=41&#10;CC 74=42&#10;CC 75=43&#10;CC 76=44&#10;CC 77=45&#10;CC 78=46&#10;CC 79=47&#10;CC 80=48&#10;CC 81=49&#10;CC 82=50&#10;CC 83=51&#10;CC 84=52&#10;CC 85=53&#10;CC 86=54&#10;CC 87=55&#10;CC 88=56&#10;CC 89=57&#10;CC 90=58&#10;CC 91=59&#10;CC 92=60&#10;CC 93=61&#10;CC 94=62&#10;CC 95=63&#10;Last Note pl=64&#10;Last Note Vel=65&#10;Aftertouch=66&#10;Pitchbend=67&#10;Mid Tempo Val=68"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelFont="&lt;Sans-Serif&gt;;15;1;0;0;0;1;3"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="32 120 88 32"
               uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="69" vstIndex="109" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="51" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="ChPatch"
             name="PatchSource04" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="PatchSource04"
               componentMouseCursor="2" componentGroupName="modulator-5" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff8692a3"
               uiComboOutlineColour="ff235aaa" uiComboTextColour="ffffffff"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="ff235aaa"
               uiComboBgColour="ff235aaa" uiComboMenuBackgroundColour="ffd7dce5"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="None=127&#10;CC 0=0&#10;CC 1=1&#10;CC 2=2&#10;CC 3=3&#10;CC 4=4&#10;CC 5=5&#10;CC 6=6&#10;CC 7=7&#10;CC 8=8&#10;CC 9=9&#10;CC 10=10&#10;CC 11=11&#10;CC 12=12&#10;CC 13=13&#10;CC 14=14&#10;CC 15=15&#10;CC 16=16&#10;CC 17=17&#10;CC 18=18&#10;CC 19=19&#10;CC 20=20&#10;CC 21=21&#10;CC 22=22&#10;CC 23=23&#10;CC 24=24&#10;CC 25=25&#10;CC 26=26&#10;CC 27=27&#10;CC 28=28&#10;CC 29=29&#10;CC 30=30&#10;CC 31=31&#10;CC 64=32&#10;CC 65=33&#10;CC 66=34&#10;CC 67=35&#10;CC 68=36&#10;CC 69=37&#10;CC 70=38&#10;CC 71=39&#10;CC 72=40&#10;CC 73=41&#10;CC 74=42&#10;CC 75=43&#10;CC 76=44&#10;CC 77=45&#10;CC 78=46&#10;CC 79=47&#10;CC 80=48&#10;CC 81=49&#10;CC 82=50&#10;CC 83=51&#10;CC 84=52&#10;CC 85=53&#10;CC 86=54&#10;CC 87=55&#10;CC 88=56&#10;CC 89=57&#10;CC 90=58&#10;CC 91=59&#10;CC 92=60&#10;CC 93=61&#10;CC 94=62&#10;CC 95=63&#10;Last Note pl=64&#10;Last Note Vel=65&#10;Aftertouch=66&#10;Pitchbend=67&#10;Mid Tempo Val=68"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelFont="&lt;Sans-Serif&gt;;15;1;0;0;0;1;3"
               uiType="uiCombo" componentRectangle="32 160 88 32" componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="11" vstIndex="110" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="53" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="ChPatch"
             name="PatchDestination02" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="PatchDestination02"
               componentMouseCursor="2" componentGroupName="modulator-5" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff8692a3"
               uiComboOutlineColour="ff235aaa" uiComboTextColour="ffffffff"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="ff235aaa"
               uiComboBgColour="ff235aaa" uiComboMenuBackgroundColour="ffd7dce5"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="None=255&#10;Param 0=48&#10;Param 1=49&#10;Param 2=50&#10;Param 3=3&#10;Param 4=52&#10;Param 5=53&#10;Param 6=54&#10;Param 7=55&#10;Param 8=56&#10;Param 9=57&#10;None=0"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelFont="&lt;Sans-Serif&gt;;15;1;0;0;0;1;3"
               uiType="uiCombo" componentRectangle="128 80 88 32" componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="11" vstIndex="111" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="54" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="ChPatch"
             name="PatchDestination03" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="PatchDestination03"
               componentMouseCursor="2" componentGroupName="modulator-5" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff8692a3"
               uiComboOutlineColour="ff235aaa" uiComboTextColour="ffffffff"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="ff235aaa"
               uiComboBgColour="ff235aaa" uiComboMenuBackgroundColour="ffd7dce5"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="None=255&#10;Param 0=48&#10;Param 1=49&#10;Param 2=50&#10;Param 3=3&#10;Param 4=52&#10;Param 5=53&#10;Param 6=54&#10;Param 7=55&#10;Param 8=56&#10;Param 9=57&#10;None=0"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelFont="&lt;Sans-Serif&gt;;15;1;0;0;0;1;3"
               uiType="uiCombo" componentRectangle="128 120 88 32" componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="11" vstIndex="112" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="55" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="ChPatch"
             name="PatchDestination04" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="PatchDestination04"
               componentMouseCursor="2" componentGroupName="modulator-5" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff8692a3"
               uiComboOutlineColour="ff235aaa" uiComboTextColour="ffffffff"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="ff235aaa"
               uiComboBgColour="ff235aaa" uiComboMenuBackgroundColour="ffd7dce5"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="None=255&#10;Param 0=48&#10;Param 1=49&#10;Param 2=50&#10;Param 3=3&#10;Param 4=52&#10;Param 5=53&#10;Param 6=54&#10;Param 7=55&#10;Param 8=56&#10;Param 9=57&#10;None=0"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelFont="&lt;Sans-Serif&gt;;15;1;0;0;0;1;3"
               uiType="uiCombo" componentRectangle="128 160 88 32" componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="113" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="57" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="ChPatch"
             name="PatchScale02" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="PatchScale02"
               componentMouseCursor="2" componentGroupName="modulator-5" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff8692a3"
               uiComboOutlineColour="ff235aaa" uiComboTextColour="ffffffff"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="ff235aaa"
               uiComboBgColour="ff235aaa" uiComboMenuBackgroundColour="ffd7dce5"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="-200 %=0&#10;-197 %=1&#10;-194 %=2&#10;-191 %=3&#10;-188 %=4&#10;-184 %=5&#10;-181 %=6&#10;-178 %=7&#10;-175 %=8&#10;-172 %=9&#10;-169 %=10&#10;-166 %=11&#10;-163 %=12&#10;-159 %=13&#10;-156 %=14&#10;-153 %=15&#10;-150 %=16&#10;-147 %=17&#10;-144 %=18&#10;-141 %=19&#10;-138 %=20&#10;-134 %=21&#10;-131 %=22&#10;-128 %=23&#10;-125 %=24&#10;-122 %=25&#10;-119 %=26&#10;-116 %=27&#10;-113 %=28&#10;-109 %=29&#10;-106 %=30&#10;-103 %=31&#10;-100 %=32&#10;-97 %=33&#10;-94 %=34&#10;-91 %=35&#10;-88 %=36&#10;-84 %=37&#10;-81 %=38&#10;-78 %=39&#10;-75 %=40&#10;-72 %=41&#10;-69 %=42&#10;-66 %=43&#10;-63 %=44&#10;-59 %=45&#10;-56 %=46&#10;-53 %=47&#10;-50 %=48&#10;-47 %=49&#10;-44 %=50&#10;-41 %=51&#10;-38 %=52&#10;-34 %=53&#10;-31 %=54&#10;-28 %=55&#10;-25 %=56&#10;-22 %=57&#10;-19 %=58&#10;-16 %=59&#10;-13 %=60&#10;-9 %=61&#10;-6 %=62&#10;-3 %=63&#10;0 %=64&#10;3 %=65&#10;6 %=66&#10;9 %=67&#10;13 %=68&#10;16 %=69&#10;19 %=70&#10;22 %=71&#10;25 %=72&#10;28 %=73&#10;31 %=74&#10;34 %=75&#10;38 %=76&#10;41 %=77&#10;44 %=78&#10;47 %=79&#10;50 %=80&#10;53 %=81&#10;56 %=82&#10;59 %=83&#10;63 %=84&#10;66 %=85&#10;69 %=86&#10;72 %=87&#10;75 %=88&#10;78 %=89&#10;81 %=90&#10;84 %=91&#10;88 %=92&#10;91 %=93&#10;94 %=94&#10;97 %=95&#10;100 %=96&#10;103 %=97&#10;106 %=98&#10;109 %=99&#10;113 %=100&#10;116 %=101&#10;119 %=102&#10;122 %=103&#10;125 %=104&#10;128 %=105&#10;131 %=106&#10;134 %=107&#10;138 %=108&#10;141 %=109&#10;144 %=110&#10;147 %=111&#10;150 %=112&#10;153 %=113&#10;156 %=114&#10;159 %=115&#10;163 %=116&#10;166 %=117&#10;169 %=118&#10;172 %=119&#10;175 %=120&#10;178 %=121&#10;181 %=122&#10;184 %=123&#10;188 %=124&#10;191 %=125&#10;194 %=126&#10;197 %=127"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelFont="&lt;Sans-Serif&gt;;15;1;0;0;0;1;3"
               uiType="uiCombo" componentRectangle="224 80 88 32" componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="114" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="58" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="ChPatch"
             name="PatchScale03" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="PatchScale03"
               componentMouseCursor="2" componentGroupName="modulator-5" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff8692a3"
               uiComboOutlineColour="ff235aaa" uiComboTextColour="ffffffff"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="ff235aaa"
               uiComboBgColour="ff235aaa" uiComboMenuBackgroundColour="ffd7dce5"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="-200 %=0&#10;-197 %=1&#10;-194 %=2&#10;-191 %=3&#10;-188 %=4&#10;-184 %=5&#10;-181 %=6&#10;-178 %=7&#10;-175 %=8&#10;-172 %=9&#10;-169 %=10&#10;-166 %=11&#10;-163 %=12&#10;-159 %=13&#10;-156 %=14&#10;-153 %=15&#10;-150 %=16&#10;-147 %=17&#10;-144 %=18&#10;-141 %=19&#10;-138 %=20&#10;-134 %=21&#10;-131 %=22&#10;-128 %=23&#10;-125 %=24&#10;-122 %=25&#10;-119 %=26&#10;-116 %=27&#10;-113 %=28&#10;-109 %=29&#10;-106 %=30&#10;-103 %=31&#10;-100 %=32&#10;-97 %=33&#10;-94 %=34&#10;-91 %=35&#10;-88 %=36&#10;-84 %=37&#10;-81 %=38&#10;-78 %=39&#10;-75 %=40&#10;-72 %=41&#10;-69 %=42&#10;-66 %=43&#10;-63 %=44&#10;-59 %=45&#10;-56 %=46&#10;-53 %=47&#10;-50 %=48&#10;-47 %=49&#10;-44 %=50&#10;-41 %=51&#10;-38 %=52&#10;-34 %=53&#10;-31 %=54&#10;-28 %=55&#10;-25 %=56&#10;-22 %=57&#10;-19 %=58&#10;-16 %=59&#10;-13 %=60&#10;-9 %=61&#10;-6 %=62&#10;-3 %=63&#10;0 %=64&#10;3 %=65&#10;6 %=66&#10;9 %=67&#10;13 %=68&#10;16 %=69&#10;19 %=70&#10;22 %=71&#10;25 %=72&#10;28 %=73&#10;31 %=74&#10;34 %=75&#10;38 %=76&#10;41 %=77&#10;44 %=78&#10;47 %=79&#10;50 %=80&#10;53 %=81&#10;56 %=82&#10;59 %=83&#10;63 %=84&#10;66 %=85&#10;69 %=86&#10;72 %=87&#10;75 %=88&#10;78 %=89&#10;81 %=90&#10;84 %=91&#10;88 %=92&#10;91 %=93&#10;94 %=94&#10;97 %=95&#10;100 %=96&#10;103 %=97&#10;106 %=98&#10;109 %=99&#10;113 %=100&#10;116 %=101&#10;119 %=102&#10;122 %=103&#10;125 %=104&#10;128 %=105&#10;131 %=106&#10;134 %=107&#10;138 %=108&#10;141 %=109&#10;144 %=110&#10;147 %=111&#10;150 %=112&#10;153 %=113&#10;156 %=114&#10;159 %=115&#10;163 %=116&#10;166 %=117&#10;169 %=118&#10;172 %=119&#10;175 %=120&#10;178 %=121&#10;181 %=122&#10;184 %=123&#10;188 %=124&#10;191 %=125&#10;194 %=126&#10;197 %=127"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelFont="&lt;Sans-Serif&gt;;15;1;0;0;0;1;3"
               uiType="uiCombo" componentRectangle="224 120 88 32" componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="115" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="59" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="ChPatch"
             name="PatchScale04" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="PatchScale04"
               componentMouseCursor="2" componentGroupName="modulator-5" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff8692a3"
               uiComboOutlineColour="ff235aaa" uiComboTextColour="ffffffff"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="ff235aaa"
               uiComboBgColour="ff235aaa" uiComboMenuBackgroundColour="ffd7dce5"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="-200 %=0&#10;-197 %=1&#10;-194 %=2&#10;-191 %=3&#10;-188 %=4&#10;-184 %=5&#10;-181 %=6&#10;-178 %=7&#10;-175 %=8&#10;-172 %=9&#10;-169 %=10&#10;-166 %=11&#10;-163 %=12&#10;-159 %=13&#10;-156 %=14&#10;-153 %=15&#10;-150 %=16&#10;-147 %=17&#10;-144 %=18&#10;-141 %=19&#10;-138 %=20&#10;-134 %=21&#10;-131 %=22&#10;-128 %=23&#10;-125 %=24&#10;-122 %=25&#10;-119 %=26&#10;-116 %=27&#10;-113 %=28&#10;-109 %=29&#10;-106 %=30&#10;-103 %=31&#10;-100 %=32&#10;-97 %=33&#10;-94 %=34&#10;-91 %=35&#10;-88 %=36&#10;-84 %=37&#10;-81 %=38&#10;-78 %=39&#10;-75 %=40&#10;-72 %=41&#10;-69 %=42&#10;-66 %=43&#10;-63 %=44&#10;-59 %=45&#10;-56 %=46&#10;-53 %=47&#10;-50 %=48&#10;-47 %=49&#10;-44 %=50&#10;-41 %=51&#10;-38 %=52&#10;-34 %=53&#10;-31 %=54&#10;-28 %=55&#10;-25 %=56&#10;-22 %=57&#10;-19 %=58&#10;-16 %=59&#10;-13 %=60&#10;-9 %=61&#10;-6 %=62&#10;-3 %=63&#10;0 %=64&#10;3 %=65&#10;6 %=66&#10;9 %=67&#10;13 %=68&#10;16 %=69&#10;19 %=70&#10;22 %=71&#10;25 %=72&#10;28 %=73&#10;31 %=74&#10;34 %=75&#10;38 %=76&#10;41 %=77&#10;44 %=78&#10;47 %=79&#10;50 %=80&#10;53 %=81&#10;56 %=82&#10;59 %=83&#10;63 %=84&#10;66 %=85&#10;69 %=86&#10;72 %=87&#10;75 %=88&#10;78 %=89&#10;81 %=90&#10;84 %=91&#10;88 %=92&#10;91 %=93&#10;94 %=94&#10;97 %=95&#10;100 %=96&#10;103 %=97&#10;106 %=98&#10;109 %=99&#10;113 %=100&#10;116 %=101&#10;119 %=102&#10;122 %=103&#10;125 %=104&#10;128 %=105&#10;131 %=106&#10;134 %=107&#10;138 %=108&#10;141 %=109&#10;144 %=110&#10;147 %=111&#10;150 %=112&#10;153 %=113&#10;156 %=114&#10;159 %=115&#10;163 %=116&#10;166 %=117&#10;169 %=118&#10;172 %=119&#10;175 %=120&#10;178 %=121&#10;181 %=122&#10;184 %=123&#10;188 %=124&#10;191 %=125&#10;194 %=126&#10;197 %=127"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelFont="&lt;Sans-Serif&gt;;15;1;0;0;0;1;3"
               uiType="uiCombo" componentRectangle="224 160 88 32" componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="116" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="CC__2" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="2" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="CC__2"
               componentMouseCursor="2" componentGroupName="modulator-11" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="Black Plastic small 01" resourceImageWidth="80"
               resourceImageHeight="80" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiType="uiImageSlider"
               componentRectangle="64 8 64 64" componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-5" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-5"
               componentMouseCursor="2" componentGroupName="modulator-2" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Midi-Patch"
               uiGroupTextColour="ffffffff" uiGroupOutlineColour1="ff235aaa"
               uiGroupOutlineColour2="ff235aaa" uiGroupBackgroundColour1="ff235aaa"
               uiGroupBackgroundColour2="ff000000" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="16 256 325 204"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="centredTop" uiGroupTextFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="2" uiGroupTextMargin="0"
               uiType="uiGroup" componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-6" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-6"
               componentMouseCursor="2" componentGroupName="modulator-2" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Presets"
               uiGroupTextColour="ffffffff" uiGroupOutlineColour1="ff235aaa"
               uiGroupOutlineColour2="ff235aaa" uiGroupBackgroundColour1="ff235aaa"
               uiGroupBackgroundColour2="ff000000" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="640 256 351 399"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="centredTop" uiGroupTextFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="2" uiGroupTextMargin="0"
               uiType="uiGroup" componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-8" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-8"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Req.ParaInfo"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="547 672 304 145"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentLayerUid="a84c2d78d41d0000feffffffffffffff" uiType="uiGroup"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-9" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-9"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Ascii-Tester"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="856 672 262 146"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentLayerUid="a84c2d78d41d0000feffffffffffffff" uiType="uiGroup"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-11" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-11"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="" uiGroupTextColour="0xff000000"
               uiGroupOutlineColour1="0xffa3a3a3" uiGroupOutlineColour2="0xffffffff"
               uiGroupBackgroundColour1="0xffa3a3a3" uiGroupBackgroundColour2="0xffffffff"
               uiGroupOutlineGradientType="Vertical" uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage="" componentRectangle="1112 584 128 78"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentLayerUid="a84c2d78d41d0000feffffffffffffff" uiType="uiGroup"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-12" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-12"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Group Text"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="ff525252" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="1104 8 111 555"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentLayerUid="a84c2d78d41d0000feffffffffffffff" uiType="uiGroup"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-13" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-13"
               componentMouseCursor="2" componentGroupName="modulator-5" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ffffffff" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;15;0;0;0;0;1;3"
               uiLabelText="1" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="8 40 26 32"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-15" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-13"
               componentMouseCursor="2" componentGroupName="modulator-5" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ffffffff" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;15;0;0;0;0;1;3"
               uiLabelText="2" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="8 80 26 32" componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-16" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-13"
               componentMouseCursor="2" componentGroupName="modulator-5" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ffffffff" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;15;0;0;0;0;1;3"
               uiLabelText="3" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="8 120 26 32"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-17" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-13"
               componentMouseCursor="2" componentGroupName="modulator-5" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ffffffff" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;15;0;0;0;0;1;3"
               uiLabelText="4" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="8 160 26 32"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-18" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-13"
               componentMouseCursor="2" componentGroupName="modulator-5" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ffffffff" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;15;0;0;0;0;1;3"
               uiLabelText="Source" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="32 16 88 24" componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-19" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-13"
               componentMouseCursor="2" componentGroupName="modulator-5" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ffffffff" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;15;0;0;0;0;1;3"
               uiLabelText="Destination" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="128 16 88 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-20" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-13"
               componentMouseCursor="2" componentGroupName="modulator-5" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ffffffff" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;15;0;0;0;0;1;3"
               uiLabelText="Scale" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="224 16 88 24" componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="hint" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="hint"
               componentMouseCursor="2" componentGroupName="modulator-2" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Info" uiGroupTextColour="ffffffff"
               uiGroupOutlineColour1="ff235aaa" uiGroupOutlineColour2="ff235aaa"
               uiGroupBackgroundColour1="ff235aaa" uiGroupBackgroundColour2="ff000000"
               uiGroupOutlineGradientType="Vertical" uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage="" componentRectangle="376 256 231 79"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="centredTop" uiGroupTextFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="2" uiGroupTextMargin="0"
               uiType="uiGroup" componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="InfoDisplay" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="InfoDisplay"
               componentMouseCursor="2" componentGroupName="hint" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="ff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffc1ff00"
               uiLabelOutline="1" uiLabelOutlineColour="2f51ce" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiLabelText="got a complete dump from LXP-1" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="2df24869af040000feffffffffffffff" componentRectangle="0 16 228 57"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="117" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="DumpActiv" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Dump Activ"
               componentMouseCursor="2" componentGroupName="modulator-2" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Red_64x64_2" componentRectangle="384 40 35 68"
               resourceImageWidth="64" resourceImageHeight="64" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="False&#10;True" uiImageButtonTextPosition="bottom"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiType="uiImageButton" componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="BlockTab" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="BlockTab"
               componentMouseCursor="2" componentGroupName="modulator-7" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiTabsCurrentTabChanged=""
               uiTabsDepth="1" uiTabsOutlineThickness="2" uiTabsFrontTabOutline="1"
               uiTabsTabOutline="1" uiTabsIndentThickness="0" uiTabsOrientation="3"
               uiTabsFrontTabFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiTabsTabFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiTabsOutlineGlobalColour="0x00000000" uiTabsOutlineGlobalBackgroundColour="0"
               uiTabsOutlineTabColour="303030" uiTabsTextTabColour="909090"
               uiTabsFrontTabOutlineColour="0" uiTabsFrontTabTextColour="0"
               uiTabsAddTab="0" uiTabsRemoveTab="0" componentRectangle="8 8 473 175"
               uiType="uiTabs" componentLayerUid="2df24869af040000feffffffffffffff"
               uiTabsCurrentTab="2">
      <uiTabsTab uiTabsTabIndex="0" uiTabsTabName="Tab 0" uiTabsTabContentBackgroundColour="ff2762b8"
                 uiTabsTabBackgroundColour="356a98" uiTabsTabBackgroundImage="Block_1"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="1" uiTabsTabName="Tab 1" uiTabsTabContentBackgroundColour="ff2762b8"
                 uiTabsTabBackgroundColour="356a98" uiTabsTabBackgroundImage="Block_2"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="2" uiTabsTabName="Tab 2" uiTabsTabContentBackgroundColour="ff2762b8"
                 uiTabsTabBackgroundColour="356a98" uiTabsTabBackgroundImage="Block_3"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="3" uiTabsTabName="Tab 3" uiTabsTabContentBackgroundColour="ff2762b8"
                 uiTabsTabBackgroundColour="356a98" uiTabsTabBackgroundImage="Block_4"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="4" uiTabsTabName="Tab 4" uiTabsTabContentBackgroundColour="ff2762b8"
                 uiTabsTabBackgroundColour="356a98" uiTabsTabBackgroundImage="Block_5"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="5" uiTabsTabName="Tab 5" uiTabsTabContentBackgroundColour="ff2762b8"
                 uiTabsTabBackgroundColour="356a98" uiTabsTabBackgroundImage="Block_6"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="6" uiTabsTabName="Tab 6" uiTabsTabContentBackgroundColour="ff2762b8"
                 uiTabsTabBackgroundColour="356a98" uiTabsTabBackgroundImage="Block_7"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="7" uiTabsTabName="Tab 7" uiTabsTabContentBackgroundColour="ff2762b8"
                 uiTabsTabBackgroundColour="356a98" uiTabsTabBackgroundImage="Block_8"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
    </component>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-7" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-7"
               componentMouseCursor="2" componentGroupName="modulator-2" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="" uiGroupTextColour="0xff000000"
               uiGroupOutlineColour1="ff2762b8" uiGroupOutlineColour2="ff2762b8"
               uiGroupBackgroundColour1="ff2762b8" uiGroupBackgroundColour2="ff000000"
               uiGroupOutlineGradientType="Vertical" uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage="" componentRectangle="16 464 488 190"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="2" uiGroupTextMargin="0"
               componentLayerUid="2df24869af040000feffffffffffffff" uiType="uiGroup"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="8" vstIndex="119" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="65" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="chAlgoType"
             name="AlgoSelector1" modulatorMin="0" modulatorValue="8">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Algorithm-Selector"
               componentMouseCursor="2" componentGroupName="modulator-2" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff000000"
               uiComboOutlineColour="ff2762b8" uiComboTextColour="ffffffff"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;22;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;20;0;0;0;0;1;3" uiComboButtonColour="ff2762b8"
               uiComboBgColour="ff2762b8" uiComboMenuBackgroundColour="ff2762b8"
               uiComboMenuFontColour="ffffffff" uiComboMenuHighlightColour="ff2762b8"
               uiComboMenuFontHighlightedColour="ffffffff" uiComboContent="1  Rooms and Halls (Reverb)=1&#10;2  Plate Emulation (Plates)=2&#10;3  Chorus (Chorus1)=3&#10;4  Multi-Tap Delay (Delay2)=4&#10;5  Resonator (Chorus2)=5&#10;6  Inverse Room (Inverse)=6&#10;7  Gated Reverb (Gate)=7&#10;8  Chorus/Delays (Delay1)=8&#10; =9"
               uiComboMenuBackgroundRibbed="0" uiComboButtonGradient="1" uiComboButtonGradientColour1="6a517ab7"
               uiComboButtonGradientColour2="ff407ec0" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="22" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="562 40 105 56"
               componentLayerUid="2df24869af040000feffffffffffffff"/>
  </modulator>
  <panelCustomData/>
</panel>
